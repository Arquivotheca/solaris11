#
# Copyright (c) 2002, 2011, Oracle and/or its affiliates. All rights reserved.
#

#
# MAPFILE HEADER START
#
# WARNING:  STOP NOW.  DO NOT MODIFY THIS FILE.
# Object versioning must comply with the rules detailed in
#
#	usr/src/lib/README.mapfiles
#
# You should not be making modifications here until you've read the most current
# copy of that file. If you need help, contact a gatekeeper for guidance.
#
# MAPFILE HEADER END
#

$mapfile_version 2

STUB_OBJECT;

# Additional mapfiles goodies for libike.

SYMBOL_VERSION SUNWprivate_1.1 {
    global:

# SSH-defined callouts to IKE daemon's policy manager.
	ssh_policy_isakmp_id			{ TYPE=function; FLAGS=extern };
	ssh_policy_isakmp_sa_freed		{ TYPE=function; FLAGS=extern };
	ssh_policy_phase_i_notification		{ TYPE=function; FLAGS=extern };
	ssh_policy_cfg_notify_attrs		{ TYPE=function; FLAGS=extern };
	ssh_policy_isakmp_vendor_id		{ TYPE=function; FLAGS=extern };
	ssh_policy_cfg_fill_attrs		{ TYPE=function; FLAGS=extern };
	ssh_policy_new_connection_phase_ii	{ TYPE=function; FLAGS=extern };
	ssh_policy_ngm_select_sa		{ TYPE=function; FLAGS=extern };
	ssh_policy_delete			{ TYPE=function; FLAGS=extern };
	ssh_policy_qm_select_sa			{ TYPE=function; FLAGS=extern };
	ssh_policy_negotiation_done_phase_ii	{ TYPE=function; FLAGS=extern };
	ssh_policy_isakmp_select_sa		{ TYPE=function; FLAGS=extern };
	ssh_policy_find_public_key		{ TYPE=function; FLAGS=extern };
	ssh_policy_notification			{ TYPE=function; FLAGS=extern };
	ssh_policy_new_certificate		{ TYPE=function; FLAGS=extern };
	ssh_policy_negotiation_done_isakmp	{ TYPE=function; FLAGS=extern };
	ssh_policy_new_connection		{ TYPE=function; FLAGS=extern };
	ssh_policy_qm_remote_id			{ TYPE=function; FLAGS=extern };
	ssh_policy_isakmp_nonce_data_len	{ TYPE=function; FLAGS=extern };
	ssh_policy_get_certificate_authorities	{ TYPE=function; FLAGS=extern };
	ssh_policy_qm_local_id			{ TYPE=function; FLAGS=extern };
	ssh_policy_negotiation_done_qm		{ TYPE=function; FLAGS=extern };
	ssh_policy_phase_qm_notification	{ TYPE=function; FLAGS=extern };
	ssh_policy_qm_sa_freed			{ TYPE=function; FLAGS=extern };
	ssh_policy_new_connection_phase_qm	{ TYPE=function; FLAGS=extern };
	ssh_policy_phase_ii_sa_freed		{ TYPE=function; FLAGS=extern };
	ssh_policy_request_certificates		{ TYPE=function; FLAGS=extern };
	ssh_policy_find_pre_shared_key		{ TYPE=function; FLAGS=extern };
	ssh_policy_qm_nonce_data_len		{ TYPE=function; FLAGS=extern };
	ssh_policy_find_private_key		{ TYPE=function; FLAGS=extern };
	ssh_policy_isakmp_request_vendor_ids	{ TYPE=function; FLAGS=extern };
	ssh_policy_sun_info			{ TYPE=function; FLAGS=extern };
	ssh_policy_phase_i_server_changed	{ TYPE=function; FLAGS=extern };
	ssh_policy_phase_ii_server_changed	{ TYPE=function; FLAGS=extern };
	ssh_policy_phase_qm_server_changed	{ TYPE=function; FLAGS=extern };

# Globals that this library exports.
	door_lock		{ ASSERT { TYPE=data; SIZE=0x18 } };

# Additional callout for enhanced debugging.  It's possible we may be able
# to use SSH-supplied methods for this someday.
	ike_report_error			{ TYPE=function; FLAGS=extern };

# XXX This is probably a cheesy hack.
};

