#ifndef __577XX_INT_OFFSETS__
#define __577XX_INT_OFFSETS__

#define COMMON_SB_SIZE                                               (IRO[0].base)
#define COMMON_SB_DATA_SIZE                                          (IRO[1].base)
#define COMMON_SP_SB_SIZE                                            (IRO[2].base)
#define COMMON_SP_SB_DATA_SIZE                                       (IRO[3].base)
#define COMMON_DYNAMIC_HC_CONFIG_SIZE                                (IRO[4].base)
#define COMMON_ASM_ASSERT_MSG_SIZE                                   (IRO[5].base)
#define COMMON_ASM_ASSERT_INDEX_SIZE                                 (IRO[6].base)
#define COMMON_ASM_INVALID_ASSERT_OPCODE                             (IRO[7].base)
#define COMMON_RAM1_TEST_EVENT_ID                                    (IRO[8].base)
#define COMMON_INBOUND_INTERRUPT_TEST_AGG_INT_EVENT_ID               (IRO[9].base)
#define COMMON_INBOUND_INTERRUPT_TEST_AGG_INT_1_OFFSET               (IRO[10].base)
#define COMMON_INBOUND_INTERRUPT_TEST_AGG_INT_2_OFFSET               (IRO[11].base)
#define COMMON_INBOUND_INTERRUPT_TEST_AGG_INT_3_OFFSET               (IRO[12].base)
#define COMMON_INBOUND_INTERRUPT_TEST_AGG_INT_1_RESULT_OFFSET        (IRO[13].base)
#define COMMON_INBOUND_INTERRUPT_TEST_AGG_INT_2_RESULT_OFFSET        (IRO[14].base)
#define COMMON_INBOUND_INTERRUPT_TEST_AGG_INT_3_RESULT_OFFSET        (IRO[15].base)
#define COMMON_INBOUND_INTERRUPT_TEST_AGG_INT_1_MASK                 (IRO[16].base)
#define COMMON_INBOUND_INTERRUPT_TEST_AGG_INT_2_MASK                 (IRO[17].base)
#define COMMON_INBOUND_INTERRUPT_TEST_AGG_INT_3_MASK                 (IRO[18].base)
#define COMMON_KUKU_TEST_AGG_INT                                     (IRO[19].base)
#define COMMON_KUKU_TEST_EVENTID                                     (IRO[20].base)
#define COMMON_KUKU_PCI_READ_OPCODE                                  (IRO[21].base)
#define COMMON_KUKU_LOAD_CONTEXT_OPCODE                              (IRO[22].base)
#define COMMON_KUKU_LOAD_CONTEXT_INCVAL                              (IRO[23].base)
#define COMMON_KUKU_LOAD_CONTEXT_REGION                              (IRO[24].base)
#define COMMON_KUKU_LOAD_CONTEXT_CID                                 (IRO[25].base)
#define COMMON_KUKU_LOAD_CONTEXT_RUN_PBF_ECHO_TEST                   (IRO[26].base)
#define COMMON_KUKU_QM_PAUSE_OPCODE                                  (IRO[27].base)
#define COMMON_KUKU_TEST_UNUSED_FOCS_SUCCESS_OPCODE_VALUE            (IRO[28].base)
#define COMMON_KUKU_TEST_UNUSED_FOCS_OPCODE_VALUE                    (IRO[29].base)
/* Producer of slow path ring. An update of this field triggers a slow path operation on the device */
#define XSTORM_SPQ_PAGE_BASE_OFFSET(funcId)                          (IRO[30].base + ((funcId) * IRO[30].m1))
#define XSTORM_SPQ_PAGE_BASE_SIZE                                    (IRO[30].size)
#define XSTORM_SPQ_PROD_OFFSET(funcId)                               (IRO[31].base + ((funcId) * IRO[31].m1))
#define XSTORM_SPQ_PROD_SIZE                                         (IRO[31].size)
/* Location of slow path ring data. Should be zeroed in function close process */
#define XSTORM_SPQ_DATA_OFFSET(funcId)                               (IRO[32].base + ((funcId) * IRO[32].m1))
#define XSTORM_SPQ_DATA_SIZE                                         (IRO[32].size)
#define XSTORM_HIGIG_HDR_LENGTH_OFFSET(portId)                       (IRO[33].base + ((portId) * IRO[33].m1))
#define XSTORM_HIGIG_HDR_LENGTH_SIZE                                 (IRO[33].size)
/* Base physical address of slow path ring (VFs) */
#define XSTORM_VF_SPQ_PAGE_BASE_OFFSET(vfId)                         (IRO[34].base + ((vfId) * IRO[34].m1))
#define XSTORM_VF_SPQ_PAGE_BASE_SIZE                                 (IRO[34].size)
/* Producer of slow path ring. An update of this field triggers a slow path operation on the device (VFs) */
#define XSTORM_VF_SPQ_PROD_OFFSET(vfId)                              (IRO[35].base + ((vfId) * IRO[35].m1))
#define XSTORM_VF_SPQ_PROD_SIZE                                      (IRO[35].size)
/* Location of slow path ring data. Should be zeroed in function close process (VFs) */
#define XSTORM_VF_SPQ_DATA_OFFSET(vfId)                              (IRO[36].base + ((vfId) * IRO[36].m1))
#define XSTORM_VF_SPQ_DATA_SIZE                                      (IRO[36].size)
#define XSTORM_JUMBO_SUPPORT_OFFSET(pfId)                            (IRO[37].base + (((pfId)>>1) * IRO[37].m1) + (((pfId)&1) * IRO[37].m2))
#define XSTORM_JUMBO_SUPPORT_SIZE                                    (IRO[37].size)
#define XSTORM_COMMON_IP_ID_MASK_OFFSET                              (IRO[38].base)
#define XSTORM_COMMON_IP_ID_MASK_SIZE                                (IRO[38].size)
/* TCP real time clock parameters */
#define XSTORM_COMMON_RTC_PARAMS_OFFSET                              (IRO[39].base)
#define XSTORM_COMMON_RTC_PARAMS_SIZE                                (IRO[39].size)
/* Resolution of TCP real time clock */
#define XSTORM_COMMON_RTC_RESOLUTION_OFFSET                          (IRO[40].base)
#define XSTORM_COMMON_RTC_RESOLUTION_SIZE                            (IRO[40].size)
/* Description	Storms FW version number, written in Xstorm RAM upon init */
#define XSTORM_FW_VERSION_OFFSET                                     (IRO[41].base)
#define XSTORM_FW_VERSION_SIZE                                       (IRO[41].size)
/* Offload licensing values */
#define XSTORM_LICENSE_VALUES_OFFSET(pfId)                           (IRO[42].base + ((pfId) * IRO[42].m1))
#define XSTORM_LICENSE_VALUES_SIZE                                   (IRO[42].size)
/* Congestion management variables per port */
#define XSTORM_CMNG_PER_PORT_VARS_OFFSET(portId)                     (IRO[43].base + ((portId) * IRO[43].m1))
#define XSTORM_CMNG_PER_PORT_VARS_SIZE                               (IRO[43].size)
/* Rate shaping variables, per VNIC */
#define XSTORM_RATE_SHAPING_PER_VN_VARS_OFFSET(pfId)                 (IRO[44].base + ((pfId) * IRO[44].m1))
#define XSTORM_RATE_SHAPING_PER_VN_VARS_SIZE                         (IRO[44].size)
/* Fairness variables, per VNIC */
#define XSTORM_FAIRNESS_PER_VN_VARS_OFFSET(pfId)                     (IRO[45].base + ((pfId) * IRO[45].m1))
#define XSTORM_FAIRNESS_PER_VN_VARS_SIZE                             (IRO[45].size)
/* Offset of per-queue statistics in Xstorm. Need to be zeroes before clients which use this statistics queue are loaded. */
#define XSTORM_PER_QUEUE_STATS_OFFSET(xStatQueueId)                  (IRO[46].base + ((xStatQueueId) * IRO[46].m1))
#define XSTORM_PER_QUEUE_STATS_SIZE                                  (IRO[46].size)
/* Function enable bit for Xstorm. Need to be set before a new function (PF or VF) is loaded. */
#define XSTORM_FUNC_EN_OFFSET(funcId)                                (IRO[47].base + ((funcId) * IRO[47].m1))
#define XSTORM_FUNC_EN_SIZE                                          (IRO[47].size)
/* Maps between VF IDs and their parent PF */
#define XSTORM_VF_TO_PF_OFFSET(funcId)                               (IRO[48].base + ((funcId) * IRO[48].m1))
#define XSTORM_VF_TO_PF_SIZE                                         (IRO[48].size)
/* When set, all slow path commands for this function are recorded in Storm’s assert memory (debug feature). */
#define XSTORM_RECORD_SLOW_PATH_OFFSET(funcId)                       (IRO[49].base + ((funcId) * IRO[49].m1))
#define XSTORM_RECORD_SLOW_PATH_SIZE                                 (IRO[49].size)
/* Xstorm assert list location in RAM */
#define XSTORM_ASSERT_LIST_OFFSET(assertListEntry)                   (IRO[50].base + ((assertListEntry) * IRO[50].m1))
#define XSTORM_ASSERT_LIST_SIZE                                      (IRO[50].size)
/* Xstorm assert list index (producer) location in RAM */
#define XSTORM_ASSERT_LIST_INDEX_OFFSET                              (IRO[51].base)
#define XSTORM_ASSERT_LIST_INDEX_SIZE                                (IRO[51].size)
#define XSTORM_AGG_INT_INITIAL_CLEANUP_INDEX                         (IRO[52].base)
#define XSTORM_AGG_INT_FINAL_CLEANUP_INDEX                           (IRO[53].base)
#define XSTORM_AGG_INT_FINAL_CLEANUP_COMP_TYPE                       (IRO[54].base)
/* Internal statistics of error handlers in Everets2 */
#define XSTORM_ERROR_HANDLER_STATISTICS_RAM_OFFSET                   (IRO[55].base)
#define XSTORM_ERROR_HANDLER_STATISTICS_RAM_SIZE                     (IRO[55].size)
#define XSTORM_LB_PHYSICAL_QUEUES_INFO_OFFSET                        (IRO[56].base)
#define XSTORM_LB_PHYSICAL_QUEUES_INFO_SIZE                          (IRO[56].size)
/* VF-accessible queue zone in Xstorm in Everest2 */
#define XSTORM_QUEUE_ZONE_OFFSET(queueId)                            (IRO[57].base + ((queueId) * IRO[57].m1))
#define XSTORM_QUEUE_ZONE_SIZE                                       (IRO[57].size)
/* VF-accessible VF zone in Xstorm in Everest2 */
#define XSTORM_VF_ZONE_OFFSET(vfId)                                  (IRO[58].base + ((vfId) * IRO[58].m1))
#define XSTORM_VF_ZONE_SIZE                                          (IRO[58].size)
#define XSTORM_FIVE_TUPLE_SRC_EN_OFFSET                              (IRO[59].base)
#define XSTORM_FIVE_TUPLE_SRC_EN_SIZE                                (IRO[59].size)
#define XSTORM_E2_INTEG_RAM_OFFSET                                   (IRO[60].base)
#define XSTORM_E2_INTEG_RAM_SIZE                                     (IRO[60].size)
#define XSTORM_QM_OPPORTUNISTIC_RAM_OFFSET                           (IRO[61].base)
#define XSTORM_QM_OPPORTUNISTIC_RAM_SIZE                             (IRO[61].size)
#define XSTORM_SIDE_INFO_INPUT_LSB_OFFSET                            (IRO[62].base)
#define XSTORM_SIDE_INFO_INPUT_LSB_SIZE                              (IRO[62].size)
#define XSTORM_E2_INTEG_VLAN_ID_OFFSET                               (IRO[63].base)
#define XSTORM_E2_INTEG_VLAN_ID_SIZE                                 (IRO[63].size)
#define XSTORM_E2_INTEG_VLAN_ID_EN_OFFSET                            (IRO[64].base)
#define XSTORM_E2_INTEG_VLAN_ID_EN_SIZE                              (IRO[64].size)
#define XSTORM_VFC_TEST_LINE_OFFSET                                  (IRO[65].base)
#define XSTORM_VFC_TEST_LINE_SIZE                                    (IRO[65].size)
#define XSTORM_VFC_TEST_RESULT_OFFSET                                (IRO[66].base)
#define XSTORM_VFC_TEST_RESULT_SIZE                                  (IRO[66].size)
#define XSTORM_VFC_OP_GEN_VALUE                                      (IRO[67].base)
#define XSTORM_INBOUND_INTERRUPT_TEST_VF_INFO_SIZE_IN_BYTES          (IRO[68].base)
#define XSTORM_INBOUND_INTERRUPT_TEST_AGG_INT_1_INDEX                (IRO[69].base)
#define XSTORM_INBOUND_INTERRUPT_TEST_AGG_INT_2_INDEX                (IRO[70].base)
#define XSTORM_INBOUND_INTERRUPT_TEST_AGG_INT_3_INDEX                (IRO[71].base)
#define XSTORM_DPM_BUFFER_OFFSET                                     (IRO[72].base)
#define XSTORM_DPM_BUFFER_SIZE                                       (IRO[72].size)
#define XSTORM_KUKU_TEST_OPCODE_OFFSET                               (IRO[73].base)
#define XSTORM_KUKU_TEST_OPCODE_SIZE                                 (IRO[73].size)
#define XSTORM_KUKU_LOAD_CONTEXT_TEST_OFFSET                         (IRO[74].base)
#define XSTORM_KUKU_LOAD_CONTEXT_TEST_SIZE                           (IRO[74].size)
#define XSTORM_KUKU_OP_GEN_VALUE                                     (IRO[75].base)
#define XSTORM_QM_PAUSE_TEST_QUEUE_MASK_OFFSET                       (IRO[76].base)
#define XSTORM_QM_PAUSE_TEST_QUEUE_MASK_SIZE                         (IRO[76].size)
#define XSTORM_QM_PAUSE_TEST_GROUP_OFFSET                            (IRO[77].base)
#define XSTORM_QM_PAUSE_TEST_GROUP_SIZE                              (IRO[77].size)
#define XSTORM_QM_PAUSE_TEST_PORT_OFFSET                             (IRO[78].base)
#define XSTORM_QM_PAUSE_TEST_PORT_SIZE                               (IRO[78].size)
#define XSTORM_KUKU_PBF_ECHO_OPCODE                                  (IRO[79].base)
#define XSTORM_KUKU_PBF_ECHO_INCVAL                                  (IRO[80].base)
#define XSTORM_KUKU_PBF_ECHO_REGION                                  (IRO[81].base)
#define XSTORM_KUKU_PBF_ECHO_RUN_PBF_ECHO_TEST                       (IRO[82].base)
#define XSTORM_KUKU_PBF_ECHO_CID                                     (IRO[83].base)
#define XSTORM_KUKU_PBF_ECHO_SUCCESS_VALUE                           (IRO[84].base)
#define TSTORM_INDIRECTION_TABLE_OFFSET(pfId)                        (IRO[85].base + ((pfId) * IRO[85].m1))
#define TSTORM_INDIRECTION_TABLE_SIZE                                (IRO[85].size)
#define TSTORM_INDIRECTION_TABLE_ENTRY_SIZE                          (IRO[86].base)
/* TCP real time clock parameters */
#define TSTORM_COMMON_RTC_PARAMS_OFFSET                              (IRO[87].base)
#define TSTORM_COMMON_RTC_PARAMS_SIZE                                (IRO[87].size)
/* Tstorm assert list location in RAM */
#define TSTORM_ASSERT_LIST_OFFSET(assertListEntry)                   (IRO[88].base + ((assertListEntry) * IRO[88].m1))
#define TSTORM_ASSERT_LIST_SIZE                                      (IRO[88].size)
/* Tstorm assert list index (producer) location in RAM */
#define TSTORM_ASSERT_LIST_INDEX_OFFSET                              (IRO[89].base)
#define TSTORM_ASSERT_LIST_INDEX_SIZE                                (IRO[89].size)
/* Description	Function enable bit for Tstorm. Need to be set before a new function (PF or VF) is loaded. */
#define TSTORM_FUNC_EN_OFFSET(funcId)                                (IRO[90].base + ((funcId) * IRO[90].m1))
#define TSTORM_FUNC_EN_SIZE                                          (IRO[90].size)
/* Maps between VF IDs and their parent PF */
#define TSTORM_VF_TO_PF_OFFSET(funcId)                               (IRO[91].base + ((funcId) * IRO[91].m1))
#define TSTORM_VF_TO_PF_SIZE                                         (IRO[91].size)
/* When set, all slow path commands for this function are recorded in Storm’s assert memory (debug feature). */
#define TSTORM_RECORD_SLOW_PATH_OFFSET(funcId)                       (IRO[92].base + ((funcId) * IRO[92].m1))
#define TSTORM_RECORD_SLOW_PATH_SIZE                                 (IRO[92].size)
/* Offset of per-queue statistics in Tstorm. Need to be zeroes before clients which use this statistics queue are loaded. */
#define TSTORM_PER_QUEUE_STATS_OFFSET(tStatQueueId)                  (IRO[93].base + ((tStatQueueId) * IRO[93].m1))
#define TSTORM_PER_QUEUE_STATS_SIZE                                  (IRO[93].size)
/* SAFC workaround handler enable, needed in Everest1h A0 only. */
#define TSTORM_COMMON_SAFC_WORKAROUND_ENABLE_OFFSET                  (IRO[94].base)
#define TSTORM_COMMON_SAFC_WORKAROUND_ENABLE_SIZE                    (IRO[94].size)
/* SAFC workaround handler timeout, needed in Everest1h A0 only. */
#define TSTORM_COMMON_SAFC_WORKAROUND_TIMEOUT_10USEC_OFFSET          (IRO[95].base)
#define TSTORM_COMMON_SAFC_WORKAROUND_TIMEOUT_10USEC_SIZE            (IRO[95].size)
#define CSTORM_PFC_STRUCT_PER_PORT_OFFSET(portId)                    (IRO[96].base + ((portId) * IRO[96].m1))
#define CSTORM_PFC_STRUCT_PER_PORT_SIZE                              (IRO[96].size)
/* Internal statistics of error handlers in Everets2 */
#define TSTORM_ERROR_HANDLER_STATISTICS_RAM_OFFSET                   (IRO[97].base)
#define TSTORM_ERROR_HANDLER_STATISTICS_RAM_SIZE                     (IRO[97].size)
#define TSTORM_VFC_TEST_RSS_KEY_OFFSET(portId)                       (IRO[98].base + ((portId) * IRO[98].m1))
#define TSTORM_VFC_TEST_RSS_KEY_SIZE                                 (IRO[98].size)
/* VF-accessible queue zone in Tstorm in Everest2 */
#define TSTORM_QUEUE_ZONE_OFFSET(queueId)                            (IRO[99].base + ((queueId) * IRO[99].m1))
#define TSTORM_QUEUE_ZONE_SIZE                                       (IRO[99].size)
/* VF-accessible VF zone in Tstorm in Everest2 */
#define TSTORM_VF_ZONE_OFFSET(vfId)                                  (IRO[100].base + ((vfId) * IRO[100].m1))
#define TSTORM_VF_ZONE_SIZE                                          (IRO[100].size)
#define TSTORM_E2_INTEG_RAM_OFFSET                                   (IRO[101].base)
#define TSTORM_E2_INTEG_RAM_SIZE                                     (IRO[101].size)
#define TSTORM_LSB_SIDE_BAND_INFO_OFFSET                             (IRO[102].base)
#define TSTORM_LSB_SIDE_BAND_INFO_SIZE                               (IRO[102].size)
#define TSTORM_MSB_SIDE_BAND_INFO_OFFSET                             (IRO[103].base)
#define TSTORM_MSB_SIDE_BAND_INFO_SIZE                               (IRO[103].size)
#define TSTORM_VFC_TEST_LINE_OFFSET                                  (IRO[104].base)
#define TSTORM_VFC_TEST_LINE_SIZE                                    (IRO[104].size)
#define TSTORM_VFC_TEST_RESULT_OFFSET                                (IRO[105].base)
#define TSTORM_VFC_TEST_RESULT_SIZE                                  (IRO[105].size)
#define TSTORM_VFC_OP_GEN_VALUE                                      (IRO[106].base)
#define TSTORM_INBOUND_INTERRUPT_TEST_VF_INFO_SIZE_IN_BYTES          (IRO[107].base)
#define TSTORM_INBOUND_INTERRUPT_TEST_AGG_INT_1_INDEX                (IRO[108].base)
#define TSTORM_INBOUND_INTERRUPT_TEST_AGG_INT_2_INDEX                (IRO[109].base)
#define TSTORM_INBOUND_INTERRUPT_TEST_AGG_INT_3_INDEX                (IRO[110].base)
#define TSTORM_KUKU_TEST_OPCODE_OFFSET                               (IRO[111].base)
#define TSTORM_KUKU_TEST_OPCODE_SIZE                                 (IRO[111].size)
#define TSTORM_KUKU_LOAD_CONTEXT_TEST_OFFSET                         (IRO[112].base)
#define TSTORM_KUKU_LOAD_CONTEXT_TEST_SIZE                           (IRO[112].size)
#define TSTORM_KUKU_OP_GEN_VALUE                                     (IRO[113].base)
#define TSTORM_PCI_READ_TEST_ADDRESS_LO_OFFSET                       (IRO[114].base)
#define TSTORM_PCI_READ_TEST_ADDRESS_LO_SIZE                         (IRO[114].size)
#define TSTORM_PCI_READ_TEST_ADDRESS_HI_OFFSET                       (IRO[115].base)
#define TSTORM_PCI_READ_TEST_ADDRESS_HI_SIZE                         (IRO[115].size)
#define TSTORM_PCI_READ_TEST_RAM_ADDRESS_OFFSET                      (IRO[116].base)
#define TSTORM_PCI_READ_TEST_RAM_ADDRESS_SIZE                        (IRO[116].size)
#define TSTORM_PCI_READ_TEST_PCI_ENTITY_OFFSET                       (IRO[117].base)
#define TSTORM_PCI_READ_TEST_PCI_ENTITY_SIZE                         (IRO[117].size)
/* Status blocks location in Cstorm RAM */
#define CSTORM_STATUS_BLOCK_OFFSET(sbId)                             (IRO[118].base + ((sbId) * IRO[118].m1))
#define CSTORM_STATUS_BLOCK_SIZE                                     (IRO[118].size)
/* Status blocks configuration location in Cstorm RAM */
#define CSTORM_STATUS_BLOCK_DATA_OFFSET(sbId)                        (IRO[119].base + ((sbId) * IRO[119].m1))
#define CSTORM_STATUS_BLOCK_DATA_SIZE                                (IRO[119].size)
/* Status blocks timeout per index in Cstorm RAM */
#define CSTORM_STATUS_BLOCK_DATA_TIMEOUT_OFFSET(sbId,hcIndex)        (IRO[120].base + ((sbId) * IRO[120].m1) + ((hcIndex) * IRO[120].m2))
#define CSTORM_STATUS_BLOCK_DATA_TIMEOUT_SIZE                        (IRO[120].size)
/* Status blocks flags per index in Cstorm RAM */
#define CSTORM_STATUS_BLOCK_DATA_FLAGS_OFFSET(sbId,hcIndex)          (IRO[121].base + ((sbId) * IRO[121].m1) + ((hcIndex) * IRO[121].m2))
#define CSTORM_STATUS_BLOCK_DATA_FLAGS_SIZE                          (IRO[121].size)
/* Block of status block synchronization lines in Cstorm RAM */
#define CSTORM_SYNC_BLOCK_OFFSET(sbId)                               (IRO[122].base + ((sbId) * IRO[122].m1))
#define CSTORM_SYNC_BLOCK_SIZE                                       (IRO[122].size)
/* Status block synchronization lines in Cstorm RAM (Everest2) */
#define CSTORM_HC_SYNC_LINE_INDEX_E2_OFFSET(hcIndex,sbId)            (IRO[123].base + (((hcIndex)>>2) * IRO[123].m1) + (((hcIndex)&3) * IRO[123].m2) + ((sbId) * IRO[123].m3))
#define CSTORM_HC_SYNC_LINE_INDEX_E2_SIZE                            (IRO[123].size)
/* Status block synchronization lines in Cstorm RAM (Everest1/1h) */
#define CSTORM_HC_SYNC_LINE_INDEX_E1X_OFFSET(hcIndex,sbId)           (IRO[124].base + ((hcIndex) * IRO[124].m1) + ((sbId) * IRO[124].m2))
#define CSTORM_HC_SYNC_LINE_INDEX_E1X_SIZE                           (IRO[124].size)
/* Dynamic host coalescing counter in synchronization lines */
#define CSTORM_HC_SYNC_LINE_DHC_OFFSET(sbSyncLines,sbId)             (IRO[125].base + ((sbSyncLines) * IRO[125].m1) + ((sbId) * IRO[125].m2))
#define CSTORM_HC_SYNC_LINE_DHC_SIZE                                 (IRO[125].size)
/* Slow path status blocks location in Cstorm RAM. */
#define CSTORM_SP_STATUS_BLOCK_OFFSET(pfId)                          (IRO[126].base + ((pfId) * IRO[126].m1))
#define CSTORM_SP_STATUS_BLOCK_SIZE                                  (IRO[126].size)
/* Slow path status blocks configuration location in Cstorm RAM. */
#define CSTORM_SP_STATUS_BLOCK_DATA_OFFSET(pfId)                     (IRO[127].base + ((pfId) * IRO[127].m1))
#define CSTORM_SP_STATUS_BLOCK_DATA_SIZE                             (IRO[127].size)
/* Block of slow path status blocks synchronization lines in Cstorm RAM. */
#define CSTORM_SP_SYNC_BLOCK_OFFSET(pfId)                            (IRO[128].base + ((pfId) * IRO[128].m1))
#define CSTORM_SP_SYNC_BLOCK_SIZE                                    (IRO[128].size)
/* Slow path status blocks synchronization line in Cstorm RAM. */
#define CSTORM_SP_HC_SYNC_LINE_INDEX_OFFSET(hcSpIndex,pfId)          (IRO[129].base + ((hcSpIndex) * IRO[129].m1) + ((pfId) * IRO[129].m2))
#define CSTORM_SP_HC_SYNC_LINE_INDEX_SIZE                            (IRO[129].size)
/* Configuration of dynamic host coalescing algorithm. */
#define CSTORM_DYNAMIC_HC_CONFIG_OFFSET(pfId)                        (IRO[130].base + ((pfId) * IRO[130].m1))
#define CSTORM_DYNAMIC_HC_CONFIG_SIZE                                (IRO[130].size)
/* Cstorm assert list location in RAM  */
#define CSTORM_ASSERT_LIST_OFFSET(assertListEntry)                   (IRO[131].base + ((assertListEntry) * IRO[131].m1))
#define CSTORM_ASSERT_LIST_SIZE                                      (IRO[131].size)
/* Cstorm assert list index (producer) location in RAM */
#define CSTORM_ASSERT_LIST_INDEX_OFFSET                              (IRO[132].base)
#define CSTORM_ASSERT_LIST_INDEX_SIZE                                (IRO[132].size)
/* Function enable bit for Cstorm. Need to be set before a new function (PF or VF) is loaded. */
#define CSTORM_FUNC_EN_OFFSET(funcId)                                (IRO[133].base + ((funcId) * IRO[133].m1))
#define CSTORM_FUNC_EN_SIZE                                          (IRO[133].size)
/* Maps between VF IDs and their parent PF  */
#define CSTORM_VF_TO_PF_OFFSET(funcId)                               (IRO[134].base + ((funcId) * IRO[134].m1))
#define CSTORM_VF_TO_PF_SIZE                                         (IRO[134].size)
/* Configuration of dynamic host coalescing algorithm. */
#define CSTORM_RECORD_SLOW_PATH_OFFSET(funcId)                       (IRO[135].base + ((funcId) * IRO[135].m1))
#define CSTORM_RECORD_SLOW_PATH_SIZE                                 (IRO[135].size)
/* Dynamic HC driver counter, written on fast path */
#define CSTORM_BYTE_COUNTER_OFFSET(sbId,dhcIndex)                    (IRO[136].base + ((sbId) * IRO[136].m1) + ((dhcIndex) * IRO[136].m2))
#define CSTORM_BYTE_COUNTER_SIZE                                     (IRO[136].size)
/* Event ring configuration location on Cstorm RAM */
#define CSTORM_EVENT_RING_DATA_OFFSET(pfId)                          (IRO[137].base + (((pfId)>>1) * IRO[137].m1) + (((pfId)&1) * IRO[137].m2))
#define CSTORM_EVENT_RING_DATA_SIZE                                  (IRO[137].size)
/* Event ring producer location on Cstorm RAM */
#define CSTORM_EVENT_RING_PROD_OFFSET(pfId)                          (IRO[138].base + (((pfId)>>1) * IRO[138].m1) + (((pfId)&1) * IRO[138].m2))
#define CSTORM_EVENT_RING_PROD_SIZE                                  (IRO[138].size)
/* Valid bit of VF-PF channel, used by PF driver to enable the communication channel. */
#define CSTORM_VF_PF_CHANNEL_STATE_OFFSET(vfId)                      (IRO[139].base + ((vfId) * IRO[139].m1))
#define CSTORM_VF_PF_CHANNEL_STATE_SIZE                              (IRO[139].size)
#define CSTORM_VF_PF_CHANNEL_VALID_OFFSET(vfId)                      (IRO[140].base + ((vfId) * IRO[140].m1))
#define CSTORM_VF_PF_CHANNEL_VALID_SIZE                              (IRO[140].size)
/* IGU mode to use in Everest2 (use enum igu_mode) */
#define CSTORM_IGU_MODE_OFFSET                                       (IRO[141].base)
#define CSTORM_IGU_MODE_SIZE                                         (IRO[141].size)
/* Internal statistics of error handlers in Everets2 */
#define CSTORM_ERROR_HANDLER_STATISTICS_RAM_OFFSET                   (IRO[142].base)
#define CSTORM_ERROR_HANDLER_STATISTICS_RAM_SIZE                     (IRO[142].size)
/* Driver polls this offset after FLR final cleanup operation to see when the cleanup operation finished */
#define CSTORM_FINAL_CLEANUP_COMPLETE_OFFSET(funcId)                 (IRO[143].base + ((funcId) * IRO[143].m1))
#define CSTORM_FINAL_CLEANUP_COMPLETE_SIZE                           (IRO[143].size)
/* VF-accessible queue zone in Cstorm in Everest2 */
#define CSTORM_QUEUE_ZONE_OFFSET(queueId)                            (IRO[144].base + ((queueId) * IRO[144].m1))
#define CSTORM_QUEUE_ZONE_SIZE                                       (IRO[144].size)
/* VF-accessible VF zone in Cstorm in Everest2 */
#define CSTORM_VF_ZONE_OFFSET(vfId)                                  (IRO[145].base + ((vfId) * IRO[145].m1))
#define CSTORM_VF_ZONE_SIZE                                          (IRO[145].size)
#define CSTORM_INBOUND_INTERRUPT_TEST_VF_INFO_SIZE_IN_BYTES          (IRO[146].base)
#define CSTORM_INBOUND_INTERRUPT_TEST_AGG_INT_1_INDEX                (IRO[147].base)
#define CSTORM_INBOUND_INTERRUPT_TEST_AGG_INT_2_INDEX                (IRO[148].base)
#define CSTORM_INBOUND_INTERRUPT_TEST_AGG_INT_3_INDEX                (IRO[149].base)
#define CSTORM_KUKU_TEST_OPCODE_OFFSET                               (IRO[150].base)
#define CSTORM_KUKU_TEST_OPCODE_SIZE                                 (IRO[150].size)
#define CSTORM_KUKU_LOAD_CONTEXT_TEST_OFFSET                         (IRO[151].base)
#define CSTORM_KUKU_LOAD_CONTEXT_TEST_SIZE                           (IRO[151].size)
#define CSTORM_KUKU_OP_GEN_VALUE                                     (IRO[152].base)
#define USTORM_INDIRECTION_TABLE_OFFSET(portId)                      (IRO[153].base + ((portId) * IRO[153].m1))
#define USTORM_INDIRECTION_TABLE_SIZE                                (IRO[153].size)
#define USTORM_INDIRECTION_TABLE_ENTRY_SIZE                          (IRO[154].base)
/* Ustorm assert list location in RAM */
#define USTORM_ASSERT_LIST_OFFSET(assertListEntry)                   (IRO[155].base + ((assertListEntry) * IRO[155].m1))
#define USTORM_ASSERT_LIST_SIZE                                      (IRO[155].size)
/* Ustorm assert list index (producer) location in RAM */
#define USTORM_ASSERT_LIST_INDEX_OFFSET                              (IRO[156].base)
#define USTORM_ASSERT_LIST_INDEX_SIZE                                (IRO[156].size)
/* Function enable bit for Ustorm. Need to be set before a new function (PF or VF) is loaded. */
#define USTORM_FUNC_EN_OFFSET(funcId)                                (IRO[157].base + ((funcId) * IRO[157].m1))
#define USTORM_FUNC_EN_SIZE                                          (IRO[157].size)
/* Maps between VF IDs and their parent PF */
#define USTORM_VF_TO_PF_OFFSET(funcId)                               (IRO[158].base + ((funcId) * IRO[158].m1))
#define USTORM_VF_TO_PF_SIZE                                         (IRO[158].size)
/* When set, all slow path commands for this function are recorded in Storm’s assert memory (debug feature). */
#define USTORM_RECORD_SLOW_PATH_OFFSET(funcId)                       (IRO[159].base + ((funcId) * IRO[159].m1))
#define USTORM_RECORD_SLOW_PATH_SIZE                                 (IRO[159].size)
/* Offset of per-queue statistics in Ustorm. Need to be zeroes before clients which use this statistics queue are loaded. */
#define USTORM_PER_QUEUE_STATS_OFFSET(uStatQueueId)                  (IRO[160].base + ((uStatQueueId) * IRO[160].m1))
#define USTORM_PER_QUEUE_STATS_SIZE                                  (IRO[160].size)
/* Valid physical address on host memory, used in Everest1 for PXP memory bug workaround */
#define USTORM_MEM_WORKAROUND_ADDRESS_OFFSET(pfId)                   (IRO[161].base + ((pfId) * IRO[161].m1))
#define USTORM_MEM_WORKAROUND_ADDRESS_SIZE                           (IRO[161].size)
/* Enable for pause on exhausted ring feature for Ethernet */
#define USTORM_ETH_PAUSE_ENABLED_OFFSET(portId)                      (IRO[162].base + ((portId) * IRO[162].m1))
#define USTORM_ETH_PAUSE_ENABLED_SIZE                                (IRO[162].size)
/* Enable for pause on exhausted ring feature for TOE */
#define USTORM_TOE_PAUSE_ENABLED_OFFSET(portId)                      (IRO[163].base + ((portId) * IRO[163].m1))
#define USTORM_TOE_PAUSE_ENABLED_SIZE                                (IRO[163].size)
/* Timeout for stopping sending pause commands from RX firmware, in order to avoid “constant pause” in case of driver not responding. */
#define USTORM_MAX_PAUSE_TIME_USEC_OFFSET(portId)                    (IRO[164].base + ((portId) * IRO[164].m1))
#define USTORM_MAX_PAUSE_TIME_USEC_SIZE                              (IRO[164].size)
/* Internal statistics of error handlers in Everets2 */
#define USTORM_ERROR_HANDLER_STATISTICS_RAM_OFFSET                   (IRO[165].base)
#define USTORM_ERROR_HANDLER_STATISTICS_RAM_SIZE                     (IRO[165].size)
/* VF-accessible queue zone in Ustorm in Everest2 */
#define USTORM_QUEUE_ZONE_OFFSET(queueId)                            (IRO[166].base + ((queueId) * IRO[166].m1))
#define USTORM_QUEUE_ZONE_SIZE                                       (IRO[166].size)
/* VF-accessible VF zone in Ustorm in Everest2 */
#define USTORM_VF_ZONE_OFFSET(vfId)                                  (IRO[167].base + ((vfId) * IRO[167].m1))
#define USTORM_VF_ZONE_SIZE                                          (IRO[167].size)
#define USTORM_INBOUND_INTERRUPT_TEST_VF_INFO_SIZE_IN_BYTES          (IRO[168].base)
#define USTORM_INBOUND_INTERRUPT_TEST_AGG_INT_1_INDEX                (IRO[169].base)
#define USTORM_INBOUND_INTERRUPT_TEST_AGG_INT_2_INDEX                (IRO[170].base)
#define USTORM_INBOUND_INTERRUPT_TEST_AGG_INT_3_INDEX                (IRO[171].base)
#define USTORM_KUKU_TEST_OPCODE_OFFSET                               (IRO[172].base)
#define USTORM_KUKU_TEST_OPCODE_SIZE                                 (IRO[172].size)
#define USTORM_KUKU_LOAD_CONTEXT_TEST_OFFSET                         (IRO[173].base)
#define USTORM_KUKU_LOAD_CONTEXT_TEST_SIZE                           (IRO[173].size)
#define USTORM_KUKU_OP_GEN_VALUE                                     (IRO[174].base)
#define USTORM_PCI_READ_TEST_ADDRESS_LO_OFFSET                       (IRO[175].base)
#define USTORM_PCI_READ_TEST_ADDRESS_LO_SIZE                         (IRO[175].size)
#define USTORM_PCI_READ_TEST_ADDRESS_HI_OFFSET                       (IRO[176].base)
#define USTORM_PCI_READ_TEST_ADDRESS_HI_SIZE                         (IRO[176].size)
#define USTORM_PCI_READ_TEST_RAM_ADDRESS_OFFSET                      (IRO[177].base)
#define USTORM_PCI_READ_TEST_RAM_ADDRESS_SIZE                        (IRO[177].size)
#define USTORM_PCI_READ_TEST_PCI_ENTITY_OFFSET                       (IRO[178].base)
#define USTORM_PCI_READ_TEST_PCI_ENTITY_SIZE                         (IRO[178].size)
/* PF-related classification data, used in Everest1/1h */
#define TSTORM_FUNCTION_COMMON_CONFIG_OFFSET(pfId)                   (IRO[179].base + ((pfId) * IRO[179].m1))
#define TSTORM_FUNCTION_COMMON_CONFIG_SIZE                           (IRO[179].size)
/* PF-related filter bits, used in Everest1/1h */
#define TSTORM_MAC_FILTER_CONFIG_OFFSET(pfId)                        (IRO[180].base + ((pfId) * IRO[180].m1))
#define TSTORM_MAC_FILTER_CONFIG_SIZE                                (IRO[180].size)
/* PF-related approximate multicast bits, used in Everest1h */
#define TSTORM_APPROXIMATE_MATCH_MULTICAST_FILTERING_OFFSET(pfId)    (IRO[181].base + ((pfId) * IRO[181].m1))
#define TSTORM_APPROXIMATE_MATCH_MULTICAST_FILTERING_SIZE            (IRO[181].size)
/* Set in order to accept packets which failed MF classification (for debug purpose) */
#define TSTORM_ACCEPT_CLASSIFY_FAILED_OFFSET                         (IRO[182].base)
#define TSTORM_ACCEPT_CLASSIFY_FAILED_SIZE                           (IRO[182].size)
#define USTORM_CQE_PAGE_NEXT_OFFSET(portId,clientId)                 (IRO[183].base + ((portId) * IRO[183].m1) + ((clientId) * IRO[183].m2))
#define USTORM_CQE_PAGE_NEXT_SIZE                                    (IRO[183].size)
/* TPA aggregation data (should be zeroed by driver upon init as init tool has limitation of data unions) */
#define USTORM_AGG_DATA_OFFSET                                       (IRO[184].base)
#define USTORM_AGG_DATA_SIZE                                         (IRO[184].size)
/* TPA aggregation timeout value */
#define USTORM_TPA_BTR_OFFSET                                        (IRO[185].base)
#define USTORM_TPA_BTR_SIZE                                          (IRO[185].size)
/* Minimum byte count for a single packet in dynamic host coalescing counters */
#define USTORM_ETH_DYNAMIC_HC_PARAM_OFFSET                           (IRO[186].base)
#define USTORM_ETH_DYNAMIC_HC_PARAM_SIZE                             (IRO[186].size)
/* RX rings producers, updated in fats path in Ustorm RAM (Everest1/1h) */
#define USTORM_RX_PRODS_E1X_OFFSET(portId,clientId)                  (IRO[187].base + ((portId) * IRO[187].m1) + ((clientId) * IRO[187].m2))
#define USTORM_RX_PRODS_E1X_SIZE                                     (IRO[187].size)
/* RX rings producers, updated in fats path in Ustorm RAM (Everest2) */
#define USTORM_RX_PRODS_E2_OFFSET(qzoneId)                           (IRO[188].base + ((qzoneId) * IRO[188].m1))
#define USTORM_RX_PRODS_E2_SIZE                                      (IRO[188].size)
#define XSTORM_TCP_GLOBAL_DEL_ACK_COUNTER_ENABLED_OFFSET(portId)     (IRO[189].base + ((portId) * IRO[189].m1))
#define XSTORM_TCP_GLOBAL_DEL_ACK_COUNTER_ENABLED_SIZE               (IRO[189].size)
#define XSTORM_TCP_GLOBAL_DEL_ACK_COUNTER_MAX_COUNT_OFFSET(portId)   (IRO[190].base + ((portId) * IRO[190].m1))
#define XSTORM_TCP_GLOBAL_DEL_ACK_COUNTER_MAX_COUNT_SIZE             (IRO[190].size)
#define XSTORM_TCP_IPID_OFFSET(pfId)                                 (IRO[191].base + (((pfId)>>1) * IRO[191].m1) + (((pfId)&1) * IRO[191].m2))
#define XSTORM_TCP_IPID_SIZE                                         (IRO[191].size)
#define XSTORM_TCP_TX_SWS_TIMER_VAL_OFFSET(pfId)                     (IRO[192].base + (((pfId)>>1) * IRO[192].m1) + (((pfId)&1) * IRO[192].m2))
#define XSTORM_TCP_TX_SWS_TIMER_VAL_SIZE                             (IRO[192].size)
#define TSTORM_TCP_DUPLICATE_ACK_THRESHOLD_OFFSET(pfId)              (IRO[193].base + ((pfId) * IRO[193].m1))
#define TSTORM_TCP_DUPLICATE_ACK_THRESHOLD_SIZE                      (IRO[193].size)
#define TSTORM_TCP_MAX_CWND_OFFSET(pfId)                             (IRO[194].base + ((pfId) * IRO[194].m1))
#define TSTORM_TCP_MAX_CWND_SIZE                                     (IRO[194].size)
#define TSTORM_TCP_GLOBAL_PARAMS_OFFSET                              (IRO[195].base)
#define TSTORM_TCP_GLOBAL_PARAMS_SIZE                                (IRO[195].size)
#define TSTORM_TCP_ISLES_ARRAY_DESCRIPTOR_OFFSET                     (IRO[196].base)
#define TSTORM_TCP_ISLES_ARRAY_DESCRIPTOR_SIZE                       (IRO[196].size)
#define TSTORM_TCP_ISLES_ARRAY_OFFSET                                (IRO[197].base)
#define TSTORM_TCP_ISLES_ARRAY_SIZE                                  (IRO[197].size)
#define XSTORM_TOE_LLC_SNAP_ENABLED_OFFSET(pfId)                     (IRO[198].base + (((pfId)>>1) * IRO[198].m1) + (((pfId)&1) * IRO[198].m2))
#define XSTORM_TOE_LLC_SNAP_ENABLED_SIZE                             (IRO[198].size)
#define XSTORM_OUT_OCTETS_OFFSET                                     (IRO[199].base)
#define XSTORM_OUT_OCTETS_SIZE                                       (IRO[199].size)
#define TSTORM_TOE_MAX_SEG_RETRANSMIT_OFFSET(pfId)                   (IRO[200].base + ((pfId) * IRO[200].m1))
#define TSTORM_TOE_MAX_SEG_RETRANSMIT_SIZE                           (IRO[200].size)
#define TSTORM_TOE_DOUBT_REACHABILITY_OFFSET(pfId)                   (IRO[201].base + ((pfId) * IRO[201].m1))
#define TSTORM_TOE_DOUBT_REACHABILITY_SIZE                           (IRO[201].size)
#define TSTORM_TOE_MAX_DOMINANCE_VALUE_OFFSET                        (IRO[202].base)
#define TSTORM_TOE_MAX_DOMINANCE_VALUE_SIZE                          (IRO[202].size)
#define TSTORM_TOE_DOMINANCE_THRESHOLD_OFFSET                        (IRO[203].base)
#define TSTORM_TOE_DOMINANCE_THRESHOLD_SIZE                          (IRO[203].size)
#define CSTORM_TOE_CQ_CONS_PTR_LO_OFFSET(rssId,portId)               (IRO[204].base + ((rssId) * IRO[204].m1) + ((portId) * IRO[204].m2))
#define CSTORM_TOE_CQ_CONS_PTR_LO_SIZE                               (IRO[204].size)
#define CSTORM_TOE_CQ_CONS_PTR_HI_OFFSET(rssId,portId)               (IRO[205].base + ((rssId) * IRO[205].m1) + ((portId) * IRO[205].m2))
#define CSTORM_TOE_CQ_CONS_PTR_HI_SIZE                               (IRO[205].size)
#define CSTORM_TOE_CQ_PROD_OFFSET(rssId,portId)                      (IRO[206].base + ((rssId) * IRO[206].m1) + ((portId) * IRO[206].m2))
#define CSTORM_TOE_CQ_PROD_SIZE                                      (IRO[206].size)
#define CSTORM_TOE_CQ_CONS_OFFSET(rssId,portId)                      (IRO[207].base + ((rssId) * IRO[207].m1) + ((portId) * IRO[207].m2))
#define CSTORM_TOE_CQ_CONS_SIZE                                      (IRO[207].size)
#define CSTORM_TOE_CQ_NXT_PAGE_ADDR_VALID_OFFSET(rssId,portId)       (IRO[208].base + ((rssId) * IRO[208].m1) + ((portId) * IRO[208].m2))
#define CSTORM_TOE_CQ_NXT_PAGE_ADDR_VALID_SIZE                       (IRO[208].size)
#define CSTORM_TOE_STATUS_BLOCK_ID_OFFSET(rssId,portId)              (IRO[209].base + ((rssId) * IRO[209].m1) + ((portId) * IRO[209].m2))
#define CSTORM_TOE_STATUS_BLOCK_ID_SIZE                              (IRO[209].size)
#define CSTORM_TOE_STATUS_BLOCK_INDEX_OFFSET(rssId,portId)           (IRO[210].base + ((rssId) * IRO[210].m1) + ((portId) * IRO[210].m2))
#define CSTORM_TOE_STATUS_BLOCK_INDEX_SIZE                           (IRO[210].size)
#define CSTORM_TOE_CQ_NEXT_PAGE_BASE_ADDR_LO_OFFSET(rssId,portId)    (IRO[211].base + ((rssId) * IRO[211].m1) + ((portId) * IRO[211].m2))
#define CSTORM_TOE_CQ_NEXT_PAGE_BASE_ADDR_LO_SIZE                    (IRO[211].size)
#define CSTORM_TOE_CQ_NEXT_PAGE_BASE_ADDR_HI_OFFSET(rssId,portId)    (IRO[212].base + ((rssId) * IRO[212].m1) + ((portId) * IRO[212].m2))
#define CSTORM_TOE_CQ_NEXT_PAGE_BASE_ADDR_HI_SIZE                    (IRO[212].size)
#define CSTORM_TOE_DYNAMIC_HC_PROD_OFFSET(rssId,portId)              (IRO[213].base + ((rssId) * IRO[213].m1) + ((portId) * IRO[213].m2))
#define CSTORM_TOE_DYNAMIC_HC_PROD_SIZE                              (IRO[213].size)
#define CSTORM_TOE_DYNAMIC_HC_CONS_OFFSET(rssId,portId)              (IRO[214].base + ((rssId) * IRO[214].m1) + ((portId) * IRO[214].m2))
#define CSTORM_TOE_DYNAMIC_HC_CONS_SIZE                              (IRO[214].size)
#define USTORM_GRQ_CACHE_BD_LO_OFFSET(rssId,portId,grqBdId)          (IRO[215].base + ((rssId) * IRO[215].m1) + ((portId) * IRO[215].m2) + ((grqBdId) * IRO[215].m3))
#define USTORM_GRQ_CACHE_BD_LO_SIZE                                  (IRO[215].size)
#define USTORM_GRQ_CACHE_BD_HI_OFFSET(rssId,portId,grqBdId)          (IRO[216].base + ((rssId) * IRO[216].m1) + ((portId) * IRO[216].m2) + ((grqBdId) * IRO[216].m3))
#define USTORM_GRQ_CACHE_BD_HI_SIZE                                  (IRO[216].size)
#define USTORM_TOE_GRQ_CACHE_NUM_BDS                                 (IRO[217].base)
#define USTORM_TOE_GRQ_LOCAL_PROD_OFFSET(rssId,portId)               (IRO[218].base + ((rssId) * IRO[218].m1) + ((portId) * IRO[218].m2))
#define USTORM_TOE_GRQ_LOCAL_PROD_SIZE                               (IRO[218].size)
#define USTORM_TOE_GRQ_LOCAL_CONS_OFFSET(rssId,portId)               (IRO[219].base + ((rssId) * IRO[219].m1) + ((portId) * IRO[219].m2))
#define USTORM_TOE_GRQ_LOCAL_CONS_SIZE                               (IRO[219].size)
#define USTORM_TOE_GRQ_CONS_OFFSET(rssId,portId)                     (IRO[220].base + ((rssId) * IRO[220].m1) + ((portId) * IRO[220].m2))
#define USTORM_TOE_GRQ_CONS_SIZE                                     (IRO[220].size)
#define USTORM_TOE_GRQ_PROD_OFFSET(rssId,portId)                     (IRO[221].base + ((rssId) * IRO[221].m1) + ((portId) * IRO[221].m2))
#define USTORM_TOE_GRQ_PROD_SIZE                                     (IRO[221].size)
#define USTORM_TOE_GRQ_CONS_PTR_LO_OFFSET(rssId,portId)              (IRO[222].base + ((rssId) * IRO[222].m1) + ((portId) * IRO[222].m2))
#define USTORM_TOE_GRQ_CONS_PTR_LO_SIZE                              (IRO[222].size)
#define USTORM_TOE_GRQ_CONS_PTR_HI_OFFSET(rssId,portId)              (IRO[223].base + ((rssId) * IRO[223].m1) + ((portId) * IRO[223].m2))
#define USTORM_TOE_GRQ_CONS_PTR_HI_SIZE                              (IRO[223].size)
#define USTORM_TOE_GRQ_BUF_SIZE_OFFSET(rssId,portId)                 (IRO[224].base + ((rssId) * IRO[224].m1) + ((portId) * IRO[224].m2))
#define USTORM_TOE_GRQ_BUF_SIZE_SIZE                                 (IRO[224].size)
#define USTORM_TOE_CQ_NXT_PAGE_ADDR_VALID_OFFSET(rssId,portId)       (IRO[225].base + ((rssId) * IRO[225].m1) + ((portId) * IRO[225].m2))
#define USTORM_TOE_CQ_NXT_PAGE_ADDR_VALID_SIZE                       (IRO[225].size)
#define USTORM_TOE_CQ_CONS_OFFSET(rssId,portId)                      (IRO[226].base + ((rssId) * IRO[226].m1) + ((portId) * IRO[226].m2))
#define USTORM_TOE_CQ_CONS_SIZE                                      (IRO[226].size)
#define USTORM_TOE_CQ_PROD_OFFSET(rssId,portId)                      (IRO[227].base + ((rssId) * IRO[227].m1) + ((portId) * IRO[227].m2))
#define USTORM_TOE_CQ_PROD_SIZE                                      (IRO[227].size)
#define USTORM_TOE_CQ_NEXT_PAGE_BASE_ADDR_LO_OFFSET(rssId,portId)    (IRO[228].base + ((rssId) * IRO[228].m1) + ((portId) * IRO[228].m2))
#define USTORM_TOE_CQ_NEXT_PAGE_BASE_ADDR_LO_SIZE                    (IRO[228].size)
#define USTORM_TOE_CQ_NEXT_PAGE_BASE_ADDR_HI_OFFSET(rssId,portId)    (IRO[229].base + ((rssId) * IRO[229].m1) + ((portId) * IRO[229].m2))
#define USTORM_TOE_CQ_NEXT_PAGE_BASE_ADDR_HI_SIZE                    (IRO[229].size)
#define USTORM_TOE_CQ_CONS_PTR_LO_OFFSET(rssId,portId)               (IRO[230].base + ((rssId) * IRO[230].m1) + ((portId) * IRO[230].m2))
#define USTORM_TOE_CQ_CONS_PTR_LO_SIZE                               (IRO[230].size)
#define USTORM_TOE_CQ_CONS_PTR_HI_OFFSET(rssId,portId)               (IRO[231].base + ((rssId) * IRO[231].m1) + ((portId) * IRO[231].m2))
#define USTORM_TOE_CQ_CONS_PTR_HI_SIZE                               (IRO[231].size)
#define USTORM_TOE_STATUS_BLOCK_ID_OFFSET(rssId,portId)              (IRO[232].base + ((rssId) * IRO[232].m1) + ((portId) * IRO[232].m2))
#define USTORM_TOE_STATUS_BLOCK_ID_SIZE                              (IRO[232].size)
#define USTORM_TOE_STATUS_BLOCK_INDEX_OFFSET(rssId,portId)           (IRO[233].base + ((rssId) * IRO[233].m1) + ((portId) * IRO[233].m2))
#define USTORM_TOE_STATUS_BLOCK_INDEX_SIZE                           (IRO[233].size)
#define USTORM_TOE_TCP_PUSH_TIMER_TICKS_OFFSET(pfId)                 (IRO[234].base + ((pfId) * IRO[234].m1))
#define USTORM_TOE_TCP_PUSH_TIMER_TICKS_SIZE                         (IRO[234].size)
#define USTORM_TOE_GRQ_XOFF_COUNTER_OFFSET(pfId)                     (IRO[235].base + ((pfId) * IRO[235].m1))
#define USTORM_TOE_GRQ_XOFF_COUNTER_SIZE                             (IRO[235].size)
#define USTORM_TOE_RCQ_XOFF_COUNTER_OFFSET(pfId)                     (IRO[236].base + ((pfId) * IRO[236].m1))
#define USTORM_TOE_RCQ_XOFF_COUNTER_SIZE                             (IRO[236].size)
#define USTORM_TOE_CQ_THR_LOW_OFFSET                                 (IRO[237].base)
#define USTORM_TOE_CQ_THR_LOW_SIZE                                   (IRO[237].size)
#define USTORM_TOE_GRQ_THR_LOW_OFFSET                                (IRO[238].base)
#define USTORM_TOE_GRQ_THR_LOW_SIZE                                  (IRO[238].size)
#define USTORM_TOE_CQ_THR_HIGH_OFFSET                                (IRO[239].base)
#define USTORM_TOE_CQ_THR_HIGH_SIZE                                  (IRO[239].size)
#define USTORM_TOE_GRQ_THR_HIGH_OFFSET                               (IRO[240].base)
#define USTORM_TOE_GRQ_THR_HIGH_SIZE                                 (IRO[240].size)
#define TSTORM_ISCSI_TCP_VARS_FLAGS_OFFSET(pfId)                     (IRO[241].base + ((pfId) * IRO[241].m1))
#define TSTORM_ISCSI_TCP_VARS_FLAGS_SIZE                             (IRO[241].size)
#define TSTORM_ISCSI_TCP_VARS_LSB_LOCAL_MAC_ADDR_OFFSET(pfId)        (IRO[242].base + ((pfId) * IRO[242].m1))
#define TSTORM_ISCSI_TCP_VARS_LSB_LOCAL_MAC_ADDR_SIZE                (IRO[242].size)
#define TSTORM_ISCSI_TCP_VARS_MID_LOCAL_MAC_ADDR_OFFSET(pfId)        (IRO[243].base + ((pfId) * IRO[243].m1))
#define TSTORM_ISCSI_TCP_VARS_MID_LOCAL_MAC_ADDR_SIZE                (IRO[243].size)
#define TSTORM_ISCSI_TCP_VARS_MSB_LOCAL_MAC_ADDR_OFFSET(pfId)        (IRO[244].base + ((pfId) * IRO[244].m1))
#define TSTORM_ISCSI_TCP_VARS_MSB_LOCAL_MAC_ADDR_SIZE                (IRO[244].size)
#define TSTORM_ISCSI_RQ_SIZE_OFFSET(pfId)                            (IRO[245].base + ((pfId) * IRO[245].m1))
#define TSTORM_ISCSI_RQ_SIZE_SIZE                                    (IRO[245].size)
#define TSTORM_ISCSI_PAGE_SIZE_OFFSET(pfId)                          (IRO[246].base + ((pfId) * IRO[246].m1))
#define TSTORM_ISCSI_PAGE_SIZE_SIZE                                  (IRO[246].size)
#define TSTORM_ISCSI_PAGE_SIZE_LOG_OFFSET(pfId)                      (IRO[247].base + ((pfId) * IRO[247].m1))
#define TSTORM_ISCSI_PAGE_SIZE_LOG_SIZE                              (IRO[247].size)
#define TSTORM_ISCSI_NUM_OF_TASKS_OFFSET(pfId)                       (IRO[248].base + ((pfId) * IRO[248].m1))
#define TSTORM_ISCSI_NUM_OF_TASKS_SIZE                               (IRO[248].size)
#define TSTORM_ISCSI_ERROR_BITMAP_OFFSET(pfId)                       (IRO[249].base + ((pfId) * IRO[249].m1))
#define TSTORM_ISCSI_ERROR_BITMAP_SIZE                               (IRO[249].size)
#define TSTORM_ISCSI_L2_ISCSI_OOO_CID_TABLE_OFFSET(pfId)             (IRO[250].base + ((pfId) * IRO[250].m1))
#define TSTORM_ISCSI_L2_ISCSI_OOO_CID_TABLE_SIZE                     (IRO[250].size)
#define TSTORM_ISCSI_L2_ISCSI_OOO_CLIENT_ID_TABLE_OFFSET(pfId)       (IRO[251].base + ((pfId) * IRO[251].m1))
#define TSTORM_ISCSI_L2_ISCSI_OOO_CLIENT_ID_TABLE_SIZE               (IRO[251].size)
#define TSTORM_ISCSI_L2_ISCSI_OOO_PROD_OFFSET(pfId)                  (IRO[252].base + ((pfId) * IRO[252].m1))
#define TSTORM_ISCSI_L2_ISCSI_OOO_PROD_SIZE                          (IRO[252].size)
#define TSTORM_ISCSI_L2_ISCSI_OOO_RX_BDS_THRSHLD_OFFSET(pfId)        (IRO[253].base + ((pfId) * IRO[253].m1))
#define TSTORM_ISCSI_L2_ISCSI_OOO_RX_BDS_THRSHLD_SIZE                (IRO[253].size)
#define TSTORM_ISCSI_TCP_LOCAL_ADV_WND_OFFSET(pfId)                  (IRO[254].base + ((pfId) * IRO[254].m1))
#define TSTORM_ISCSI_TCP_LOCAL_ADV_WND_SIZE                          (IRO[254].size)
#define USTORM_ISCSI_PAGE_SIZE_OFFSET(pfId)                          (IRO[255].base + ((pfId) * IRO[255].m1))
#define USTORM_ISCSI_PAGE_SIZE_SIZE                                  (IRO[255].size)
#define USTORM_ISCSI_PAGE_SIZE_LOG_OFFSET(pfId)                      (IRO[256].base + ((pfId) * IRO[256].m1))
#define USTORM_ISCSI_PAGE_SIZE_LOG_SIZE                              (IRO[256].size)
#define USTORM_ISCSI_NUM_OF_TASKS_OFFSET(pfId)                       (IRO[257].base + ((pfId) * IRO[257].m1))
#define USTORM_ISCSI_NUM_OF_TASKS_SIZE                               (IRO[257].size)
#define USTORM_ISCSI_R2TQ_SIZE_OFFSET(pfId)                          (IRO[258].base + ((pfId) * IRO[258].m1))
#define USTORM_ISCSI_R2TQ_SIZE_SIZE                                  (IRO[258].size)
#define USTORM_ISCSI_CQ_SIZE_OFFSET(pfId)                            (IRO[259].base + ((pfId) * IRO[259].m1))
#define USTORM_ISCSI_CQ_SIZE_SIZE                                    (IRO[259].size)
#define USTORM_ISCSI_CQ_SQN_SIZE_OFFSET(pfId)                        (IRO[260].base + ((pfId) * IRO[260].m1))
#define USTORM_ISCSI_CQ_SQN_SIZE_SIZE                                (IRO[260].size)
#define USTORM_ISCSI_GLOBAL_BUF_PHYS_ADDR_OFFSET(pfId)               (IRO[261].base + ((pfId) * IRO[261].m1))
#define USTORM_ISCSI_GLOBAL_BUF_PHYS_ADDR_SIZE                       (IRO[261].size)
#define USTORM_ISCSI_RQ_BUFFER_SIZE_OFFSET(pfId)                     (IRO[262].base + ((pfId) * IRO[262].m1))
#define USTORM_ISCSI_RQ_BUFFER_SIZE_SIZE                             (IRO[262].size)
#define USTORM_ISCSI_RQ_SIZE_OFFSET(pfId)                            (IRO[263].base + ((pfId) * IRO[263].m1))
#define USTORM_ISCSI_RQ_SIZE_SIZE                                    (IRO[263].size)
#define USTORM_ISCSI_ERROR_BITMAP_OFFSET(pfId)                       (IRO[264].base + ((pfId) * IRO[264].m1))
#define USTORM_ISCSI_ERROR_BITMAP_SIZE                               (IRO[264].size)
#define XSTORM_ISCSI_TCP_VARS_TTL_OFFSET(pfId)                       (IRO[265].base + ((pfId) * IRO[265].m1))
#define XSTORM_ISCSI_TCP_VARS_TTL_SIZE                               (IRO[265].size)
#define XSTORM_ISCSI_TCP_VARS_TOS_OFFSET(pfId)                       (IRO[266].base + ((pfId) * IRO[266].m1))
#define XSTORM_ISCSI_TCP_VARS_TOS_SIZE                               (IRO[266].size)
#define XSTORM_ISCSI_TCP_VARS_FLAGS_OFFSET(pfId)                     (IRO[267].base + ((pfId) * IRO[267].m1))
#define XSTORM_ISCSI_TCP_VARS_FLAGS_SIZE                             (IRO[267].size)
#define XSTORM_ISCSI_TCP_VARS_ADV_WND_SCL_OFFSET(pfId)               (IRO[268].base + ((pfId) * IRO[268].m1))
#define XSTORM_ISCSI_TCP_VARS_ADV_WND_SCL_SIZE                       (IRO[268].size)
#define XSTORM_ISCSI_PAGE_SIZE_OFFSET(pfId)                          (IRO[269].base + ((pfId) * IRO[269].m1))
#define XSTORM_ISCSI_PAGE_SIZE_SIZE                                  (IRO[269].size)
#define XSTORM_ISCSI_PAGE_SIZE_LOG_OFFSET(pfId)                      (IRO[270].base + ((pfId) * IRO[270].m1))
#define XSTORM_ISCSI_PAGE_SIZE_LOG_SIZE                              (IRO[270].size)
#define XSTORM_ISCSI_NUM_OF_TASKS_OFFSET(pfId)                       (IRO[271].base + ((pfId) * IRO[271].m1))
#define XSTORM_ISCSI_NUM_OF_TASKS_SIZE                               (IRO[271].size)
#define XSTORM_ISCSI_HQ_SIZE_OFFSET(pfId)                            (IRO[272].base + ((pfId) * IRO[272].m1))
#define XSTORM_ISCSI_HQ_SIZE_SIZE                                    (IRO[272].size)
#define XSTORM_ISCSI_SQ_SIZE_OFFSET(pfId)                            (IRO[273].base + ((pfId) * IRO[273].m1))
#define XSTORM_ISCSI_SQ_SIZE_SIZE                                    (IRO[273].size)
#define XSTORM_ISCSI_R2TQ_SIZE_OFFSET(pfId)                          (IRO[274].base + ((pfId) * IRO[274].m1))
#define XSTORM_ISCSI_R2TQ_SIZE_SIZE                                  (IRO[274].size)
#define XSTORM_ISCSI_LOCAL_MAC_ADDR0_OFFSET(pfId)                    (IRO[275].base + ((pfId) * IRO[275].m1))
#define XSTORM_ISCSI_LOCAL_MAC_ADDR0_SIZE                            (IRO[275].size)
#define XSTORM_ISCSI_LOCAL_MAC_ADDR1_OFFSET(pfId)                    (IRO[276].base + ((pfId) * IRO[276].m1))
#define XSTORM_ISCSI_LOCAL_MAC_ADDR1_SIZE                            (IRO[276].size)
#define XSTORM_ISCSI_LOCAL_MAC_ADDR2_OFFSET(pfId)                    (IRO[277].base + ((pfId) * IRO[277].m1))
#define XSTORM_ISCSI_LOCAL_MAC_ADDR2_SIZE                            (IRO[277].size)
#define XSTORM_ISCSI_LOCAL_MAC_ADDR3_OFFSET(pfId)                    (IRO[278].base + ((pfId) * IRO[278].m1))
#define XSTORM_ISCSI_LOCAL_MAC_ADDR3_SIZE                            (IRO[278].size)
#define XSTORM_ISCSI_LOCAL_MAC_ADDR4_OFFSET(pfId)                    (IRO[279].base + ((pfId) * IRO[279].m1))
#define XSTORM_ISCSI_LOCAL_MAC_ADDR4_SIZE                            (IRO[279].size)
#define XSTORM_ISCSI_LOCAL_MAC_ADDR5_OFFSET(pfId)                    (IRO[280].base + ((pfId) * IRO[280].m1))
#define XSTORM_ISCSI_LOCAL_MAC_ADDR5_SIZE                            (IRO[280].size)
#define XSTORM_ISCSI_LOCAL_VLAN_OFFSET(pfId)                         (IRO[281].base + ((pfId) * IRO[281].m1))
#define XSTORM_ISCSI_LOCAL_VLAN_SIZE                                 (IRO[281].size)
#define CSTORM_ISCSI_PAGE_SIZE_OFFSET(pfId)                          (IRO[282].base + ((pfId) * IRO[282].m1))
#define CSTORM_ISCSI_PAGE_SIZE_SIZE                                  (IRO[282].size)
#define CSTORM_ISCSI_PAGE_SIZE_LOG_OFFSET(pfId)                      (IRO[283].base + ((pfId) * IRO[283].m1))
#define CSTORM_ISCSI_PAGE_SIZE_LOG_SIZE                              (IRO[283].size)
#define CSTORM_ISCSI_NUM_OF_TASKS_OFFSET(pfId)                       (IRO[284].base + ((pfId) * IRO[284].m1))
#define CSTORM_ISCSI_NUM_OF_TASKS_SIZE                               (IRO[284].size)
#define CSTORM_ISCSI_EQ_PROD_OFFSET(pfId,iscsiEqId)                  (IRO[285].base + ((pfId) * IRO[285].m1) + ((iscsiEqId) * IRO[285].m2))
#define CSTORM_ISCSI_EQ_PROD_SIZE                                    (IRO[285].size)
#define CSTORM_ISCSI_EQ_CONS_OFFSET(pfId,iscsiEqId)                  (IRO[286].base + ((pfId) * IRO[286].m1) + ((iscsiEqId) * IRO[286].m2))
#define CSTORM_ISCSI_EQ_CONS_SIZE                                    (IRO[286].size)
#define CSTORM_ISCSI_EQ_NEXT_PAGE_ADDR_OFFSET(pfId,iscsiEqId)        (IRO[287].base + ((pfId) * IRO[287].m1) + ((iscsiEqId) * IRO[287].m2))
#define CSTORM_ISCSI_EQ_NEXT_PAGE_ADDR_SIZE                          (IRO[287].size)
#define CSTORM_ISCSI_EQ_NEXT_EQE_ADDR_OFFSET(pfId,iscsiEqId)         (IRO[288].base + ((pfId) * IRO[288].m1) + ((iscsiEqId) * IRO[288].m2))
#define CSTORM_ISCSI_EQ_NEXT_EQE_ADDR_SIZE                           (IRO[288].size)
#define CSTORM_ISCSI_EQ_NEXT_PAGE_ADDR_VALID_OFFSET(pfId,iscsiEqId)  (IRO[289].base + ((pfId) * IRO[289].m1) + ((iscsiEqId) * IRO[289].m2))
#define CSTORM_ISCSI_EQ_NEXT_PAGE_ADDR_VALID_SIZE                    (IRO[289].size)
#define CSTORM_ISCSI_EQ_SB_NUM_OFFSET(pfId,iscsiEqId)                (IRO[290].base + ((pfId) * IRO[290].m1) + ((iscsiEqId) * IRO[290].m2))
#define CSTORM_ISCSI_EQ_SB_NUM_SIZE                                  (IRO[290].size)
#define CSTORM_ISCSI_EQ_SB_INDEX_OFFSET(pfId,iscsiEqId)              (IRO[291].base + ((pfId) * IRO[291].m1) + ((iscsiEqId) * IRO[291].m2))
#define CSTORM_ISCSI_EQ_SB_INDEX_SIZE                                (IRO[291].size)
#define CSTORM_ISCSI_HQ_SIZE_OFFSET(pfId)                            (IRO[292].base + ((pfId) * IRO[292].m1))
#define CSTORM_ISCSI_HQ_SIZE_SIZE                                    (IRO[292].size)
#define CSTORM_ISCSI_CQ_SIZE_OFFSET(pfId)                            (IRO[293].base + ((pfId) * IRO[293].m1))
#define CSTORM_ISCSI_CQ_SIZE_SIZE                                    (IRO[293].size)
#define CSTORM_ISCSI_CQ_SQN_SIZE_OFFSET(pfId)                        (IRO[294].base + ((pfId) * IRO[294].m1))
#define CSTORM_ISCSI_CQ_SQN_SIZE_SIZE                                (IRO[294].size)
#define USTORM_FCOE_EQ_PROD_OFFSET(pfId)                             (IRO[295].base + ((pfId) * IRO[295].m1))
#define USTORM_FCOE_EQ_PROD_SIZE                                     (IRO[295].size)
#define USTORM_FCOE_TIMER_PARAM_OFFSET                               (IRO[296].base)
#define USTORM_FCOE_TIMER_PARAM_SIZE                                 (IRO[296].size)
#define USTORM_TIMER_ARRAY_OFFSET                                    (IRO[297].base)
#define USTORM_TIMER_ARRAY_SIZE                                      (IRO[297].size)
#define USTORM_STAT_FC_CRC_CNT_OFFSET                                (IRO[298].base)
#define USTORM_STAT_FC_CRC_CNT_SIZE                                  (IRO[298].size)
#define USTORM_STAT_EOFA_DEL_CNT_OFFSET                              (IRO[299].base)
#define USTORM_STAT_EOFA_DEL_CNT_SIZE                                (IRO[299].size)
#define USTORM_STAT_MISS_FRAME_CNT_OFFSET                            (IRO[300].base)
#define USTORM_STAT_MISS_FRAME_CNT_SIZE                              (IRO[300].size)
#define USTORM_STAT_SEQ_TIMEOUT_CNT_OFFSET                           (IRO[301].base)
#define USTORM_STAT_SEQ_TIMEOUT_CNT_SIZE                             (IRO[301].size)
#define USTORM_STAT_DROP_SEQ_CNT_OFFSET                              (IRO[302].base)
#define USTORM_STAT_DROP_SEQ_CNT_SIZE                                (IRO[302].size)
#define USTORM_STAT_FCOE_RX_DROP_PKT_CNT_OFFSET                      (IRO[303].base)
#define USTORM_STAT_FCOE_RX_DROP_PKT_CNT_SIZE                        (IRO[303].size)
#define USTORM_STAT_FCP_RX_PKT_CNT_OFFSET                            (IRO[304].base)
#define USTORM_STAT_FCP_RX_PKT_CNT_SIZE                              (IRO[304].size)
#define USTORM_STAT_OFFSET                                           (IRO[305].base)
#define USTORM_STAT_SIZE                                             (IRO[305].size)
#define USTORM_DEBUG_DROP_PKT_CNT_OFFSET                             (IRO[306].base)
#define USTORM_DEBUG_DROP_PKT_CNT_SIZE                               (IRO[306].size)
#define USTORM_DEBUG_OFFSET                                          (IRO[307].base)
#define USTORM_DEBUG_SIZE                                            (IRO[307].size)
#define USTORM_CACHED_TCE_MNG_INFO_DWORD_ONE_OFFSET(cached_tbl_size) (IRO[308].base + ((cached_tbl_size) * IRO[308].m1))
#define USTORM_CACHED_TCE_MNG_INFO_DWORD_ONE_SIZE                    (IRO[308].size)
#define USTORM_CACHED_TCE_MNG_INFO_DWORD_TWO_OFFSET(cached_tbl_size) (IRO[309].base + ((cached_tbl_size) * IRO[309].m1))
#define USTORM_CACHED_TCE_MNG_INFO_DWORD_TWO_SIZE                    (IRO[309].size)
#define USTORM_CACHED_TCE_ENTRY_TCE_OFFSET                           (IRO[310].base)
#define USTORM_CACHED_TCE_ENTRY_TCE_SIZE                             (IRO[310].size)
#define USTORM_CACHED_TCE_ENTRY_MNG_INFO_OFFSET                      (IRO[311].base)
#define USTORM_CACHED_TCE_ENTRY_MNG_INFO_SIZE                        (IRO[311].size)
#define USTORM_FCOE_CACHED_TCE_TBL_BIT_MAP_OFFSET                    (IRO[312].base)
#define USTORM_FCOE_CACHED_TCE_TBL_BIT_MAP_SIZE                      (IRO[312].size)
#define USTORM_DEBUG_CACHED_TCE_WAIT_4_BD_READ_OFFSET                (IRO[313].base)
#define USTORM_DEBUG_CACHED_TCE_WAIT_4_BD_READ_SIZE                  (IRO[313].size)
#define USTORM_DEBUG_CACHED_TCE_WAKE_ANOTHER_THREAD_OFFSET           (IRO[314].base)
#define USTORM_DEBUG_CACHED_TCE_WAKE_ANOTHER_THREAD_SIZE             (IRO[314].size)
#define USTORM_DEBUG_CACHED_TCE_GLOBAL_TIMER_TASK_IN_USE_OFFSET      (IRO[315].base)
#define USTORM_DEBUG_CACHED_TCE_GLOBAL_TIMER_TASK_IN_USE_SIZE        (IRO[315].size)
#define USTORM_DEBUG_CACHED_TCE_DEL_CACHED_TASK_OFFSET               (IRO[316].base)
#define USTORM_DEBUG_CACHED_TCE_DEL_CACHED_TASK_SIZE                 (IRO[316].size)
#define USTORM_DEBUG_CACHED_TCE_SILENT_DROP_CACHED_TASK_OFFSET       (IRO[317].base)
#define USTORM_DEBUG_CACHED_TCE_SILENT_DROP_CACHED_TASK_SIZE         (IRO[317].size)
#define USTORM_DEBUG_CACHED_TCE_OFFSET                               (IRO[318].base)
#define USTORM_DEBUG_CACHED_TCE_SIZE                                 (IRO[318].size)
#define USTORM_FCOE_DEBUG_CACHED_TCE_SEQ_CNT_ON_DROP_OFFSET          (IRO[319].base)
#define USTORM_FCOE_DEBUG_CACHED_TCE_SEQ_CNT_ON_DROP_SIZE            (IRO[319].size)
#define USTORM_FCOE_DEBUG_CACHED_TCE_SEQ_CNT_ON_CRC_ERROR_OFFSET     (IRO[320].base)
#define USTORM_FCOE_DEBUG_CACHED_TCE_SEQ_CNT_ON_CRC_ERROR_SIZE       (IRO[320].size)
#define USTORM_FCOE_DEBUG_CACHED_TCE_SEQ_CNT_ON_ERROR_OFFSET         (IRO[321].base)
#define USTORM_FCOE_DEBUG_CACHED_TCE_SEQ_CNT_ON_ERROR_SIZE           (IRO[321].size)
#define USTORM_FCOE_DEBUG_CACHED_TCE_PREVIOUS_THREAD_OFFSET          (IRO[322].base)
#define USTORM_FCOE_DEBUG_CACHED_TCE_PREVIOUS_THREAD_SIZE            (IRO[322].size)
#define USTORM_FCOE_DEBUG_CACHED_TCE_INNER_CRC_ERR_OFFSET            (IRO[323].base)
#define USTORM_FCOE_DEBUG_CACHED_TCE_INNER_CRC_ERR_SIZE              (IRO[323].size)
#define USTORM_FCOE_DEBUG_CACHED_TCE_OUTER_CRC_ERR_OFFSET            (IRO[324].base)
#define USTORM_FCOE_DEBUG_CACHED_TCE_OUTER_CRC_ERR_SIZE              (IRO[324].size)
#define USTORM_FCOE_DEBUG_PARAMS_ERRORS_NUMBER_OFFSET                (IRO[325].base)
#define USTORM_FCOE_DEBUG_PARAMS_ERRORS_NUMBER_SIZE                  (IRO[325].size)
#define USTORM_FCOE_DEBUG_PARAMS_SILENT_DROP_NUMBER_OFFSET           (IRO[326].base)
#define USTORM_FCOE_DEBUG_PARAMS_SILENT_DROP_NUMBER_SIZE             (IRO[326].size)
#define USTORM_FCOE_DEBUG_PARAMS_SILENT_DROP_BITMAP_OFFSET           (IRO[327].base)
#define USTORM_FCOE_DEBUG_PARAMS_SILENT_DROP_BITMAP_SIZE             (IRO[327].size)
#define XSTORM_FCOE_TIMER_PARAM_OFFSET                               (IRO[328].base)
#define XSTORM_FCOE_TIMER_PARAM_SIZE                                 (IRO[328].size)
#define XSTORM_TIMER_ARRAY_OFFSET                                    (IRO[329].base)
#define XSTORM_TIMER_ARRAY_SIZE                                      (IRO[329].size)
#define XSTORM_STAT_FCOE_TX_PKT_CNT_OFFSET                           (IRO[330].base)
#define XSTORM_STAT_FCOE_TX_PKT_CNT_SIZE                             (IRO[330].size)
#define XSTORM_STAT_FCOE_TX_BYTE_CNT_OFFSET                          (IRO[331].base)
#define XSTORM_STAT_FCOE_TX_BYTE_CNT_SIZE                            (IRO[331].size)
#define XSTORM_STAT_FCP_TX_PKT_CNT_OFFSET                            (IRO[332].base)
#define XSTORM_STAT_FCP_TX_PKT_CNT_SIZE                              (IRO[332].size)
#define XSTORM_STAT_OFFSET                                           (IRO[333].base)
#define XSTORM_STAT_SIZE                                             (IRO[333].size)
#define XSTORM_DEBUG_ABTS_BLOCK_SQ_CNT_OFFSET                        (IRO[334].base)
#define XSTORM_DEBUG_ABTS_BLOCK_SQ_CNT_SIZE                          (IRO[334].size)
#define XSTORM_DEBUG_CLEANUP_BLOCK_SQ_CNT_OFFSET                     (IRO[335].base)
#define XSTORM_DEBUG_CLEANUP_BLOCK_SQ_CNT_SIZE                       (IRO[335].size)
#define XSTORM_DEBUG_OFFSET                                          (IRO[336].base)
#define XSTORM_DEBUG_SIZE                                            (IRO[336].size)
#define TSTORM_STAT_FCOE_VER_CNT_OFFSET                              (IRO[337].base)
#define TSTORM_STAT_FCOE_VER_CNT_SIZE                                (IRO[337].size)
#define TSTORM_STAT_FCOE_RX_PKT_CNT_OFFSET                           (IRO[338].base)
#define TSTORM_STAT_FCOE_RX_PKT_CNT_SIZE                             (IRO[338].size)
#define TSTORM_STAT_FCOE_RX_BYTE_CNT_OFFSET                          (IRO[339].base)
#define TSTORM_STAT_FCOE_RX_BYTE_CNT_SIZE                            (IRO[339].size)
#define TSTORM_STAT_FCOE_RX_DROP_PKT_CNT_OFFSET                      (IRO[340].base)
#define TSTORM_STAT_FCOE_RX_DROP_PKT_CNT_SIZE                        (IRO[340].size)
#define TSTORM_STAT_OFFSET                                           (IRO[341].base)
#define TSTORM_STAT_SIZE                                             (IRO[341].size)
#define TSTORM_PORT_DEBUG_WAIT_FOR_YOUR_TURN_SP_CNT_OFFSET           (IRO[342].base)
#define TSTORM_PORT_DEBUG_WAIT_FOR_YOUR_TURN_SP_CNT_SIZE             (IRO[342].size)
#define TSTORM_PORT_DEBUG_OFFSET                                     (IRO[343].base)
#define TSTORM_PORT_DEBUG_SIZE                                       (IRO[343].size)
#define TSTORM_REORDER_DATA_OFFSET                                   (IRO[344].base)
#define TSTORM_REORDER_DATA_SIZE                                     (IRO[344].size)
#define TSTORM_REORDER_WAITING_TABLE_OFFSET                          (IRO[345].base)
#define TSTORM_REORDER_WAITING_TABLE_SIZE                            (IRO[345].size)
#define TSTORM_WAITING_LIST_SIZE                                     (IRO[346].base)
#define TSTORM_REORDER_WAITING_ENTRY_OFFSET                          (IRO[347].base)
#define TSTORM_REORDER_WAITING_ENTRY_SIZE                            (IRO[347].size)
#define XSTORM_TCP_TX_SWITCHING_EN_OFFSET(portId)                    (IRO[348].base + ((portId) * IRO[348].m1))
#define XSTORM_TCP_TX_SWITCHING_EN_SIZE                              (IRO[348].size)

#define NUM_OF_INT_OFFSET_MACROS 349

#endif // __577XX_INT_OFFSETS__
