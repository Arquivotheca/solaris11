# Copyright (c) 2007, 2010, Oracle and/or its affiliates. All rights reserved.

############################################################################
# Copyright (c) 2001-2010, by Broadcom, Inc.                               #
# All Rights Reserved.                                                     #
############################################################################


############################################################################
#                                                                          #
# This file contains possible configurable parameters that can be used to  #
# customize Broadcom Gigabit Ethernet Adapter.  Properties specified in    #
# this file will be read when the driver is loaded into the kernel.  The   #
# settings will be applied when the device is opened or after a device     #
# reset.  Changes to this file will not take effect until the system is    #
# rebooted.                                                                #
#                                                                          #
# Please refer to the 'bnx' man page for a detailed description of these   #
# options.
#                                                                          #
# All properties listed below can be set globally for all instances of     #
# the driver or on a per-instance basis.                                   #
#                                                                          #
############################################################################


############################################################################
#                                                                          #
# A WORD ABOUT SPEED / DUPLEX PARAMETERS                                   #
# ======================================                                   #
#                                                                          #
# The adminstrator has two methods with which to affect the speed and      #
# duplex settings of the driver.                                           #
#                                                                          #
# Explicit Capability Parameters                                           #
# ------------------------------                                           #
#                                                                          #
# The first method is by modifying the below list of parameters:           #
#                                                                          #
#       * adv_autoneg_cap                                                  #
#	* adv_2500fdx_cap                                                  #
#       * adv_1000fdx_cap                                                  #
#       * adv_1000hdx_cap                                                  #
#       * adv_100fdx_cap                                                   #
#       * adv_100hdx_cap                                                   #
#       * adv_10fdx_cap                                                    #
#       * adv_10hdx_cap                                                    #
#                                                                          #
# Note that some settings are not valid for certain devices.  The          #
# following table outlines the restrictions.  If a capability is not       #
# supported by that device type, the capability setting is ignored by the  #
# driver.                                                                  #
#                                                                          #
#          |----------------------------------------------------|          #
#          |                  |            Valid for            |          #
#          | Property name    |     Copper     |     Serdes     |          #
#          |----------------------------------------------------|          #
#          | adv_autoneg_cap  |       Y        |       Y        |          #
#          | adv_2500fdx_cap  |       N        |       Y        |          #
#          | adv_1000fdx_cap  |       Y        |       Y        |          #
#          | adv_1000hdx_cap  |       Y        |       N        |          #
#          | adv_100fdx_cap   |       Y        |       N        |          #
#          | adv_100hdx_cap   |       Y        |       N        |          #
#          | adv_10fdx_cap    |       Y        |       N        |          #
#          | adv_10hdx_cap    |       Y        |       N        |          #
#          |----------------------------------------------------|          #
#                                                                          #
# Each parameter is a boolean value reflecting whether that option is      #
# enabed or disabled.  If the adv_autoneg_cap parameter is set to a        #
# non-zero value, the remaining parameters control whether or not that     #
# capability is advertised to the link partner.  If the adv_autoneg_cap    #
# parameter is set to zero, then the driver will walk down the parameter   #
# list from the highest speed to the lowest speed and from the highest     #
# duplex to the lowest duplex and use the first _valid_ value as the       #
# setting to use to force the link.                                        #
#                                                                          #
# This method is the most explicit, but also the most tedious.             #
# Consequently, this set of options is given the least level of            #
# precedence.                                                              #
#                                                                          #
#                                                                          #
# The 'transfer-speed' Parameter                                           #
# ------------------------------                                           #
#                                                                          #
# The 'transfer-speed' parameter is a convenience option which programs    #
# one or more of the above options at once.  This is the second method by  #
# which the administrator can affect the speed and duplex settings.  If    #
# this parameter is set to 10, 100, 1000, or 2500, the driver will only    #
# advertise both duplex options of 10Mbps, 100Mbps, 1000Mbps, or 2500Mbps  #
# respectively.                                                            #
#                                                                          #
#                                                                          #
# WARNING! - A final word                                                  #
# -----------------------                                                  #
#                                                                          #
# Please note that if the speed / duplex restrictions are not obeyed, it   #
# is possible to get the driver into a misconfiguration state.  In this    #
# state, network connectivity will be completely lost.  If you are not an  #
# expert, it is best to leave these settings at their defaults.            #
#                                                                          #
############################################################################




############################################################################
# adv_autoneg_cap: This boolean value configures autonegotiation mode.  The
#                  default is enabled.
#   0 : disable
#   1 : enable
#
#adv_autoneg_cap=1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;



############################################################################
# adv_2500fdx_cap: This boolean value configured the 2500Mbps full duplex
#                  capability.  It is valid only for serdes and will be
#                  ignored for copper devices.  The default is enabled.
#   0 : disable
#   1 : enable
#
#adv_2500fdx_cap=1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;



############################################################################
# adv_1000fdx_cap: This boolean value configures the 1000Mbps full duplex
#                  capability.  The default is enabled.
#   0 : disable
#   1 : enable
#
#adv_1000fdx_cap=1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;



############################################################################
# adv_1000hdx_cap: This boolean value configures the 1000Mbps half duplex
#                  capability.  It is valid only for copper devices.  It
#                  will be ignored for serdes devices.  The default is
#                  enabled.
#   0 : disable
#   1 : enable
#
#adv_1000hdx_cap=1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;



############################################################################
# adv_100fdx_cap: This boolean value configures the 100Mbps full duplex
#                 capability.  This option is only valid for copper devices,
#                 and will be ignored for serdes devices.  The default is
#                 enabled.
#   0 : disable
#   1 : enable
#
#adv_100fdx_cap=1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;



############################################################################
# adv_100hdx_cap: This boolean value configures the 100Mbps half duplex
#                 capability.  This option is only valid for copper devices,
#                 and will be ignored for serdes devices.  The default is
#                 enabled.
#   0 : disable
#   1 : enable
#
#adv_100hdx_cap=1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;



############################################################################
# adv_10fdx_cap: This boolean value configures the 10Mbps full duplex
#                capability.  This option is only valid for copper devices,
#                and will be ignored for serdes devices.  The default is
#                enabled.
#   0 : disable
#   1 : enable
#
#adv_10fdx_cap=1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;



############################################################################
# adv_10hdx_cap: This boolean value configures the 10Mbps half duplex
#                capability.  This option is only valid for copper devices,
#                and will be ignored for serdes devices.  The default is
#                enabled.
#   0 : disable
#   1 : enable
#
#adv_10hdx_cap=1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;



############################################################################
# autoneg_flow: This boolean value controls whether or not flow control
#               capabilities are configured through the autonegotiation
#               process.  If this option is disabled, the below two flow
#               control settings will be forced.
#   0 : disable
#   1 : enable
#
#autoneg_flow=1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;



############################################################################
# tx_pause_cap: This boolean value controls whether or not tx flow control
#               is enabled.
#   0 : disable
#   1 : enable
#
#tx_pause_cap=1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;



############################################################################
# rx_pause_cap: This boolean value controls whether or not rx flow control
#               is enabled.
#   0 : disable
#   1 : enable
#
#rx_pause_cap=1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;



############################################################################
# transfer-speed -
# configures link (or instance) to autonegotiate for a certain speed
# following are valid values for this parameter:
#	0: auto-negotiate
#	10: 10 Mbps
#	100: 100 Mbps
#	1000: 1000 Mbps
#	2500: 2500 Mbps
#
#transfer-speed=0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0;



############################################################################
# wirespeed : configures the device to operate in Ether@WireSpeed mode.
# By default this mode is enabled for all bnx devices and use has to disable
# if required otherwise. Configuration values are 
#		 '1' : enable ether@wirespeed
#		 '0' : disable ether@wirespeed
#
#wirespeed=1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;



############################################################################
# checksum : configures checksum task which are offloaded to asic,
# namely transport (TCP / UDP) or network (IP) protocol checksum
# offload. By default no checksum is offloaded. Legal values are -
#       0 : No checksum offload.
#       1 : TCP & IP checksum generation is offloaded for outbound packets
#       2 : TCP & IP checksum validation is offloaded for ingress packets
#       3 : Both TCP / IP checksum is offloaded in both direction.
#
#checksum=3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3;



############################################################################
# multisize: GLD parameter required to support > 64 multicast addresses.
multisize=256;



############################################################################
# mtu : Configures the hardware MTU size.  The valid range for this
#       parameter is 60 to 9000.  The default value is 1500.
#
#mtu=1500,1500,1500,1500,1500,1500,1500,1500,1500,1500,1500,1500,1500,1500,1500,1500;



############################################################################
#  tx_descriptor_count : Configures the number of TX packet descriptors used
#                        by the  driver.  The valid range is from 1 to
#                        32385 inclusive.  The default value is 510.
#
#tx_descriptor_count=510,510,510,510,510,510,510,510,510,510,510,510,510,510,510,510;



############################################################################
#  rx_descriptor_count : Configures the number of RX packet descriptors used
#                        by the  driver.  The valid range is from 1 to
#                        32385 inclusive.  The default value is 510.
#
#rx_descriptor_count=510,510,510,510,510,510,510,510,510,510,510,510,510,510,510,510;



############################################################################
#  tx_coalesce_ticks: configures number of Tx Host Coalescing Ticks in 
#  microseconds. This determines upper-bound of time interval that the 
#  device will generates interrupt if one or more frames are sent.  The 
#  default value is 45.
#
#tx_coalesce_ticks=45;



############################################################################
#  tx_coalesce_ticks_int: configures number of Tx Host Coalescing 
#  Ticks in microseconds during interrupt. This determines upper-bound of 
#  time interval that the device will generates interrupt if one or more 
#  frames are received during interrupt handling.  The default value is 15.
#
#tx_coalesce_ticks_int=15;



############################################################################
#  rx_coalesce_ticks: configures number of Rx Host Coalescing Ticks in 
#  microseconds. This determines upper-bound of time interval that the 
#  device will generates interrupt if one or more frames are received. 
#  The default value is 20.
#
#rx_coalesce_ticks=20;



############################################################################
#  rx_coalesce_ticks_int: configures number of Rx Host Coalescing Ticks
#  in  microseconds during interrupt. This determines upper-bound of time 
#  interval that the device will generates interrupt if one or more frames 
#  are received during interrupt handling. The default value is 15.
#
#rx_coalesce_ticks_int=15;



############################################################################
#  tx_coalesce_frames: Configures the number of tx frames the hardware will
#                      coalesce before generating an interrupt.  The valid
#                      range is 0 to 255.  The default value is 16.
#
#tx_coalesce_frames=16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16;



############################################################################
#  tx_coalesce_frames_int: Configures the number of tx frames the hardware
#                          will coalesce while interrupts are being
#                          serviced.  The valid range is 0 to 255.  The
#                          default value is 8.
#
#tx_coalesce_frames_int=8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8;



############################################################################
#  rx_coalesce_frames: Configures the number of rx frames the hardware will
#                      coalesce before generating an interrupt.  The valid
#                      range is 0 to 255.  The default value is 4.
#
#rx_coalesce_frames=4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4;



############################################################################
#  rx_coalesce_frames_int: Configures the number of rx frames the hardware
#                          will coalesce while interrupts are being
#                          serviced.  The valid range is 0 to 255.  The
#                          default value is 4.
#
#rx_coalesce_frames_int=4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4;



############################################################################
#  statticks: configures how often adapter statistics are DMAed 
#  to host memory in microsecond.  Default is 1000000.
#
#statticks=1000000;



############################################################################
# disable_msix: turn off MSI-X and used Fixed level interrupts.  Default is
# to use MSI-X.
#
#   0 : MSI-X enabled
#   1 : MSI-X disabled, use Fixed
#
#disable_msix=0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0;


