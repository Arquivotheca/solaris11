#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License (the "License").
# You may not use this file except in compliance with the License.
#
# You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at usr/src/OPENSOLARIS.LICENSE.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets "[]" replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#
# Copyright (c) 2006, 2011, Oracle and/or its affiliates. All rights reserved.
#

#
# MAPFILE HEADER START
#
# WARNING:  STOP NOW.  DO NOT MODIFY THIS FILE.
# Object versioning must comply with the rules detailed in
#
#	usr/src/lib/README.mapfiles
#
# You should not be making modifications here until you've read the most current
# copy of that file. If you need help, contact a gatekeeper for guidance.
#
# MAPFILE HEADER END
#

# Due to mistakes made early in the history of this library, there are
# no SUNW_1.1 symbols, but the version is now kept as a placeholder.
# Don't add any symbols to this version.

$mapfile_version 2

STUB_OBJECT;

SYMBOL_VERSION SUNW_1.1 {
    global:
	SUNW_1.1;
};

SYMBOL_VERSION SUNWprivate_1.1 {
    global:
	__kadm5_get_priv;
	_kadm5_get_kpasswd_protocol;
	adb_policy_close;
	adb_policy_init;
	destroy_dict;
	find_word;
	handle_chpw;
	init_dict;
	kadm5_check_min_life;
	kadm5_chpass_principal;
	kadm5_chpass_principal_3;
	kadm5_chpass_principal_util;
	kadm5_create_policy;
	kadm5_create_policy_internal;
	kadm5_create_principal;
	kadm5_create_principal_3;
	kadm5_decrypt_key;
	kadm5_delete_policy;
	kadm5_delete_principal;
	kadm5_destroy;
	kadm5_flush;
	kadm5_free_config_params;
	kadm5_free_name_list;
	kadm5_free_policy_ent;
	kadm5_free_principal_ent;
	kadm5_get_adm_host_srv_name;
	kadm5_get_config_params;
	kadm5_get_cpw_host_srv_name;
	kadm5_get_kiprop_host_srv_name;
	kadm5_get_master;
	kadm5_get_policies;
	kadm5_get_policy;
	kadm5_get_principal;
        kadm5_get_principal_keys;
	kadm5_get_principals;
	kadm5_get_privs;
	kadm5_init2;
	kadm5_init;
        kadm5_init_anonymous;
	kadm5_init_iprop;
	kadm5_init_krb5_context;
	kadm5_init_with_creds;
	kadm5_init_with_password;
	kadm5_is_master;
	kadm5_lock;
	kadm5_modify_policy;
	kadm5_modify_policy_internal;
	kadm5_modify_principal;
	kadm5_randkey_principal;
	kadm5_randkey_principal_3;
	kadm5_rename_principal;
	kadm5_setkey_principal;
	kadm5_setkey_principal_3;
	kadm5_unlock;
	kadm5int_acl_check;
	kadm5int_acl_finish;
	kadm5int_acl_impose_restrictions;
	kadm5int_acl_init;
	kadm5_init_with_skey;
	kdb_delete_entry;
	kdb_free_entry;
	kdb_get_entry;
	kdb_init_hist;
	kdb_init_master;
	kdb_iter_entry;
	kdb_put_entry;
	krb5_aprof_finish;
	krb5_aprof_get_boolean;
	krb5_aprof_get_deltat;
	krb5_aprof_get_int32;
	krb5_aprof_get_string;
	krb5_aprof_get_string_all;
	krb5_aprof_getvals;
	krb5_aprof_init;
	krb5_copy_key_data_contents;
	krb5_flags_to_string;
	krb5_free_key_data_contents;
	krb5_free_realm_params;
	krb5_input_flag_to_string;
	krb5_keysalt_is_present;
	krb5_keysalt_iterate;
	krb5_klog_add_stderr;
	krb5_klog_close;
	krb5_klog_init;
	krb5_klog_list_logs;
	krb5_klog_logging_to_stderr;
	krb5_klog_remove_stderr;
	krb5_klog_reopen;
	krb5_klog_syslog;
	krb5_match_config_pattern;
	krb5_read_realm_params;
	krb5_string_to_flags;
	krb5_string_to_keysalts;
	master_db {
		ASSERT {
			TYPE=data;
			SH_ATTR=nobits;
			SIZE=0x44;
		};
	};
	master_princ {
		ASSERT {
			TYPE=data;
			SH_ATTR=nobits;
			SIZE=addrsize;
		};
	};
	master_keyblock { ASSERT { TYPE=data; SH_ATTR=nobits; SIZE=0x1c } };
	master_keylist	{
		ASSERT {
			TYPE=data;
			$if __GNUC
				SH_ATTR=nobits;
			$endif
			SIZE=addrsize;
		};
	};
	osa_free_princ_ent;
	passwd_check;
	trunc_name;
	xdr_chpass3_arg;
	xdr_chpass_arg;
	xdr_chrand3_arg;
	xdr_chrand_arg;
	xdr_chrand_ret;
	xdr_cpol_arg;
	xdr_cprinc3_arg;
	xdr_cprinc_arg;
	xdr_dpol_arg;
	xdr_dprinc_arg;
	xdr_generic_ret;
	xdr_getprivs_ret;
	xdr_gpol_arg;
	xdr_gpol_ret;
	xdr_gpols_arg;
	xdr_gpols_ret;
	xdr_gprinc_arg;
	xdr_gprinc_ret;
	xdr_gprincs_arg;
	xdr_gprincs_ret;
	xdr_kadm5_policy_ent_rec;
	xdr_kadm5_principal_ent_rec;
	xdr_kadm5_ret_t;
	xdr_krb5_deltat;
	xdr_krb5_enctype;
	xdr_krb5_flags;
	xdr_krb5_int16;
	xdr_krb5_key_data;
	xdr_krb5_key_data_nocontents;
	xdr_krb5_key_salt_tuple;
	xdr_krb5_keyblock;
	xdr_krb5_kvno;
	xdr_krb5_octet;
	xdr_krb5_principal;
	xdr_krb5_salttype;
	xdr_krb5_timestamp;
	xdr_krb5_tl_data;
	xdr_krb5_ui_2;
	xdr_krb5_ui_4;
	xdr_mpol_arg;
	xdr_mprinc_arg;
	xdr_nullstring;
	xdr_nulltype;
	xdr_osa_princ_ent_rec;
	xdr_osa_pw_hist_ent;
	xdr_rprinc_arg;
	xdr_setkey3_arg;
	xdr_setkey_arg;
	xdr_ui_4;
	xdralloc_create;
	xdralloc_getdata;
	xdralloc_release;
    local:
	*;
};
