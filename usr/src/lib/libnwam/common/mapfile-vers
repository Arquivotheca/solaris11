#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License (the "License").
# You may not use this file except in compliance with the License.
#
# You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at usr/src/OPENSOLARIS.LICENSE.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets "[]" replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#
#
# Copyright (c) 2008, 2011, Oracle and/or its affiliates. All rights reserved.
#

#
# MAPFILE HEADER START
#
# WARNING:  STOP NOW.  DO NOT MODIFY THIS FILE.
# Object versioning must comply with the rules detailed in
#
#	usr/src/lib/README.mapfiles
#
# You should not be making modifications here until you've read the most current
# copy of that file. If you need help, contact a gatekeeper for guidance.
#
# MAPFILE HEADER END
#

$mapfile_version 2

STUB_OBJECT;

SYMBOL_VERSION SUNWprivate_1.1 {
    global:
	nwam_strerror;
	nwam_value_create_boolean;
	nwam_value_create_boolean_array;
	nwam_value_create_int64_array;
	nwam_value_create_int64;
	nwam_value_create_uint64_array;
	nwam_value_create_uint64;
	nwam_value_create_string;
	nwam_value_create_string_array;
	nwam_value_get_boolean;
	nwam_value_get_boolean_array;
	nwam_value_get_int64;
	nwam_value_get_int64_array;
	nwam_value_get_uint64;
	nwam_value_get_uint64_array;
	nwam_value_get_string;
	nwam_value_get_string_array;
	nwam_value_get_type;
	nwam_value_get_numvalues;
	nwam_value_free;
	nwam_value_copy;
	nwam_uint64_get_value_string;
	nwam_value_string_get_uint64;
	nwam_condition_to_condition_string;
	nwam_condition_string_to_condition;
	nwam_condition_rate;
	nwam_loc_create;
	nwam_loc_copy;
	nwam_loc_read;
	nwam_loc_commit;
	nwam_loc_destroy;
	nwam_loc_free;
	nwam_loc_validate;
	nwam_walk_locs;
	nwam_loc_get_name;
	nwam_loc_set_name;
	nwam_loc_can_set_name;
	nwam_loc_enable;
	nwam_loc_disable;
	nwam_loc_walk_props;
	nwam_loc_delete_prop;
	nwam_loc_get_prop_value;
	nwam_loc_set_prop_value;
	nwam_loc_validate_prop;
	nwam_loc_get_prop_type;
	nwam_loc_prop_multivalued;
	nwam_loc_get_prop_description;
	nwam_loc_get_default_proplist;
	nwam_loc_get_state;
	nwam_loc_prop_read_only;
	nwam_loc_is_manual;
	nwam_ncp_create;
	nwam_ncp_read;
	nwam_ncp_copy;
	nwam_walk_ncps;
	nwam_ncp_get_name;
	nwam_ncp_get_read_only;
	nwam_ncp_destroy;
	nwam_ncp_walk_ncus;
	nwam_ncp_enable;
	nwam_ncp_free;
	nwam_ncp_get_state;
	nwam_ncp_get_active_priority_group;
	nwam_ncu_create;
	nwam_ncu_read;
	nwam_ncu_commit;
	nwam_ncu_destroy;
	nwam_ncu_free;
	nwam_ncu_validate;
	nwam_ncu_get_name;
	nwam_ncu_name_to_typed_name;
	nwam_ncu_typed_name_to_name;
	nwam_ncu_get_ncp;
	nwam_ncu_enable;
	nwam_ncu_disable;
	nwam_ncu_get_read_only;
	nwam_ncu_get_default_proplist;
	nwam_ncu_delete_prop;
	nwam_ncu_get_prop_value;
	nwam_ncu_set_prop_value;
	nwam_ncu_validate_prop;
	nwam_ncu_get_default_proplist;
	nwam_ncu_walk_props;
	nwam_ncu_get_prop_type;
	nwam_ncu_get_prop_description;
	nwam_ncu_prop_read_only;
	nwam_ncu_prop_multivalued;
	nwam_ncu_copy;
	nwam_ncu_get_state;
	nwam_ncu_get_ncu_type;
	nwam_ncu_get_ncu_class;
	nwam_ncu_is_manual;
	nwam_ncu_class_to_flag;
	nwam_ncu_class_to_type;
	nwam_enm_create;
	nwam_enm_read;
	nwam_walk_enms;
	nwam_enm_commit;
	nwam_enm_destroy;
	nwam_enm_free;
	nwam_enm_validate;
	nwam_enm_validate_prop;
	nwam_enm_get_prop_type;
	nwam_enm_prop_multivalued;
	nwam_enm_get_prop_description;
	nwam_enm_delete_prop;
	nwam_enm_get_prop_value;
	nwam_enm_set_prop_value;
	nwam_enm_prop_read_only;
	nwam_enm_walk_props;
	nwam_enm_get_name;
	nwam_enm_set_name;
	nwam_enm_can_set_name;
	nwam_enm_get_default_proplist;
	nwam_enm_enable;
	nwam_enm_disable;
	nwam_enm_copy;
	nwam_enm_get_state;
	nwam_enm_is_manual;
	nwam_known_wlan_create;
	nwam_known_wlan_read;
	nwam_known_wlan_destroy;
	nwam_known_wlan_free;
	nwam_known_wlan_copy;
	nwam_known_wlan_commit;
	nwam_known_wlan_validate;
	nwam_walk_known_wlans;
	nwam_known_wlan_get_name;
	nwam_known_wlan_set_name;
	nwam_known_wlan_can_set_name;
	nwam_known_wlan_walk_props;
	nwam_known_wlan_delete_prop;
	nwam_known_wlan_get_prop_value;
	nwam_known_wlan_set_prop_value;
	nwam_known_wlan_validate_prop;
	nwam_known_wlan_get_prop_type;
	nwam_known_wlan_prop_multivalued;
	nwam_known_wlan_get_prop_description;
	nwam_known_wlan_get_default_proplist;
	nwam_known_wlan_add_to_known_wlans;
	nwam_known_wlan_remove_from_known_wlans;
	nwam_wlan_scan;
	nwam_wlan_get_scan_results;
	nwam_wlan_select;
	nwam_wlan_set_key;
	nwam_events_init;
	nwam_events_fini;
	nwam_event_wait;
	nwam_event_free;
	nwam_action_to_string;
	nwam_event_type_to_string;
	nwam_state_to_string;
	nwam_aux_state_to_string;
	nwam_object_type_to_string;
	nwam_string_to_object_type;
	nwam_backend_init;
	nwam_backend_fini;
	nwam_record_audit_event;
	nwam_event_send;
	nwam_event_send_fini;
	nwam_event_queue_init;
	nwam_event_queue_fini;
	nwam_tokenize_by_unescaped_delim;
    local:
	*;
};
