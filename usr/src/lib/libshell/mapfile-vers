#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License (the "License").
# You may not use this file except in compliance with the License.
#
# You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at usr/src/OPENSOLARIS.LICENSE.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets "[]" replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#

#
# Copyright (c) 2007, 2011, Oracle and/or its affiliates. All rights reserved.
#

#
# MAPFILE HEADER START
#
# WARNING:  STOP NOW.  DO NOT MODIFY THIS FILE.
# Object versioning must comply with the rules detailed in
#
#	usr/src/lib/README.mapfiles
#
# You should not be making modifications here until you've read the most current
# copy of that file. If you need help, contact a gatekeeper for guidance.
#
# MAPFILE HEADER END
#

$mapfile_version 2

STUB_OBJECT;

SYMBOL_VERSION SUNWprivate_1.1 {
    global:
	sh_bltin_tree;
	sh_subfork;
	sh_init;
	sh_reinit;
	sh_eval;
	sh_delay;
	sh_parse;
	sh_tdump;
	sh_trap;
	sh_fun;
	sh_funscope;
	sh_iogetiop;
	sh_main;
	sh_menu;
	sh_addbuiltin;
	sh_fmtq;
	sh_fmtqf;
	sh_strnum;
	sh_access;
	sh_close;
	sh_dup;
	sh_exit;
	sh_fcntl;
	sh_getinterp;
	sh_open;
	sh_pathopen;
	sh_read;
	sh_write;
	sh_seek;
	sh_pipe;
	sh_waitnotify;
	sh_getscope;
	sh_setscope;
	sh_sigcheck;
	sh_isoption;
	sh_onoption;
	sh_offoption;
	sh_waitsafe;
	sh_exec;
	sh_getliblist;
	
	nv_setarray;
	nv_associative;
	nv_aindex;
	nv_nextsub;
	nv_getsub;
	nv_putsub;
	nv_opensub;
	nv_adddisc;
	nv_clone;
	nv_close;
	nv_context;
	nv_create;
	nv_dict;
	nv_getn;
	nv_getnum;
	nv_getv;
	nv_getval;
	nv_hasdisc;
	nv_isnull;
	nv_lastdict;
	nv_newattr;
	nv_open;
	nv_putval;
	nv_putv;
	nv_scan;
	nv_setdisc;
	nv_setref;
	nv_settype;
	nv_setvec;
	nv_setvtree;
	nv_setsize;
	nv_disc;
	nv_unset;
	nv_search;
	nv_name;
	nv_discfun;

    plugin_version;

	# semi-private, needed for shcomp
	sh			{
					ASSERT {
						TYPE=data;
$if __GNUC
						SH_ATTR=nobits;
$endif
$if _sparc && _ELF32
						SIZE=0x4a0;
$elif _sparc && _ELF64
						SIZE=0x740;
$elif _x86 && _ELF32
						SIZE=0x498;
$elif _x86 && _ELF64
						SIZE=0x720;
$else
$error unknown platform
$endif
					};
				};
	e_dict			{ ASSERT { TYPE=data; SIZE=9 } };

    local:
	*;
};

# Builtin shell commands
# (see libshell/common/include/builtins.h)
# Note: We have to export all the |b_*()| symbols that the "builtin" command
# can load builtins which are not enabled by the default OS/Net configuration.
SYMBOL_VERSION SUNWprivate_1.1 {
    global:
	B_echo;
	B_login;
	b_alarm;
	b_alias;
	b_bg;
	b_break;
	b_builtin;
	b_cd;
	b_close;
	b_command;
	b_dot_cmd;
	b_dup;
	b_eval;
	b_exec;
	b_false;
	b_getopts;
	b_hist;
	b_jobs;
	b_kill;
	b_let;
	b_open;
	b_poll;
	b_print;
	b_printf;
	b_pwd;
	b_read;
	b_readonly;
	b_return;
	b_rewind;
	b_set;
	b_shift;
	b_sleep;
	b_stat;
	b_test;
	b_tmpfile;
	b_trap;
	b_true;
	b_typeset;
	b_ulimit;
	b_umask;
	b_unalias;
	b_unset;
	b_vpath;
	b_wait;
	b_whence;	
    local:
	*;
};
