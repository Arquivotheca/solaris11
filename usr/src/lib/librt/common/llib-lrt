/*
 * CDDL HEADER START
 *
 * The contents of this file are subject to the terms of the
 * Common Development and Distribution License (the "License").
 * You may not use this file except in compliance with the License.
 *
 * You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
 * or http://www.opensolaris.org/os/licensing.
 * See the License for the specific language governing permissions
 * and limitations under the License.
 *
 * When distributing Covered Code, include this CDDL HEADER in each
 * file and include the License file at usr/src/OPENSOLARIS.LICENSE.
 * If applicable, add the following below this CDDL HEADER, with the
 * fields enclosed by brackets "[]" replaced with your own identifying
 * information: Portions Copyright [yyyy] [name of copyright owner]
 *
 * CDDL HEADER END
 */

/*
 * Copyright 2006 Sun Microsystems, Inc.  All rights reserved.
 * Use is subject to license terms.
 */

/* LINTLIBRARY */
/* PROTOLIB1 */

#pragma ident	"%Z%%M%	%I%	%E% SMI"

#include <aio.h>
#include <mqueue.h>
#include <sched.h>
#include <semaphore.h>

/*
 * NOTE: We list the following interfaces explicitly because the header
 *	 files that they're part of include *lots* of other interfaces
 *	 that are not part of librt.
 */

int	clock_getres(clockid_t, struct timespec *);
int	clock_gettime(clockid_t, struct timespec *);
int	clock_settime(clockid_t, const struct timespec *);
int	fdatasync(int);
int	nanosleep(const struct timespec *, struct timespec *);
int	shm_open(const char *, int, mode_t);
int	shm_unlink(const char *);
int	sigwaitinfo(const sigset_t *_RESTRICT_KYWD, siginfo_t *_RESTRICT_KYWD);
int	sigtimedwait(const sigset_t *_RESTRICT_KYWD, siginfo_t *_RESTRICT_KYWD,
	    const struct timespec *_RESTRICT_KYWD);
int	sigqueue(pid_t, int, const union sigval);
int	timer_create(clockid_t, struct sigevent *_RESTRICT_KYWD,
		timer_t *_RESTRICT_KYWD);
int	timer_delete(timer_t);
int	timer_getoverrun(timer_t);
int	timer_gettime(timer_t, struct itimerspec *);
int	timer_settime(timer_t, int, const struct itimerspec *_RESTRICT_KYWD,
		struct itimerspec *_RESTRICT_KYWD);
