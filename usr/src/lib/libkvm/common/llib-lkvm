/*
 * CDDL HEADER START
 *
 * The contents of this file are subject to the terms of the
 * Common Development and Distribution License, Version 1.0 only
 * (the "License").  You may not use this file except in compliance
 * with the License.
 *
 * You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
 * or http://www.opensolaris.org/os/licensing.
 * See the License for the specific language governing permissions
 * and limitations under the License.
 *
 * When distributing Covered Code, include this CDDL HEADER in each
 * file and include the License file at usr/src/OPENSOLARIS.LICENSE.
 * If applicable, add the following below this CDDL HEADER, with the
 * fields enclosed by brackets "[]" replaced with your own identifying
 * information: Portions Copyright [yyyy] [name of copyright owner]
 *
 * CDDL HEADER END
 */
/* LINTLIBRARY */
/* PROTOLIB1 */

/*
 * Copyright (c) 1997-1998 by Sun Microsystems, Inc. 
 * All rights reserved. 
 */ 
#pragma ident	"%Z%%M%	%I%	%E% SMI"

#include <stdlib.h>
#include <stdio.h>
#include <fcntl.h>
#include <sys/proc.h>
#include <sys/user.h>
#include <kvm.h>

kvm_t *kvm_open(const char *, const char *, const char *, int, const char *);
int kvm_close(kvm_t *);
int kvm_nlist(kvm_t *, struct nlist []);
ssize_t kvm_read(kvm_t *, uintptr_t, void *, size_t);
ssize_t kvm_kread(kvm_t *, uintptr_t, void *, size_t);
ssize_t kvm_uread(kvm_t *, uintptr_t, void *, size_t);
ssize_t kvm_aread(kvm_t *, uintptr_t, void *, size_t, struct as *);
ssize_t kvm_pread(kvm_t *, uint64_t, void *, size_t);
ssize_t kvm_write(kvm_t *, uintptr_t, const void *, size_t);
ssize_t kvm_kwrite(kvm_t *, uintptr_t, const void *, size_t);
ssize_t kvm_uwrite(kvm_t *, uintptr_t, const void *, size_t);
ssize_t kvm_awrite(kvm_t *, uintptr_t, const void *, size_t, struct as *);
ssize_t kvm_pwrite(kvm_t *, uint64_t, const void *, size_t);
uint64_t kvm_physaddr(kvm_t *, struct as *, uintptr_t);
proc_t *kvm_getproc(kvm_t *, pid_t);
proc_t *kvm_nextproc(kvm_t *);
int kvm_setproc(kvm_t *);
user_t *kvm_getu(kvm_t *, struct proc *);
int kvm_getcmd(kvm_t *, proc_t *, user_t *, char ***, char ***);
