/*
 * CDDL HEADER START
 *
 * The contents of this file are subject to the terms of the
 * Common Development and Distribution License (the "License").
 * You may not use this file except in compliance with the License.
 *
 * You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
 * or http://www.opensolaris.org/os/licensing.
 * See the License for the specific language governing permissions
 * and limitations under the License.
 *
 * When distributing Covered Code, include this CDDL HEADER in each
 * file and include the License file at usr/src/OPENSOLARIS.LICENSE.
 * If applicable, add the following below this CDDL HEADER, with the
 * fields enclosed by brackets "[]" replaced with your own identifying
 * information: Portions Copyright [yyyy] [name of copyright owner]
 *
 * CDDL HEADER END
 */

/*
 * Copyright (c) 1998, 2011, Oracle and/or its affiliates. All rights reserved.
 */

/*LINTLIBRARY*/
/*PROTOLIB1*/

#include <sys/param.h>
#include <config_admin.h>

cfga_err_t
config_change_state(
	cfga_cmd_t state_change_cmd,
	int num_ap_ids,
	char * const *ap_ids,
	const char *options,
	struct cfga_confirm *confp,
	struct cfga_msg *msgp,
	char **errstring,
	cfga_flags_t flags);

cfga_err_t
config_private_func(
	const char *function,
	int num_ap_ids,
	char * const *ap_ids,
	const char *options,
	struct cfga_confirm *confp,
	struct cfga_msg *msgp,
	char **errstring,
	cfga_flags_t flags);

cfga_err_t
config_test(
	int num_ap_ids,
	char * const *ap_ids,
	const char *options,
	struct cfga_msg *msgp,
	char **errstring,
	cfga_flags_t flags);

cfga_err_t
config_stat(
	int num_ap_ids,
	char * const *ap_ids,
	struct cfga_stat_data *buf,
	const char *options,
	char **errstring);

cfga_err_t
config_list(
	struct cfga_stat_data **ap_di_list,
	int *nlist,
	const char *options,
	char **errstring);

cfga_err_t
config_list_ext(
	int num_ap_ids,
	char *const *ap_ids,
	struct cfga_list_data **ap_id_list,
	int *nlist,
	const char* options,
	const char *listopts,
	char **errstring,
	cfga_flags_t flags);

cfga_err_t
config_help(
	int num_ap_ids,
	char * const *ap_ids,
	struct cfga_msg *msgp,
	const char *options,
	cfga_flags_t flags);

const char *
config_strerror(
	cfga_err_t cfgerrnum);

int
config_ap_id_cmp(
	const cfga_ap_log_id_t ap_id1,
	const cfga_ap_log_id_t ap_id2);

void
config_unload_libs(void);

#ifdef CFGA_PLUGIN_LIB

cfga_err_t
cfga_change_state(
	cfga_cmd_t,
	const char *,
	const char *,
	struct cfga_confirm *,
	struct cfga_msg *,
	char **,
	cfga_flags_t);

cfga_err_t
cfga_private_func(
	const char *,
	const char *,
	const char *,
	struct cfga_confirm *,
	struct cfga_msg *,
	char **,
	cfga_flags_t);

cfga_err_t
cfga_test(
	const char *,
	const char *,
	struct cfga_msg *,
	char **,
	cfga_flags_t);

cfga_err_t
cfga_stat(
	const char *,
	struct cfga_stat_data *,
	const char *,
	char **);

cfga_err_t
cfga_list(
	const char *,
	struct cfga_stat_data **,
	int *,
	const char *,
	char **);

cfga_err_t
cfga_list_ext(
	const char *,
	struct cfga_list_data **,
	int *,
	const char *,
	const char *,
	char **,
	cfga_flags_t);

cfga_err_t
cfga_help(
	struct cfga_msg *,
	const char *,
	cfga_flags_t);

int
cfga_ap_id_cmp(
	const cfga_ap_log_id_t,
	const cfga_ap_log_id_t);

#endif
