#
# Copyright (c) 1999, 2011, Oracle and/or its affiliates. All rights reserved.
#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License (the "License").
# You may not use this file except in compliance with the License.
#
# You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at usr/src/OPENSOLARIS.LICENSE.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets "[]" replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#

#Messages from slpd before logging is established.

slpd_usage = usage: slpd [monitor] [stop] [-f <config file name>]
slpd_no_file = slpd: Could not open specified configuration file ``{0}''''
slpd_err_file = slpd:IOException reading config file ``{0}'''': {1}
slpd_int_err = slpd: Service location exception initializing: {0}
slpd_intnet_err = slpd: Could not initialize networking: {0}
slpd_net_err = slpd: Networking error initializing slpd: {0}
slpd_err = slpd: Service location exception ``{0}'''' initializing slpd: {1}
slpd_no_gui = slpd: Can''t create slpd monitor for logging. Using stdout.
bad_log = Unable to create alternate log: {0}
bad_log_class = Log class must be instance of java.io.Writer, not {0}

#Server only messages logged through SLPConfig.writeLog().

hello = SLP SA server now taking requests on network interfaces ``{0}'''' for configured scopes``{1}''''.\n    Discovered scopes are ``{2}''''.\n    SA attributes are ``{3}''''.
goodby = SLP SA server going offline on network interfaces ``{0}'''' for configured scopes ``{1}''''.\n    Discovered scopes are ``{2}''''.\n    SA attributes are ``{3}''''. 
hello_da = SLP DA now taking requests on network interfaces ``{0}'''' for configured scopes ``{1}''''.\n    Discovered scopes are ``{2}''''.\n    DA attributes are ``{3}''''.
goodby_da =  SLP DA going offline on network interfaces ``{0}'''' for configured scopes ``{1}''''.\n    Discovered scopes are ``{2}''''.\n    DA attributes are ``{3}''''.
slpd_sa_stop_failure = Failure trying to bring SLP SA server down. Is the slpd running as a DA? SLP error code: {0}
exiting_msg = Exiting...
fatal_error = Fatal {0} exception in service table: {1}.\n    Method arguments:{2}\n    Stack backtrace:{3}
nonfatal_error = Nonfatal {0} exception in service table: {1}.\n    Method arguments:{2}\n    Stack backtrace:{3}
no_message = <No Message>
passive_advert_exception = IOException during passive DA advertisement: {0}
request_in = Incoming datagram request received from ``{0}'''' on interface ``{1}''''.
sa_forwarding_exception = Service location exception ``{0}'''' forwarding SA message ``0x{1}'''': {2}
ioexception_server_stream = IO exception processing stream for host:port ``{0}:{1}'''' on interface ``{2}'''': {3}
sle_forward_error = Service location ``{0}'''' forwarding SA message ``{1}'''': {2}
rh_drop_da_multi = Dropping a multicast request to a DA. Request type:``{0}'''', xid=``0x{1}'''', host:port=``{2}:{3}'''' interface ``{4}''''.
rh_tcp_error = Syntax error in message on TCP stream for host:port ``{0}:{1}'''' on interface ``{2}'''', closing socket.
rh_datagram_ioe = IOException processing datagram packet from host:port ``{0}:{1}'''' on interface ``{2}'''': {3}
rh_socket_closed = Remote client ``{0}'''' closed socket port ``{1}'''', local interface is ``{2}''''.
rh_socket_error = Socket exception replying to host:port ``{0}:{1}'''' on interface ``{2}'''': {3}
rh_ioexception_reply = IOException replying to host:port ``{0}:{1}'''' on interface ``{2}'''': {3}
rh_rqst_in = Request ``{0}'''' from host:port ``{1}:{2}'''' on interface ``{3}'''':\n {4}
rh_rqst_in_progress =  Request from host:port ``{0}:{1}'''' on interface ``{2}'''' dropped because it is already in progress.
rh_rply_null = No reply for message ``{0}'''' from host:port ``{1}:{2}'''' on interface ``{3}''''.
rh_rply_out = Reply to ``{0}'''' host:port ``{1}:{2}'''' on interface ``{3}'''':\n {4}
rh_not_enough_bytes = Not enough bytes in the input stream for host:port ``{0}:{1}''''
rh_version_number_error = Unrecognized version number ``{0}'''' for message from host:port ``{1}:{2}'''' on interface ``{3}''''.
rh_unparse_exception = Exception during creation of request message object.\n    host:port=``{0}:{1}''''  interface=``{2}''''   Version=``{3}'''' Function code=``{4}''''\n    Exception=``{5}''''\n    Backtrace={6}\n
rh_passive_drop = Dropping passive DAAdvert ``{0}'''' with scopes ``{1}'''' because passive detection is off.
rh_client_sa_advert_drop = Dropping SAAdvert ``0x{0}'''' from host:port ``{1}:{2}'''' on interface ``{3}'''' because server doesn''t handle SAAdverts.
rh_prev_resp = Dropping request ``{0}'''' from host:port ``{1}:{2}'''' on interface ``{3}'''' because on previous responder list.
rh_no_multi = Dropping {0} ``0x{1}'''' from host:port ``{2}:{3}'''' on interface ``{4}'''' because it was multicast.
rh_no_uni = Dropping {0} ``0x{1}'''' from host:port ``{2}:{3}'''' because it was unicast from a foreign host.
rh_multi_error = Dropping {0} ``0x{1}'''' from host:port ``{2}:{3}'''' on interface ``{4}'''' because it was multicast and either there was no reply or an error occured.
rh_no_srv_uni = Dropping {0} ``0x{1}'''' from host:port ``{2}:{3}'''' on interface ``{4}'''' because it was unicast.
rh_advert_error = Service location exception ``{0}'''' making {1}: {2}
rh_drop_srv = Dropping {0} ``0x{1}'''' from host:port ``{2}:{3}'''' on interface ``{4}'''' because reply is null.
ad_active_off = Active discovery off due to zero net.slp.DAActiveDiscoveryInterval property.
ad_preconfig_not_advert = Dropping nonDAAdvert received in response to unicast to preconfigured DA ``{0}'''': {1}
ad_trans_error = Error ``{0}'''' unicasting to DA ``{1}'''': {2}
sdat_drop_fwd = Dropped forwarded SrvReg or SrvDereg to DA ``{0}'''' because can''t resolve hostname.
sdat_forward = Forwarding SrvReg or SrvDereg ``{0}'''' to DA `{1}''''.
sdat_forward_exception = Service location exception ``{0}'''' on forwarded SrvReg or SrvDereg ``{1}'''' to DA ``{2}'''': {3}
sdat_forward_err = Error on forwarded SrvReg or SrvDereg ``{0}'''' to DA ``{1}'''', error code is ``{2}''''.
ad_multi_error = Error ``{0}'''' multicasting active discovery request: {1}.
sdat_drop_fwd = Dropped forwarded SrvReg or SrvDereg to DA ``{0}'''' because can''t resolve hostname.
sdat_delete_da = Dropping DA ``{0}'''' with scopes ``{1}'''' because received a DAAdvert with timestamp 0.
sdat_add_da = Adding DA ``{0}'''' with scopes ``{1}'''' and boot timestamp ``{2}'''', forwarding registrations.
sdat_add_da_no_forward = Adding DA ``{0}'''' with scopes ``{1}'''' and boot timestamp ``{2}'''' but not forwarding because boot timestamp is the same as last time.
ssf_set_servc_warning = In serialized registrations, tried to set service: URL ``{0}'''' type to ``{1}''''.
ssim_ageout = Lifetime expired, dropping registration.\n    URL=``{0}''''\n    Attributes=`{1}''''\n    Locale=``{2}''''\n    URL Signature=``{3}''''\n    Attribute Signature=``{4}''''\n    Current Time=``{5}''''\n    Expiration Time=``{6}''''
ssim_dump_start = ^^^^^^ Service store {0} dump ^^^^^^
ssim_dump_end = vvvvvv Service store {0} dump end vvvvvv
ssim_dump_entry_start = >>>>
ssim_dump_entry =     Locale=``{0}''''\n    URL=``{1}''''\n    Registered lifetime=``{2}''''\n    Time remaining=``{3}''''\n    Service type=``{4}''''\n    Scopes=``{5}''''\n    Attributes=``{6}'''' 
ssim_dump_urlsig =  \n    URL Auth Block List=``{0}''''
ssim_dump_attrsig = \n    Attribute Auth Block List=``{0}''''
ssim_entry_end = <<<<
st_serialized_malform = Malformed serialized registration URL ``{0}''''.
st_unsupported_encoding = Unsupported encoding while opening URL ``{0}''''.
st_serialized_ioexception = IOException for serialized registration URL ``{0}'''': {1}
st_serialized_sle = Service location exception accessing serialized registration URL ``{0}'''': {1}
st_serialized_ex = Exception while registering serialized URL ``{0}'''': {1}
st_serialized_seex = Service location exception ``{0}'''' while registering serialized URL ``{1}'''': {2}
st_dump = Dumping service store in {0}.
st_reg_add = Added a registration in {0} \n    Locale=``{1}''''\n    Service Type=``{2}''''\n    URL=``{3}''''\n    Attributes=``{4}''''\n    Scopes=``{5}''''
st_reg_update = Updated a registration in {0} \n    Locale=``{1}''''\n    Service Type=``{2}''''\n    URL=``{3}''''\n    Attributes=``{4}''''\n    Scopes=``{5}''''
st_reg_drop = Dropped a registration in {0} because: {1}\n    Locale=``{2}''''\n    Service Type=``{3}''''\n    URL=``{4}''''\n    Attributes=``{5}''''\n    Scopes=``{6}''''
st_dereg = Removed a registration in {0}.\n    Locale=``{1}''''\n    Service Type=``{2}''''\n    URL=``{3}''''\n
st_delattr = Deleted attributes for a registration in {0}.\n    Locale=``{1}''''\n    Service Type=``{2}''''\n    URL=``{3}''''\n   Tags=``{4}''''
st_dereg_drop = Dropped deregistration in {0} because: {1}.\n    Locale=``{2}''''\n    Service Type=``{3}''''\n    URL=``{4}''''
st_dereg_attr_drop = Dropped delete attributes in {0} because: {1}.\n    Locale=``{2}''''\n    Service Type=``{3}''''\n    URL=``{4}''''\n Tags=``{5}''''
st_stypes = Found service types in {0}.\n    Naming Authority=``{1}''''\n    Scopes=``{2}''''\n    Types=``{3}''''
st_stypes_drop = Dropped a service type request in {0} because: {1}.\n    Naming Authority=``{2}''''\n    Scopes=``{3}'''' Locale=``{4}''''
st_sreq = Found services in {0}.\n    Service Type=``{1}''''\n    Scopes=``{2}''''\n    Query=``{3}''''\n    Locale=``{4}''''\n    Services=``{5}''''\n    Signatures=``{6}''''
st_sreq_drop = Dropped a service request in {0} because: {1}.\n    Service Type=``{2}''''\n    Scopes=``{3}''''\n    Query=``{4}''''\n    Locale=``{5}''''
st_st_attr = Found attributes in {0}.\n    Service Type=``{1}''''\n    Scopes=``{2}\n    Tags=``{3}''''\n    Locale=``{4}''''\n    Attributes=``{5}''''
st_url_attr = Found attributes in {0}.\n    URL=``{1}''''\n    Scopes=``{2}\n    Tags=``{3}''''\n    Locale=``{4}''''\n    Attributes=``{5}''''
st_st_attr_drop = Dropped attribute request in {0} because: {1}.\n    Service Type=``{2}''''\n    Scopes=``{3}''''\n    Tags=``{4}''''\n    Locale=``{5}''''
st_url_attr_drop = Dropped attribute request in {0} because: {1}.\n   URL=``{2}''''\n    Scopes=``{3}''''\n    Tags=``{4}''''\n    Locale=``{5}''''
hkm_private = private keys
hkm_public = public keys
sl_incoming = Incoming stream connection from ``{0}'''' on interface ``{1}''.
sl_sock_timeout = Can''t set socket timeout for ``{0}'''' on interface ``{1}'': {2}.
sdat_daadvert_vrfy_failed = Dropping DAAdvert for ``{0}'' because verification failed.
sslm_unparse_error = Exception during creation of request message object.\n    Exception=``{0}''''\n    Backtrace={1}\n

slh_creation_exception = Exception ``{0}'''' during creation of header for SLP Version {1}: {2}

cmm_creation_error = No client side class ``{0}'''' for SLP Version {1}.
cmm_creation_exception = Exception ``{0}'''' during creation of server side client message ``{1}'''' for SLP Version {2}: {3}
cant_get_equivalency = Can not determine PKI equivalency for ``{0}'': {1}

#Server messages passed to Assert.slpassert() and Assert.nonNullParameter().

daadv_nonvalid_url = Could not form valid url.
ls_null_config = Null config_in parameter
par_ntok = Query parser got number token
rh_null_sock = Null sock_in parameter
rh_null_packy = Null packet_in paramter
rh_null_bais = Null bais parameter
rh_return_err = Exception while creating error return request: {0}
rh_rqst_type_err = Type of request not recognized:\n {0}
rh_header_class_error = Error and not a server side header:{0}
sdat_nonsa = Tryed to forward nonSA message:\n {0}
ssim_unk_qtype = Unknown type ``{0}'''' in query evaluation.
ssim_unk_qop = Invalid operator ``{0}'''' in query evaluation.
ssim_null_url_table = Null URL table for key ``{0}''''.
ssim_null_lang_rec = Null record for language key ``{0}''''.
ssim_null_lang_table =  Null language table for key ``{0}''''.
ssim_empty_lang_table = Empty language table for key ``{0}''''.
ssim_empty_reg_vector = Empty list reg vector for key ``{0}''''.
ssim_empty_scope_table = Empty scope table for key ``{0}''''.
ssim_null_reg_vector = Null list reg vector for key ``{0}''''.
ssim_ssttable_botch = Scope/service type table missing entry for service type ``{0}'''', scope ``{1}''''.
ssim_ssttable_lang_botch = Scope/service type lang table missing entry for locale ``{0}'''' in service type ``{1}'''', scope ``{2}''''.
ssim_url_lang_botch = URL/scope table already has entry for locale ``{0}'''', URL ``{1}'''', scope ``{2}''''.
ssim_bvcollector_null = Null container in BVCollector instance.
ssim_scope_type_url_mismatch = Mismatch between scope/type table and URL table.
ssim_attrbvc_botch = ServiceLocationException while fetching attributes in AttrBVCollector: {0}
ssim_btree_botch = BtreeVector did not insert even though vector is not empty.
ssim_too_many_booleans = Contents vector has more than two booleans.
sls_repeat_failure = Repeated StreamListener IOException: {0}
ssdat_number_format = Number format exception for directory-agent.sun timestamp attribute.
ssdat_register_error = Service location exception registering in Sun DA server table: {0}\n    URL=``{1}''''\n    scopes=``{2}''''
ssdat_deregister_error = Service location exception deregistering in Sun DA server table: {0}\n    address=``{1}''''\n    scopes=``{2}''''

#Server exception messages.

par_char_closing = Characters after closing parenthesis in query ``{0}''''
par_syn_err = Error in syntax of query ``{0}''''
par_init_par = Query missing initial parenthesis
par_tok_un = Unrecognized token in query
par_final_par = Query missing final parenthesis
par_wild_op = Wildcarded pattern with wrong operator ``{0}''''
par_bool_op = Boolean with operator ``{0}''''
par_key_op = Keyword attribute with operator ``{0}''''
par_tag_syn = Syntax error in attribute tag
par_comp_op = Syntax error in comparison operator
par_qend = End of query during value parse
sstm_iana = ``IANA'''' is not a legal naming authority name
sattr_nonattr = Vector contains nonServiceLocationAttribute object ``{0}''''
sdaadv_nondaurl = Service URL service type ``{0}'''' is not DA URL type
sdaadv_neg = Timestamp is negative
ssaadv_nonsaurl = Service URL service type ``{0}'''' is not SA URL type
srq_stype_missing = Service request is missing service type
ssf_no_class = Can''t find class for service store class name ``{0}''''
ssf_inst_ex = Exception instantiating service store class ``{0}'''': {1}
ssf_ill_ex = Illegal access exception instantiating service store class ``{0}'''': {1}
ssf_class_cast = Class ``{0}'''' does not implement the ServiceStore interface
ssf_io_deser = IOException deserializing document: {0}
ssf_not_valid_url = The line ``{0}'''' is not a valid service URL registration line
ssf_not_valid_lifetime = The lifetime ``{0}'''' is not a valid integer. (line {1})
ssf_syntax_err = Syntax error during deserialization: {0} (line {1})
ssim_no_rec = No record for ``{0}''''
ssim_no_rec_locale = No record for ``{0}'''' and locale ``{1}''''
ssim_mis_auth = Missing authentication on request or record
ssim_scope_mis = Scopes do not match existing registration
ssim_attr_mis = Attribute tags do not match existing registration for the same scopes and language
ssim_st_already = Nonservice URL already registered under different service type
ssim_lang_unsup = No advertisements in language locale ``{0}''''
st_zero = URL has zero lifetime
st_attr_sig = Attribute signature bit is on but URL signature bit is not
st_prot_update = Cannot update signed registrations
st_scope_unsup = None of the scopes are supported
st_prot_attr_dereg = Attribute deregistration not allowed on a signed registration
st_error = Remote agent error
st_restricted_type = Attempt to register or deregister restricted type ``{0}'''' from outside the slpd process
st_prot_non_reg = Server security is ON and the registration is not signed
st_unprot_non_reg = Server security is OFF and the registration is signed
st_prot_non_dereg = Server security in ON and the deregistration is not signed
st_unprot_non_dereg = Server security is OFF and the deregistration is signed
st_par_attr = Partial attribute request with an SPI included
st_st_req = SPI specified in service type attribute request
st_cant_sign_as = Can not sign DAAdvert or SAAdvert with requested SPI ``{0}''

#V1 Compatibility Messages

v1_init_error = Error initializing SLPv1 compatibility: {0}
v1_security_enabled = Can't initialize SLPv1 compatibility:Security is enabled.
v1_scope_char_res = Scope ``{0}''''contains one or more of /,:.
v1_scope_name_res = Scope name ``{0}'''' is one of reserved names ``local'''' or ``remote''''.
v1_unsupported_encoding = Unsupported character encoding ``{0}''.
v1_multiscope = Tried to create a SLPv1 message object with more than one scope.
v1_abstract_type = Tried to create an SLPv1 message object with an abstract type.
v1_not_surl = Tried to create an SLPv1 message object with a nonservice: type.
v1_query_error = Syntax error in SLPv1 query ``{0}''''.
v1_nonzero_dialect = Dialect header field is nonzero in SLPv1 message.
v1_no_security = SLPv1 compatibility doesn't handle authentication.
v1_charcode_error = Character code ``{0}'''' has too many bytes for encoding ``{1}''''.
v1_stringcode_error = String encoding ``{0}'''' has no corresponding character in encoding ``{1}''''.
v1_escape_error = Error in SLPv1 escape for string ``{0}''''.
v1_8bit_error = Character ``{0}'''' is outside the 8 bit range.
v1_query_error = Error in SLPv1 query syntax for query ``{0}''''.
v1_advert_error = Can't find SLPv1 DAAdvert class.
v1_scope_format = Format of SLPv1 scope attribute values ``{0}'''' is in error.
v1_service_type_format = SLPv1 service type ``{0}'''' improperly formatted.
v1_abstract_type_conflict = SLPv1 expecting a protocol type ``{0}'''' but abstract type ``{1}'''' has the same abstract type name.
v1_radix64_error = Error in SLPv1 radix64 string ``{0}''''.
v1_hello = Running SLPv1 compatibility DA bridge for scopes ``{0}''''.
