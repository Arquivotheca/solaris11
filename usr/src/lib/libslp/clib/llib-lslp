/*
 * CDDL HEADER START
 *
 * The contents of this file are subject to the terms of the
 * Common Development and Distribution License, Version 1.0 only
 * (the "License").  You may not use this file except in compliance
 * with the License.
 *
 * You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
 * or http://www.opensolaris.org/os/licensing.
 * See the License for the specific language governing permissions
 * and limitations under the License.
 *
 * When distributing Covered Code, include this CDDL HEADER in each
 * file and include the License file at usr/src/OPENSOLARIS.LICENSE.
 * If applicable, add the following below this CDDL HEADER, with the
 * fields enclosed by brackets "[]" replaced with your own identifying
 * information: Portions Copyright [yyyy] [name of copyright owner]
 *
 * CDDL HEADER END
 */
/* LINTLIBRARY */
/* PROTOLIB1 */

/*
 * Copyright (c) 1999 by Sun Microsystems, Inc.
 * All rights reserved.
 */

#pragma ident	"%Z%%M%	%I%	%E% SMI"

#include <slp.h>

SLPError SLPOpen(const char *pcLang, SLPBoolean isAsync, SLPHandle *phSLP);

void SLPClose(SLPHandle hSLP);

SLPError SLPReg(SLPHandle   hSLP, const char  *pcSrvURL,
		const unsigned short usLifetime,
		const char  *pcSrvType,
		const char  *pcAttrs, SLPBoolean  fresh,
		SLPRegReport callback, void *pvUser);

SLPError SLPDereg(SLPHandle hSLP, const char *pURL,
			SLPRegReport callback, void *pvUser);

SLPError SLPDelAttrs(SLPHandle hSLP, const char *pURL,
			const char *pcAttrs,
			SLPRegReport callback, void *pvUser);


SLPError SLPFindSrvTypes(SLPHandle hSLP, const char *pcNamingAuthority,
				const char *pcScopeList,
				SLPSrvTypeCallback callback, void *pvUser);

SLPError SLPFindSrvs(SLPHandle hSLP, const char *pcServiceType,
			const char *pcScope, const char *pcSearchFilter,
			SLPSrvURLCallback callback, void *pvUser);

SLPError SLPFindAttrs(SLPHandle hSLP, const char *pcURL, const char *pcScope,
			const char *pcAttrIds,
			SLPAttrCallback callback, void *pvUser);

unsigned short SLPGetRefreshInterval(void);

SLPError SLPFindScopes(SLPHandle hSLP, char **ppcScopes);

SLPError SLPEscape(const char *pcInbuf, char **ppcOutBuf, SLPBoolean isTag);

SLPError SLPUnescape(const char *pcInbuf, char **ppcOutBuf, SLPBoolean isTag);

void SLPSetProperty(const char *pcName, const char *pcValue);

const char *SLPGetProperty(const char *pcName);

void SLPFree(void *pvMem);

SLPError SLPParseSrvURL(char *pcSrvURL, SLPSrvURL** ppSrvURL);

const char *slp_strerror(SLPError err);
