#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License (the "License").
# You may not use this file except in compliance with the License.
#
# You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at usr/src/OPENSOLARIS.LICENSE.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets "[]" replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#
#
# Copyright (c) 2011, Oracle and/or its affiliates. All rights reserved.
#

#
# MAPFILE HEADER START
#
# WARNING:  STOP NOW.  DO NOT MODIFY THIS FILE.
# Object versioning must comply with the rules detailed in
#
#	usr/src/lib/README.mapfiles
#
# You should not be making modifications here until you've read the most current
# copy of that file. If you need help, contact a gatekeeper for guidance.
#
# MAPFILE HEADER END
#

$mapfile_version 2

STUB_OBJECT;

$if _x86 && _ELF32
$add i386
$endif


SYMBOL_VERSION SUNWprivate {
    global:
	AFT_Struct		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[8];
$else
						SIZE=16[8];
$endif
					};
				};
	BatteryWarrantyR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[3];
$else
						SIZE=16[3];
$endif
					};
				};
	Battery_StatusR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[4];
$else
						SIZE=16[4];
$endif
					};
				};
	Battery_WarrantyR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[3];
$else
						SIZE=16[3];
$endif
					};
				};
	Board_Info_Area_S		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[19];
$else
						SIZE=16[19];
$endif
					};
				};
	Boolean_90		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[2];
$else
						SIZE=16[2];
$endif
					};
				};
	COD_CPUSpeedR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[8];
$else
						SIZE=16[8];
$endif
					};
				};
	CPCI_Slot_DataR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[4];
$else
						SIZE=16[4];
$endif
					};
				};
	CPUBoardSpeedR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[4];
$else
						SIZE=16[4];
$endif
					};
				};
	CPUFirmwareR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[3];
$else
						SIZE=16[3];
$endif
					};
				};
	CPUR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[4];
$else
						SIZE=16[4];
$endif
					};
				};
	CPU_Type		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[2];
$else
						SIZE=16[2];
$endif
					};
				};
	Cause_Code		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[168];
$else
						SIZE=16[168];
$endif
					};
				};
	Chassis_DataR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[5];
$else
						SIZE=16[5];
$endif
					};
				};
	Chassis_InfoR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[5];
$else
						SIZE=16[5];
$endif
					};
				};
	Chassis_Info_Area_S		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[12];
$else
						SIZE=16[12];
$endif
					};
				};
	Chassis_Name		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[23];
$else
						SIZE=16[23];
$endif
					};
				};
	Config_LevelR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[3];
$else
						SIZE=16[3];
$endif
					};
				};
	Configured_LevelR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[4];
$else
						SIZE=16[4];
$endif
					};
				};
	Cum_Power_SummaryR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[4];
$else
						SIZE=16[4];
$endif
					};
				};
	Cum_Temperature_HistoryR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[6];
$else
						SIZE=16[6];
$endif
					};
				};
	Customer_DataR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[2];
$else
						SIZE=16[2];
$endif
					};
				};
	DDR1PinSteerR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[2];
$else
						SIZE=16[2];
$endif
					};
				};
	DIMM_Conf_R		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[2];
$else
						SIZE=16[2];
$endif
					};
				};
	DIMM_R		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[2];
$else
						SIZE=16[2];
$endif
					};
				};
	DMCFirmwareR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[7];
$else
						SIZE=16[7];
$endif
					};
				};
	DS_CPU_Six_FanTrayR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[3];
$else
						SIZE=16[3];
$endif
					};
				};
	DS_IO_Four_FanTrayR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[3];
$else
						SIZE=16[3];
$endif
					};
				};
	Dak_DBPNameR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[2];
$else
						SIZE=16[2];
$endif
					};
				};
	Dak_DBPR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[7];
$else
						SIZE=16[7];
$endif
					};
				};
	Dak_DualCPUModuleR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[21];
$else
						SIZE=16[21];
$endif
					};
				};
	Dak_FCAL_GBICR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[2];
$else
						SIZE=16[2];
$endif
					};
				};
	Dak_IOBoardR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[5];
$else
						SIZE=16[5];
$endif
					};
				};
	Dak_MotherboardR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[13];
$else
						SIZE=16[13];
$endif
					};
				};
	Dak_PDBR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[7];
$else
						SIZE=16[7];
$endif
					};
				};
	Dak_PowersupplyR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[3];
$else
						SIZE=16[3];
$endif
					};
				};
	Dak_RSCR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[7];
$else
						SIZE=16[7];
$endif
					};
				};
	Device_Type		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[185];
$else
						SIZE=16[185];
$endif
					};
				};
	Dictionary_Name		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[1];
$else
						SIZE=16[1];
$endif
					};
				};
	Drawer_ConfigR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[5];
$else
						SIZE=16[5];
$endif
					};
				};
	Drawer_DescriptionR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[16];
$else
						SIZE=16[16];
$endif
					};
				};
	Drawer_InfoR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[6];
$else
						SIZE=16[6];
$endif
					};
				};
	ECO_CurrentR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[4];
$else
						SIZE=16[4];
$endif
					};
				};
	EcacheR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[2];
$else
						SIZE=16[2];
$endif
					};
				};
	Ecache_Mode		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[2];
$else
						SIZE=16[2];
$endif
					};
				};
	Ecache_Module_IDR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[2];
$else
						SIZE=16[2];
$endif
					};
				};
	Element_Defs		{
					ASSERT {
						TYPE=data;
$if _ELF32
						SIZE=0xb310;
$elif _ELF64
						SIZE=0xeec0;
$else
$error unknown ELFCLASS
$endif
					};
				};
	Error_Code		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[13];
$else
						SIZE=16[13];
$endif
					};
				};
	Error_Platform		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[5];
$else
						SIZE=16[5];
$endif
					};
				};
	Error_SummaryR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[2];
$else
						SIZE=16[2];
$endif
					};
				};
	Error_Type		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[2];
$else
						SIZE=16[2];
$endif
					};
				};
	EthernetMACAddr2R		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[2];
$else
						SIZE=16[2];
$endif
					};
				};
	EthernetMACAddrRangeR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[2];
$else
						SIZE=16[2];
$endif
					};
				};
	Event_DataR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[4];
$else
						SIZE=16[4];
$endif
					};
				};
	ExcalCPUR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[7];
$else
						SIZE=16[7];
$endif
					};
				};
	ExcalMotherboardR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[1];
$else
						SIZE=16[1];
$endif
					};
				};
	ExcalUsageR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[3];
$else
						SIZE=16[3];
$endif
					};
				};
	FMA_CodeR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[3];
$else
						SIZE=16[3];
$endif
					};
				};
	FMA_Event_DataR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[6];
$else
						SIZE=16[6];
$endif
					};
				};
	FMA_MessageR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[6];
$else
						SIZE=16[6];
$endif
					};
				};
	FRU_Props_Private2R		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[3];
$else
						SIZE=16[3];
$endif
					};
				};
	FRU_Props_PrivateR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[2];
$else
						SIZE=16[2];
$endif
					};
				};
	FRU_Shortnames		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[16];
$else
						SIZE=16[16];
$endif
					};
				};
	FRU_Type		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[116];
$else
						SIZE=16[116];
$endif
					};
				};
	Fan_Speeds		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[2];
$else
						SIZE=16[2];
$endif
					};
				};
	Fault_DataR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[3];
$else
						SIZE=16[3];
$endif
					};
				};
	Fault_Install_DataR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[6];
$else
						SIZE=16[6];
$endif
					};
				};
	Format_Type_List		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[6];
$else
						SIZE=16[6];
$endif
					};
				};
	Fru_DescriptionR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[6];
$else
						SIZE=16[6];
$endif
					};
				};
	HW_Data_R		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[2];
$else
						SIZE=16[2];
$endif
					};
				};
	IPMI_BoardR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[9];
$else
						SIZE=16[9];
$endif
					};
				};
	IPMI_ChassisR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[5];
$else
						SIZE=16[5];
$endif
					};
				};
	IPMI_Common_Header_S		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[8];
$else
						SIZE=16[8];
$endif
					};
				};
	IPMI_LangCode		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[28];
$else
						SIZE=16[28];
$endif
					};
				};
	IPMI_ProductR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[10];
$else
						SIZE=16[10];
$endif
					};
				};
	Initiator_30		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[17];
$else
						SIZE=16[17];
$endif
					};
				};
	InstallationR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[11];
$else
						SIZE=16[11];
$endif
					};
				};
	L2_BoardR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[1];
$else
						SIZE=16[1];
$endif
					};
				};
	Laser_Cum_Power_SummaryR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[4];
$else
						SIZE=16[4];
$endif
					};
				};
	Laser_Power_EventsR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[2];
$else
						SIZE=16[2];
$endif
					};
				};
	Laser_Power_SummaryR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[4];
$else
						SIZE=16[4];
$endif
					};
				};
	Lit_DBPR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[6];
$else
						SIZE=16[6];
$endif
					};
				};
	MCNet_ConfigR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[3];
$else
						SIZE=16[3];
$endif
					};
				};
	MD_Bottom_IO_FanTrayR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[3];
$else
						SIZE=16[3];
$endif
					};
				};
	MD_CPU_Three_FanTrayR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[3];
$else
						SIZE=16[3];
$endif
					};
				};
	MD_Top_FanTrayR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[3];
$else
						SIZE=16[3];
$endif
					};
				};
	ME_Three_FanTrayR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[3];
$else
						SIZE=16[3];
$endif
					};
				};
	MaintenanceR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[3];
$else
						SIZE=16[3];
$endif
					};
				};
	ManR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[9];
$else
						SIZE=16[9];
$endif
					};
				};
	Message_Type		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[5];
$else
						SIZE=16[5];
$endif
					};
				};
	Netra_ACFirmwareR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[7];
$else
						SIZE=16[7];
$endif
					};
				};
	Netra_DMCFirmwareR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[7];
$else
						SIZE=16[7];
$endif
					};
				};
	Network1R		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[7];
$else
						SIZE=16[7];
$endif
					};
				};
	NetworkR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[6];
$else
						SIZE=16[6];
$endif
					};
				};
	OEM_Record_Header_S		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[5];
$else
						SIZE=16[5];
$endif
					};
				};
	OTS_Man1R		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[17];
$else
						SIZE=16[17];
$endif
					};
				};
	OTS_ManR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[19];
$else
						SIZE=16[19];
$endif
					};
				};
	PROM_FirmwareR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[2];
$else
						SIZE=16[2];
$endif
					};
				};
	PSU_PVout1R		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[2];
$else
						SIZE=16[2];
$endif
					};
				};
	PSU_PVstby1R		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[2];
$else
						SIZE=16[2];
$endif
					};
				};
	PartNumber_ChangedR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[7];
$else
						SIZE=16[7];
$endif
					};
				};
	Partner_Part_NumberR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[2];
$else
						SIZE=16[2];
$endif
					};
				};
	PlatformR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[2];
$else
						SIZE=16[2];
$endif
					};
				};
	Platform_Type		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[14];
$else
						SIZE=16[14];
$endif
					};
				};
	Power_EventsR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[2];
$else
						SIZE=16[2];
$endif
					};
				};
	Power_Events_50		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[3];
$else
						SIZE=16[3];
$endif
					};
				};
	Power_On_DataR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[2];
$else
						SIZE=16[2];
$endif
					};
				};
	Power_SummaryR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[4];
$else
						SIZE=16[4];
$endif
					};
				};
	Product_Info_Area_S		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[22];
$else
						SIZE=16[22];
$endif
					};
				};
	Program_Vendor_ID_Source_List		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[1];
$else
						SIZE=16[1];
$endif
					};
				};
	Repair_DetailR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[10];
$else
						SIZE=16[10];
$endif
					};
				};
	Repair_SummaryR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[3];
$else
						SIZE=16[3];
$endif
					};
				};
	Repair_Sympton_Code		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[208];
$else
						SIZE=16[208];
$endif
					};
				};
	Repair_Update		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[5];
$else
						SIZE=16[5];
$endif
					};
				};
	SG_BoardParameterR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[2];
$else
						SIZE=16[2];
$endif
					};
				};
	SG_CPUSpeedR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[8];
$else
						SIZE=16[8];
$endif
					};
				};
	SG_CenterplaneR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[7];
$else
						SIZE=16[7];
$endif
					};
				};
	SG_FanTrayR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[3];
$else
						SIZE=16[3];
$endif
					};
				};
	SG_HostIdR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[6];
$else
						SIZE=16[6];
$endif
					};
				};
	SG_PowerSupplyR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[12];
$else
						SIZE=16[12];
$endif
					};
				};
	SPD1_R		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[22];
$else
						SIZE=16[22];
$endif
					};
				};
	SPD_DDR2_R		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[22];
$else
						SIZE=16[22];
$endif
					};
				};
	SPD_DDR3_R		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[18];
$else
						SIZE=16[18];
$endif
					};
				};
	SPD_Err_Detect		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[3];
$else
						SIZE=16[3];
$endif
					};
				};
	SPD_FBDIMM_R		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[18];
$else
						SIZE=16[18];
$endif
					};
				};
	SPD_Memory_Type		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[10];
$else
						SIZE=16[10];
$endif
					};
				};
	SPD_Module_Bank_Density_110		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[5];
$else
						SIZE=16[5];
$endif
					};
				};
	SPD_ParametersR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[208];
$else
						SIZE=16[208];
$endif
					};
				};
	SPD_R		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[22];
$else
						SIZE=16[22];
$endif
					};
				};
	SPD_Sun_Mod_Power_Parm_111		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[3];
$else
						SIZE=16[3];
$endif
					};
				};
	SP_FanTrayR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[3];
$else
						SIZE=16[3];
$endif
					};
				};
	SSN_Rule_List		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[3];
$else
						SIZE=16[3];
$endif
					};
				};
	Sheffield_Bridge_FirmwareR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[2];
$else
						SIZE=16[2];
$endif
					};
				};
	Sheffield_RCP_FirmwareR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[2];
$else
						SIZE=16[2];
$endif
					};
				};
	Sheffield_Split_ModeR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[6];
$else
						SIZE=16[6];
$endif
					};
				};
	Soft_ErrorsR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[4];
$else
						SIZE=16[4];
$endif
					};
				};
	Status_CurrentR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[2];
$else
						SIZE=16[2];
$endif
					};
				};
	Status_Event_Code_71		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[9];
$else
						SIZE=16[9];
$endif
					};
				};
	Status_EventsR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[7];
$else
						SIZE=16[7];
$endif
					};
				};
	Status_Proxy1R		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[3];
$else
						SIZE=16[3];
$endif
					};
				};
	Status_Proxy2R		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[3];
$else
						SIZE=16[3];
$endif
					};
				};
	Status_Proxy3R		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[3];
$else
						SIZE=16[3];
$endif
					};
				};
	Status_Proxy_SparseR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[3];
$else
						SIZE=16[3];
$endif
					};
				};
	Sun_Man1R		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[13];
$else
						SIZE=16[13];
$endif
					};
				};
	Sun_ManR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[15];
$else
						SIZE=16[15];
$endif
					};
				};
	Sun_Part_Number_DataR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[5];
$else
						SIZE=16[5];
$endif
					};
				};
	Sun_SPD_DIMMR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[9];
$else
						SIZE=16[9];
$endif
					};
				};
	Sun_SPD_DataR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[5];
$else
						SIZE=16[5];
$endif
					};
				};
	Temperature_ExcessR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[2];
$else
						SIZE=16[2];
$endif
					};
				};
	Temperature_HistoryR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[6];
$else
						SIZE=16[6];
$endif
					};
				};
	Temperature_LimitsR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[2];
$else
						SIZE=16[2];
$endif
					};
				};
	UsageR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[6];
$else
						SIZE=16[6];
$endif
					};
				};
	Vendor		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[746];
$else
						SIZE=16[746];
$endif
					};
				};
	Vendor_ID_Source_List		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[1];
$else
						SIZE=16[1];
$endif
					};
				};
	Vendor_Site_ID_Source_List		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[1];
$else
						SIZE=16[1];
$endif
					};
				};
	WCI_CalibrationR		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[4];
$else
						SIZE=16[4];
$endif
					};
				};
	Wildcat_IO_DIMM_Lot		{
					ASSERT {
						TYPE=data;
$if i386
						SIZE=12[1];
$else
						SIZE=16[1];
$endif
					};
				};
	fru_reg_list_entries;
	fru_reg_lookup_def_by_name;
	fru_reg_lookup_def_by_tag;
	max_data_element_count		{
					ASSERT {
						TYPE=data;
						SIZE=4;
					};
				};

    local:
	*;
};
