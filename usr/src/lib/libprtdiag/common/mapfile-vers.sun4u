#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License (the "License").
# You may not use this file except in compliance with the License.
#
# You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at usr/src/OPENSOLARIS.LICENSE.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets "[]" replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#
#
# Copyright (c) 2011, Oracle and/or its affiliates. All rights reserved.
#

#
# MAPFILE HEADER START
#
# WARNING:  STOP NOW.  DO NOT MODIFY THIS FILE.
# Object versioning must comply with the rules detailed in
#
#	usr/src/lib/README.mapfiles
#
# You should not be making modifications here until you've read the most current
# copy of that file. If you need help, contact a gatekeeper for guidance.
#
# MAPFILE HEADER END
#

$mapfile_version 2

STUB_OBJECT;

SYMBOL_VERSION SUNWprivate {
	_error;
	add_node;
	child;
	create_io_card_name;
	decode_qlc_card_model_prop;
	dev_find_node;
	dev_find_node_by_compatible;
	dev_find_node_by_type;
	dev_find_type;
	dev_next_node;
	dev_next_node_by_compatible;
	dev_next_node_by_type;
	dev_next_type;
	disp_fail_parts;
	disp_powerfail;
	disp_prom_version;
	display;
	display_boardnum;
	display_cpu_devices;
	display_cpus;
	display_diaginfo;
	display_ffb;
	display_hp_fail_fault;
	display_io_cards;
	display_io_devices;
	display_memoryconf;
	display_memorysize;
	display_mid;
	display_pci;
	display_platform_specific_header;
	display_psycho_pci;
	display_sbus;
	display_us3_banks;
	display_us3_failed_banks;
	distinguish_identical_io_cards;
	do_devinfo;
	do_prominfo;
	dump_node;
	error_check;
	find_board;
	find_device;
	find_failed_node;
	find_pci_bus;
	find_prop;
	fmt_manf_id;
	free_io_cards;
	get_board_num;
	get_card_frequency;
	get_cpu_freq;
	get_dev_func_num;
	get_ecache_size;
	get_id;
	get_node_name;
	get_node_type;
	get_pci_bus;
	get_pci_card_model;
	get_pci_class_code_reg;
	get_pci_class_codes;
	get_pci_device;
	get_pci_to_pci_device;
	get_prop_val;
	get_sbus_slot;
	get_slot_number_str;
	get_time;
	get_us3_mem_regs;
	getpropval;
	has_board_num;
	insert_board;
	insert_io_card;
	is_openprom;
	is_pci_bridge;
	is_pci_bridge_other;
	log_printf;
	logging				{
						ASSERT {
							TYPE=data;
$if __GNUC
							SH_ATTR=nobits;
$endif
							SIZE=4;
						};
					 };
	next;
	next_failed_node;
	node_failed;
	node_status;
	ph				{
						ASSERT {
							TYPE=data;
							SH_ATTR=nobits;
							SIZE=4;
						};
					};
	platform_disp_prom_version;
	populate_slot_name_arr;
	print_flag			{ ASSERT { TYPE=data; SIZE=4 } };
	print_header;
	print_us3_failed_memory_line;
	print_us3_memory_line;
	progname			{
						ASSERT {
							TYPE=data;
							SH_ATTR=nobits;
							SIZE=addrsize;
						};
					};
	promclose;
	promdev				{ ASSERT { TYPE=data; SIZE=4 } };
	promopen;
	read_platform_kstats;
	read_sun4u_kstats;
	resolve_board_types;
	slices				{
						ASSERT {
							TYPE=data;
							SH_ATTR=nobits;
							SIZE=4;
						};
					};
	sys_clk				{
						ASSERT {
							TYPE=data;
							SH_ATTR=nobits;
							SIZE=4;
						};
					};
	walk;

    local:
	*;
};
