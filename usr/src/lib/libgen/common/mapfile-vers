#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License (the "License").
# You may not use this file except in compliance with the License.
#
# You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at usr/src/OPENSOLARIS.LICENSE.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets "[]" replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#
#
# Copyright (c) 2006, 2011, Oracle and/or its affiliates. All rights reserved.
#

#
# MAPFILE HEADER START
#
# WARNING:  STOP NOW.  DO NOT MODIFY THIS FILE.
# Object versioning must comply with the rules detailed in
#
#	usr/src/lib/README.mapfiles
#
# You should not be making modifications here until you've read the most current
# copy of that file. If you need help, contact a gatekeeper for guidance.
#
# MAPFILE HEADER END
#

$mapfile_version 2

STUB_OBJECT;

SYMBOL_VERSION SUNW_1.1 {
    global:
	advance;
	bgets;
	braelist		{
					ASSERT {
						TYPE=data;
$if __GNUC
						SH_ATTR=nobits;
$endif
						SIZE=addrsize[128];
					};
				};
	___braelist;
	braslist		{
					ASSERT {
						TYPE=data;
$if __GNUC
						SH_ATTR=nobits;
$endif
						SIZE=addrsize[128];
					};
				};
	___braslist;
	bufsplit;
	compile;
	copylist;
	eaccess;
	gmatch;
	isencrypt;
	loc1			{
					ASSERT {
						TYPE=data;
$if __GNUC
						SH_ATTR=nobits;
$endif
						SIZE=addrsize;
					};
				};
	___loc1;
	loc2			{
					ASSERT {
						TYPE=data;
$if __GNUC
						SH_ATTR=nobits;
$endif
						SIZE=addrsize;
					};
				};
	___loc2;
	locs			{
					ASSERT {
						TYPE=data;
$if __GNUC
						SH_ATTR=nobits;
$endif
						SIZE=addrsize;
					};
				};
	___locs;
	mkdirp;
	nbra			{
					ASSERT {
						TYPE=data;
$if __GNUC
						SH_ATTR=nobits;
$endif
						SIZE=4;
					};
				};
	___nbra;
	p2close;
	p2open;
	pathfind;
	regerrno		{
					ASSERT {
						TYPE=data;
$if __GNUC
						SH_ATTR=nobits;
$endif
						SIZE=4;
					};
				};
	___regerrno;
	reglength		{
					ASSERT {
						TYPE=data;
$if __GNUC
						SH_ATTR=nobits;
$endif
						SIZE=4;
					};
				};
	___reglength;
	rmdirp;
	step;
	strcadd;
	strccpy;
	streadd;
	strecpy;
	strfind;
	strrspn;
	strtrns;

$if _ELF32
	copylist64;	# largefiles interfaces for 32-bit applications
$endif
};

SYMBOL_VERSION SUNWprivate_1.1 {
    global:
	_compile;	# just for vi
	__p2close;	# just for libcrypt
	__p2open;	# just for libcrypt
    local:
	*;
};
