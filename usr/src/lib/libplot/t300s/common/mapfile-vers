#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License (the "License").
# You may not use this file except in compliance with the License.
#
# You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at usr/src/OPENSOLARIS.LICENSE.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets "[]" replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#
#
# Copyright (c) 2006, 2011, Oracle and/or its affiliates. All rights reserved.
#

#
# MAPFILE HEADER START
#
# WARNING:  STOP NOW.  DO NOT MODIFY THIS FILE.
# Object versioning must comply with the rules detailed in
#
#	usr/src/lib/README.mapfiles
#
# You should not be making modifications here until you've read the most current
# copy of that file. If you need help, contact a gatekeeper for guidance.
#
# MAPFILE HEADER END
#

$mapfile_version 2

STUB_OBJECT;

SYMBOL_VERSION SUNW_1.1 {
    global:
	arc;
	box;
	circle;
	closepl;
	closevt;
	cont;
	dot;
	erase;
	label;
	line;
	linemod;
	move;
	openpl;
	openvt;
	point;
	space;
};

SYMBOL_VERSION SUNWprivate_1.1 {
    global:
	botx			{
					ASSERT {
						TYPE=data;
$if __GNUC
						SH_ATTR=nobits;
$endif
						SIZE=4;
					};
				};
	boty			{
					ASSERT {
						TYPE=data;
$if __GNUC
						SH_ATTR=nobits;
$endif
						SIZE=4;
					};
				};
	deltx			{
					ASSERT {
						TYPE=data;
						SH_ATTR=NOBITS;
						SIZE=4;
					};
				};
	delty			{
					ASSERT {
						TYPE=data;
$if __GNUC
						SH_ATTR=nobits;
$endif
						SIZE=4;
					};
				};
	dist2;
	inplot;
	ITTY			{
					ASSERT {
						TYPE=data;
						SH_ATTR=NOBITS;
						SIZE=0x12;
					};
				};
	_lib_version		{ ASSERT { TYPE=data; SIZE=4 } };
	movep;
	obotx			{
					ASSERT {
						TYPE=data;
$if __GNUC
						SH_ATTR=nobits;
$endif
						SIZE=4;
					};
				};
	oboty				{
					ASSERT {
						TYPE=data;
$if __GNUC
						SH_ATTR=nobits;
$endif
						SIZE=4;
					};
				};
	OUTF			{
					ASSERT {
						TYPE=data;
						SH_ATTR=NOBITS;
						SIZE=4;
					};
				};
	outplot;
	PTTY			{
					ASSERT {
						TYPE=data;
						SH_ATTR=NOBITS;
						SIZE=0x12;
					};
				};
	reset;
	scalex			{ ASSERT { TYPE=data; SIZE=4 } };
	scaley			{ ASSERT { TYPE=data; SIZE=4 } };
	spew;
	swap;
	tobotleft;
	xconv;
	xnow			{
					ASSERT {
						TYPE=data;
$if __GNUC
						SH_ATTR=nobits;
$endif
						SIZE=4;
					};
				};
	xoffset			{
					ASSERT {
						TYPE=data;
						SH_ATTR=NOBITS;
						SIZE=4;
					};
				};
	xsc;
	xscale			{
					ASSERT {
						TYPE=data;
						SH_ATTR=NOBITS;
						SIZE=4;
					};
				};
	yconv;
	ynow			{
					ASSERT {
						TYPE=data;
$if __GNUC
						SH_ATTR=nobits;
$endif
						SIZE=4;
					};
				};
	ysc;
	yscale			{
					ASSERT {
						TYPE=data;
						SH_ATTR=NOBITS;
						SIZE=4;
					};
				};
    local:
	*;
};
