
/* : : generated by proto : : */
/* : : generated from /home/gisburn/ksh93/ast_ksh_20110208/build_i386_32bit_opt/src/lib/libast/features/sys by iffe version 2011-01-07 : : */
                  
#ifndef _AST_SYS_H
#if !defined(__PROTO__)
#  if defined(__STDC__) || defined(__cplusplus) || defined(_proto) || defined(c_plusplus)
#    if defined(__cplusplus)
#      define __LINKAGE__	"C"
#    else
#      define __LINKAGE__
#    endif
#    define __STDARG__
#    define __PROTO__(x)	x
#    define __OTORP__(x)
#    define __PARAM__(n,o)	n
#    if !defined(__STDC__) && !defined(__cplusplus)
#      if !defined(c_plusplus)
#      	define const
#      endif
#      define signed
#      define void		int
#      define volatile
#      define __V_		char
#    else
#      define __V_		void
#    endif
#  else
#    define __PROTO__(x)	()
#    define __OTORP__(x)	x
#    define __PARAM__(n,o)	o
#    define __LINKAGE__
#    define __V_		char
#    define const
#    define signed
#    define void		int
#    define volatile
#  endif
#  define __MANGLE__	__LINKAGE__
#  if defined(__cplusplus) || defined(c_plusplus)
#    define __VARARG__	...
#  else
#    define __VARARG__
#  endif
#  if defined(__STDARG__)
#    define __VA_START__(p,a)	va_start(p,a)
#  else
#    define __VA_START__(p,a)	va_start(p)
#  endif
#  if !defined(__INLINE__)
#    if defined(__cplusplus)
#      define __INLINE__	extern __MANGLE__ inline
#    else
#      if defined(_WIN32) && !defined(__GNUC__)
#      	define __INLINE__	__inline
#      endif
#    endif
#  endif
#endif
#if !defined(__LINKAGE__)
#define __LINKAGE__		/* 2004-08-11 transition */
#endif

#define _AST_SYS_H	1
#define _sys_types	1	/* #include <sys/types.h> ok */
#if __mips == 2 && !defined(_NO_LARGEFILE64_SOURCE)
#define _NO_LARGEFILE64_SOURCE 1
#endif
#if !defined(_NO_LARGEFILE64_SOURCE) && _typ_off64_t && _lib_lseek64 && _lib_stat64
#if !defined(_LARGEFILE64_SOURCE)
#define _LARGEFILE64_SOURCE 1
#endif
#if !defined(_LARGEFILE_SOURCE)
#define _LARGEFILE_SOURCE 1
#endif
#else
#undef _LARGEFILE64_SOURCE
#undef _LARGEFILE_SOURCE
#undef _typ_off64_t
#undef _typ_struct_dirent64
#undef _lib_creat64
#undef _lib_fstat64
#undef _lib_fstatvfs64
#undef _lib_ftruncate64
#undef _lib_lseek64
#undef _lib_lstat64
#undef _lib_mmap64
#undef _lib_open64
#undef _lib_readdir64
#undef _lib_stat64
#undef _lib_statvfs64
#undef _lib_truncate64
#endif
#if defined(__STDC__) && !defined(__USE_FIXED_PROTOTYPES__)
#define __USE_FIXED_PROTOTYPES__ 1 /* kick gcc out of the past */
#endif
#include <stdlib.h>
#include <stddef.h>
#include <sys/types.h>
#include <stdint.h>
#include <inttypes.h>
#include <string.h>
#include <unistd.h>
#include <limits.h>
#include <fcntl.h>
#include <locale.h>
#define _hdr_time	1	/* #include <time.h> ok */
#define _sys_time	1	/* #include <sys/time.h> ok */
#define _sys_times	1	/* #include <sys/times.h> ok */
#define _typ_dev_t	1	/* dev_t is a type */
#define _typ_nlink_t	1	/* nlink_t is a type */
#define _typ_gid_t	1	/* gid_t is a type */
#define _typ_mode_t	1	/* mode_t is a type */
#define _typ_uid_t	1	/* uid_t is a type */
#define _hdr_stdio	1	/* #include <stdio.h> ok */
#define _hdr_wchar	1	/* #include <wchar.h> ok */
#define _typ_wchar_t	1	/* wchar_t is a type */
#define _typ_pid_t	1	/* pid_t is a type */
#define _typ_ssize_t	1	/* ssize_t is a type */
#define _typ_wint_t	1	/* wint_t is a type */
#define _sys_socket	1	/* #include <sys/socket.h> ok */
#define _typ_socklen_t	1	/* socklen_t is a type */
#define _typ_size_t	1	/* size_t is a type */
#define _typ_clock_t	1	/* clock_t is a type */
#define _typ_ino_t	1	/* ino_t is a type */
#define _typ_off_t	1	/* off_t is a type */
#define _typ_ptrdiff_t	1	/* ptrdiff_t is a type */
#define _typ_time_t	1	/* time_t is a type */
#define _typ_div_t	1	/* div_t is a type */
#define _typ_ldiv_t	1	/* ldiv_t is a type */
#if _BLD_ast && defined(__EXPORT__)
#undef __MANGLE__
#define __MANGLE__ __LINKAGE__ __EXPORT__
#endif
extern __MANGLE__ void	cfree __PROTO__((__V_*));
extern __MANGLE__ int	eaccess __PROTO__((const char*, int));
extern __MANGLE__ int	execvpe __PROTO__((const char*, char* const[], char* const[]));
extern __MANGLE__ __V_*	pvalloc __PROTO__((size_t));
extern __MANGLE__ pid_t	spawnveg __PROTO__((const char*, char* const[], char* const[], pid_t));
#undef __MANGLE__
#define __MANGLE__ __LINKAGE__
#if !defined(va_start)
#if defined(__STDARG__)
#include <stdarg.h>
#else
#include <varargs.h>
#endif
#endif

#endif
