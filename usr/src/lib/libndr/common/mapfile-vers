#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License (the "License").
# You may not use this file except in compliance with the License.
#
# You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at usr/src/OPENSOLARIS.LICENSE.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets "[]" replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#
#
# Copyright (c) 2007, 2011, Oracle and/or its affiliates. All rights reserved.
#
#

#
# MAPFILE HEADER START
#
# WARNING:  STOP NOW.  DO NOT MODIFY THIS FILE.
# Object versioning must comply with the rules detailed in
#
#	usr/src/lib/README.mapfiles
#
# You should not be making modifications here until you've read the most current
# copy of that file. If you need help, contact a gatekeeper for guidance.
#
# MAPFILE HEADER END
#

$mapfile_version 2

STUB_OBJECT;

SYMBOL_VERSION SUNWprivate {
    global:
        ndr_buf_decode;
        ndr_buf_fini;
        ndr_buf_init;
        ndr_clnt_bind;
        ndr_clnt_call;
        ndr_clnt_free_heap;
	ndr_generic_call_stub;
        ndr_heap_avail;
        ndr_heap_create;
        ndr_heap_destroy;
        ndr_heap_malloc;
        ndr_heap_mkvcb;
        ndr_heap_mkvcs;
	ndr_heap_mstring;
	ndr_heap_siddup;
        ndr_heap_strdup;
        ndr_heap_used;
	ndr_hdalloc;
	ndr_hdfree;
	ndr_hdlookup;
        ndr_inner;
	ndr_is_admin;
	ndr_is_poweruser;
	ndr_mbstowcs;
	ndr_mbtowc;
	ndr_native_os;
        ndr_params;
	ndr_pipe_open;
	ndr_pipe_close;
	ndr_pipe_read;
	ndr_pipe_transact;
	ndr_pipe_write;
        ndr_svc_binding_pool_init;
	ndr_svc_lookup_name;
        ndr_svc_register;
        ndr_topmost;
	ndr_uuid_parse;
	ndr_uuid_unparse;
        nds_destruct;
        nds_initialize;
        ndt__char		{
					ASSERT {
						TYPE=data;
$if _ELF32
						SIZE=0x10;
$elif _ELF64
						SIZE=0x18;
$else
$error unknown ELFCLASS
$endif
					};
				};
        ndt_s_wchar		{
					ASSERT {
						TYPE=data;
$if _ELF32
						SIZE=0x10;
$elif _ELF64
						SIZE=0x18;
$else
$error unknown ELFCLASS
$endif
					};
				};
        ndt__uchar		{
					ASSERT {
						TYPE=data;
$if _ELF32
						SIZE=0x10;
$elif _ELF64
						SIZE=0x18;
$else
$error unknown ELFCLASS
$endif
					};
				};
        ndt__ulong		{
					ASSERT {
						TYPE=data;
$if _ELF32
						SIZE=0x10;
$elif _ELF64
						SIZE=0x18;
$else
$error unknown ELFCLASS
$endif
					};
				};

        ndt__ushort		{
					ASSERT {
						TYPE=data;
$if _ELF32
						SIZE=0x10;
$elif _ELF64
						SIZE=0x18;
$else
$error unknown ELFCLASS
$endif
					};
				};
    local:
	*;
};
