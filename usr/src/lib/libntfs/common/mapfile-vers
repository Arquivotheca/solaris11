#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License (the "License").
# You may not use this file except in compliance with the License.
#
# You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at usr/src/OPENSOLARIS.LICENSE.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets "[]" replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#
#
# Copyright (c) 2009, 2011, Oracle and/or its affiliates. All rights reserved.
#

#
# MAPFILE HEADER START
#
# WARNING:  STOP NOW.  DO NOT MODIFY THIS FILE.
# Object versioning must comply with the rules detailed in
#
#	usr/src/lib/README.mapfiles
#
# You should not be making modifications here until you've read the most current
# copy of that file. If you need help, contact a gatekeeper for guidance.
#
# MAPFILE HEADER END
#

$mapfile_version 2

STUB_OBJECT;

SYMBOL_VERSION SUNW_10.1 {
    global:
	AT_UNNAMED			{
						ASSERT {
							TYPE=data;
$if __GNUC
							SH_ATTR=nobits;
$endif
							SIZE=2;
						};
					};
	NTFS_INDEX_I30			{ ASSERT { TYPE=data; SIZE=2[5] } };
	NTFS_INDEX_O			{ ASSERT { TYPE=data; SIZE=2[3] } };
	NTFS_INDEX_Q			{ ASSERT { TYPE=data; SIZE=2[3] } };
	NTFS_INDEX_R			{ ASSERT { TYPE=data; SIZE=2[3] } };
	NTFS_INDEX_SDH			{ ASSERT { TYPE=data; SIZE=2[5] } };
	NTFS_INDEX_SII			{ ASSERT { TYPE=data; SIZE=2[5] } };
	ntfs_attr_add;
	ntfs_attr_close;
	ntfs_attr_find_in_attrdef;
	ntfs_attr_get_search_ctx;
	ntfs_attr_lookup;
	ntfs_attr_mst_pread;
	ntfs_attr_open;
	ntfs_attr_pread;
	ntfs_attr_put_search_ctx;
	ntfs_attr_pwrite;
	ntfs_attr_readall;
	__ntfs_attr_truncate;
	ntfs_boot_sector_is_ntfs;
	ntfs_calloc;
	ntfs_check_if_mounted;
	ntfs_cluster_read;
	ntfs_create;
	ntfs_device_alloc;
	ntfs_device_block_size_set;
	ntfs_device_free;
	ntfs_device_heads_get;
	ntfs_device_partition_start_sector_get;
	ntfs_device_sector_size_get;
	ntfs_device_sectors_per_track_get;
	ntfs_device_size_get;
	ntfs_device_unix_io_ops		{ ASSERT { TYPE=data; SIZE=0x28 } };
	ntfs_file_record_read;
	ntfs_file_record_read;
	ntfs_file_values_compare;
	ntfs_get_attribute_value;
	ntfs_get_attribute_value_length;
	ntfs_get_size_for_mapping_pairs;
	ntfs_guid_is_zero;
	ntfs_guid_to_mbs;
	ntfs_ie_get_vcn;
	ntfs_index_root_get;
	ntfs_inode_badclus_bad;
	ntfs_inode_close;
	ntfs_inode_open;
	ntfs_inode_sync;
	ntfs_libntfs_version;
	ntfs_log_clear_levels;
	ntfs_logfile_reset;
	ntfs_log_get_levels;
	ntfs_log_handler_outerr;
	ntfs_log_handler_stderr;
	ntfs_log_parse_option;
	ntfs_log_redirect;
	ntfs_log_set_handler;
	ntfs_log_set_levels;
	ntfs_malloc;
	ntfs_mapping_pairs_build;
	ntfs_mapping_pairs_decompress;
	ntfs_mbstoucs;
	ntfs_mft_record_layout;
	ntfs_mft_records_write;
	ntfs_mft_usn_dec;
	ntfs_mount;
	ntfs_mst_post_read_fixup;
	ntfs_mst_post_write_fixup;
	ntfs_mst_pre_write_fixup;
	ntfs_mst_pwrite;
	ntfs_names_are_equal;
	ntfs_names_collate;
	ntfs_pathname_to_inode;
	ntfs_readdir;
	ntfs_resident_attr_value_resize;
	ntfs_rl_pread;
	ntfs_rl_pwrite;
	ntfs_rl_truncate;
	ntfs_rl_vcn_to_lcn;
	ntfs_sid_to_mbs;
	ntfs_str2ucs;
	ntfs_ucsfree;
	ntfs_ucsnlen;
	ntfs_ucstombs;
	ntfs_umount;
	ntfs_upcase_table_build;
	ntfs_version_is_supported;
	ntfs_volume_alloc;
	ntfs_volume_startup;
	ntfs_volume_write_flags;
    local:
	*;
};
