#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License (the "License").
# You may not use this file except in compliance with the License.
#
# You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at usr/src/OPENSOLARIS.LICENSE.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets "[]" replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#
#
# Copyright 2008 Sun Microsystems, Inc.  All rights reserved.
# Use is subject to license terms.
#
#	Global definitions for sun4u starfire implementation specific modules.
#

#
#	Define directories.
#
ROOT_STARFIRE_DIR	= $(ROOT_PLAT_DIR)/SUNW,Ultra-Enterprise-10000
ROOT_STARFIRE_MOD_DIR	= $(ROOT_STARFIRE_DIR)/kernel
ROOT_STARFIRE_KERN_DIR_32 = $(ROOT_STARFIRE_MOD_DIR)
ROOT_STARFIRE_KERN_DIR_64 = $(ROOT_STARFIRE_MOD_DIR)/$(SUBDIR64)
ROOT_STARFIRE_MISC_DIR_32 = $(ROOT_STARFIRE_MOD_DIR)/misc
ROOT_STARFIRE_MISC_DIR_64 = $(ROOT_STARFIRE_MOD_DIR)/misc/$(SUBDIR64)
ROOT_STARFIRE_DRV_DIR_32 = $(ROOT_STARFIRE_MOD_DIR)/drv
ROOT_STARFIRE_DRV_DIR_64 = $(ROOT_STARFIRE_MOD_DIR)/drv/$(SUBDIR64)
ROOT_STARFIRE_CPU_DIR_32 = $(ROOT_STARFIRE_MOD_DIR)/cpu
ROOT_STARFIRE_CPU_DIR_64 = $(ROOT_STARFIRE_MOD_DIR)/cpu/$(SUBDIR64)

ROOT_STARFIRE_KERN_DIR	= $(ROOT_STARFIRE_KERN_DIR_$(CLASS))
ROOT_STARFIRE_MISC_DIR	= $(ROOT_STARFIRE_MISC_DIR_$(CLASS))
ROOT_STARFIRE_DRV_DIR	= $(ROOT_STARFIRE_DRV_DIR_$(CLASS))
ROOT_STARFIRE_CPU_DIR	= $(ROOT_STARFIRE_CPU_DIR_$(CLASS))

ROOT_PLAT_MOD_DIRS	+= $(ROOT_STARFIRE_MOD_DIR)
ROOT_PLAT_MISC_DIRS_32	+= $(ROOT_STARFIRE_MISC_DIR_32)

USR_STARFIRE_DIR	= $(USR_PLAT_DIR)/SUNW,Ultra-Enterprise-10000
USR_STARFIRE_INC_DIR	= $(USR_STARFIRE_DIR)/include
USR_STARFIRE_ISYS_DIR	= $(USR_STARFIRE_INC_DIR)/sys
USR_STARFIRE_SBIN_DIR	= $(USR_STARFIRE_DIR)/sbin
USR_STARFIRE_LIB_DIR	= $(USR_STARFIRE_DIR)/lib

#
# Define objects.
#
STARFIRE_OBJS	= starfire.o

#
#	Define modules.
#
STARFIRE_KMODS	= platmod
STARFIRE_KMODS	+= rootnex sbus pcipsy
STARFIRE_KMODS	+= cvc cvcredir
STARFIRE_KMODS	+= ngdr ngdrmach
STARFIRE_KMODS	+= idn

#
#	CPU modules.
#
STARFIRE_CPU_KMODS += spitfire

#
#	Include the makefiles which define build rule templates, the
#	collection of files per module, and a few specific flags. Note
#	that order is significant, just as with an include path. The
#	first build rule template which matches the files name will be
#	used. By including these in order from most machine dependent
#	to most machine independent, we allow a machine dependent file
#	to be used in preference over a machine independent version
#	(Such as a machine specific optimization, which preserves the
#	interfaces.)
#
include $(UTSBASE)/sun4u/ngdr/Makefile.files
include $(UTSBASE)/sun4u/starfire/Makefile.files

#
#	Include common rules.
#
include $(UTSBASE)/sun4u/Makefile.sun4u

#
#	Everybody needs to know how to build modstubs.o and to locate unix.o
#
UNIX_DIR	= $(UTSBASE)/$(PLATFORM)/starfire/unix
MODSTUBS_DIR	= $(UNIX_DIR)
DSF_DIR		= $(UTSBASE)/$(PLATFORM)/starfire/genassym
LINTS_DIR	= $(OBJS_DIR)
LINT_LIB_DIR	= $(UTSBASE)/$(PLATFORM)/starfire/lint-libs/$(OBJS_DIR)

UNIX_O		= $(UNIX_DIR)/$(OBJS_DIR)/unix.o

LINT_LIB	= $(LINT_LIB_DIR)/llib-lunix.ln

#
#	Define the actual specific platforms
#
MACHINE_DEFS	= -D$(PLATFORM) -D_MACHDEP -DSFMMU
MACHINE_DEFS	+= -D_STARFIRE -D_CPU_SIGNATURE

#
#	Define for inline pre-processing since
#	cpp not smart about v9 yet.
#
CPP_DEFS_32	=
CPP_DEFS_64	= -D__sparcv9
CPP_DEFS	= $(CPP_DEFS_$(CLASS))

#
# For now, disable these lint checks; maintainers should endeavor
# to investigate and remove these for maximum lint coverage.
# Please do not carry these forward to new Makefiles.
#
LINTTAGS	+= -erroff=E_SUSPICIOUS_COMPARISON
LINTTAGS	+= -erroff=E_BAD_PTR_CAST_ALIGN
LINTTAGS	+= -erroff=E_SUPPRESSION_DIRECTIVE_UNUSED
LINTTAGS	+= -erroff=E_STATIC_UNUSED
LINTTAGS	+= -erroff=E_PTRDIFF_OVERFLOW
LINTTAGS	+= -erroff=E_ASSIGN_NARROW_CONV
LINTTAGS	+= -erroff=E_BAD_FORMAT_STR2
