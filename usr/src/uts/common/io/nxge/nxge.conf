#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License (the "License").
# You may not use this file except in compliance with the License.
#
# You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at usr/src/OPENSOLARIS.LICENSE.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets "[]" replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#
#########################################################################
#
# Copyright (c) 2007, 2011, Oracle and/or its affiliates. All rights reserved.
#
#
# driver.conf file for Sun NIU 10Gb/1Gb Ethernet Driver (nxge)
#
#
#---------------Link Configuration ----------------------
#	The link parameters depend on the type of the card
#	and the port.
#	10 gigabit related parameters ( i.e adv_10gfdx_cap)
#	apply only to 10gigabit ports.
#	Half duplex is not supported on any NIU card.
#
# 	adv-autoneg-cap
#		Advertise auto-negotiation capability.
#		default is 1
# adv-autoneg-cap = 1;
#
#	adv_10gfdx_cap
#		Advertise 10gbps Full duplex  capability.
#		default is 1
# adv_10gfdx_cap = 1;
#
#	adv_1000fdx_cap
#		Advertise 1gbps Full duplex  capability.
#		default is 1
# adv_1000fdx_cap = 1;
#
#	adv_100fdx_cap
#		Advertise 100mbps Full duplex  capability.
#		default is 1
# adv_100fdx_cap = 1;
#
#	adv_10fdx_cap
#		Advertise 10mbps Full duplex  capability.
#		default is 1
# adv_10fdx_cap = 1;
#
#	adv_asmpause_cap
#		Advertise Asymmetric pause capability.
#		default is 0
# adv_asmpause_cap = 0;
#
#	adv_pause_cap
#		Advertise pause capability.
#		default is 1
# adv_pause_cap = 1;
#
#------- Receive DMA Configuration ----------------------------
#
#  rxdma-intr-time
#	Interrupts after this number of NIU hardware ticks have
#	elapsed since the last packet was received.
#	(Default = 8, Minimum = 1).
#
# rxdma-intr-pkts
#	Interrupt after this number of packets have arrived since
#	the last packet was serviced.
#	(Default = 32, Minimum = 8).
#
# Default Interrupt Blanking parameters:
#
# rxdma-intr-time = 8;
# rxdma-intr-pkts = 32;
#
# To turn off interrupt blanking, use the minimum values for both
# rxdma-intr-time and rxdma-intr-pkts.
#
#
#------- Classification and Load Distribution Configuration ------
#
# class-opt-****-***
# 	These parameters define how each IP class is configured.
# 	They control how the flow template is constructed and how
#	packets are distributed within RDC groups.
#
#	supported classes:
#	class-opt-ipv4-tcp class-opt-ipv4-udp class-opt-ipv4-sctp
#	class-opt-ipv4-ah class-opt-ipv6-tcp class-opt-ipv6-udp
#	class-opt-ipv6-sctp class-opt-ipv6-ah
#	
#	Configuration bits (Thes following bits will be decoded
#	by the driver as hex format).
#
# 	0010:		use MAC Port (for flow key)
#	0020:		use L2DA (for flow key)
#	0040:		use VLAN (for flow key)
#	0080:		use proto (for flow key)
#	0100:		use IP src addr (for flow key)
#	0200:		use IP dest addr (for flow key)
#	0400:		use Src Port (for flow key)
#	0800:		use Dest Port (for flow key)	
#
# The following uses L2DA, VLAN, IP proto, IP src and dest and TCP 
# src and dest port for computing the flow key for IPv4 TCP packets.
#
# class-opt-ipv4-tcp = 0xfe0;
#
# By default fragmented packets are not subject of classification set by above
# options.  The reason to do so is that fragments don't carry L4 headers so
# neither source/destination port can be used as flow key.  To enable
# classification of fragmented packets, set following option to 1 and make sure
# that source/destination port is not used to classify packets.
#
# classify-fragments = 0;
#
#------- Software LSO (large segment offload) support --------
# To enable software LSO for all nxge interfaces,
#soft-lso-enable = 1;
#
# To disable software LSO for all nxge interfaces,
#soft-lso-enable = 0;
#
# Default software LSO is set to 0.
# Please refer to examples at the end of this file for 
# enabling or disabling software LSO for a particular nxge interface.
#
#
# ------- How to set parameters for a particular interface --------
# The example below shows how to locate the device path and set a 
# parameter for a particular nxge interface. (Using jumbo support as
# an example)
#
# Use the following command to find out the device paths for nxge,
#       more /etc/path_to_inst | grep nxge
#
# For example, if you see,
#       "/pci@7c0/pci@0/pci@8/network@0" 0 "nxge"
#       "/pci@7c0/pci@0/pci@8/network@0,1" 1 "nxge"
#       "/pci@7c0/pci@0/pci@8/network@0,2" 2 "nxge"
#       "/pci@7c0/pci@0/pci@8/network@0,3" 3 "nxge"
#
# Use the above path_to_inst file as an example to enable software LSO
# for port 0 and 1, and disable software LSO for port 2 and 3.
#
# name = "pciex108e,abcd" parent = "/pci@7c0/pci@0/pci@8" unit-address = "0"
# soft-lso-enable = 1;
# name = "pciex108e,abcd" parent = "/pci@7c0/pci@0/pci@8" unit-address = "0,1"
# soft-lso-enable = 1;
# name = "pciex108e,abcd" parent = "/pci@7c0/pci@0/pci@8" unit-address = "0,2"
# soft-lso-enable = 0;
# name = "pciex108e,abcd" parent = "/pci@7c0/pci@0/pci@8" unit-address = "0,3"
# soft-lso-enable = 0;
#
#
# If the path_to_inst file is:
#
#	"/niu@80/network@0" 0 "nxge"
#	"/niu@80/network@1" 1 "nxge"
#
# Enable software lso for port 0, and disable software LSO for port 1
#
#name="SUNW,niusl" parent="/niu@80" unit-address="0" soft-lso-enable=1;
#name="SUNW,niusl" parent="/niu@80" unit-address="1" soft-lso-enable=0;
