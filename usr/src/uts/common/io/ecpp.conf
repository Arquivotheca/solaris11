#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License (the "License").
# You may not use this file except in compliance with the License.
#
# You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at usr/src/OPENSOLARIS.LICENSE.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets "[]" replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#
#
# Copyright 2006 Sun Microsystems, Inc.  All rights reserved.
# Use is subject to license terms.
#
#
#ident	"%Z%%M%	%I%	%E% SMI"

# When fast-centronics is set to "true", handshaking between the 
# driver and the peripheral is conducted by hardware. For some
# Centronics devices the hardware handshaking is too fast for the
# peripheral.  To slow down the handshaking, fast-centronics must 
# be set to "false". By default fast-centronics is set to "false".

fast-centronics="false";


# When fast-1284-compatible is set to "true", IEEE 1284 compliant
# devices operating in Compatibility mode will have the parallel port 
# handshaking controlled by the hardware.  When it is set to "false" 
# handshaking is PIO controlled by the driver.  By default 
# fast-1284-compatible is set "true".

fast-1284-compatible="true";


# Some Centronics devices require the Init signal to be toggled upon 
# power-up.  The application should do this directly with ioctl(2) interface
# as specified in ecpp(7d). As an alternative to using the API, the driver
# may be configured to toggle the nInit signal upon every time the device 
# is opened. If centronics-init-seq is set to "true" the Init signal 
# will be toggled when the device is opened.  The default is "false".

centronics-init-seq="false";


# When the ecpp driver detects a Centronics device is in an error state,
# ecpp will re-examine the device every centronics-retry milliseconds. 
# The default is 750 milliseconds.

centronics-retry=750;


# Some Centronics printers continue to assert BUSY after the ACK pulse.
# The driver waits for centronics-wait-for-busy microseconds for a 
# desertion of BUSY before it queues the current data transfer.
# The default is 5000 microseconds (5ms). 

centronics-wait-for-busy=5000;


# Devices that are not using fast handshaking may adjust the data setup
# time and the strobe pulse width. The Centronics specification states that 
# each must be at least 1 microsecond.  The default values are set to 
# 2 microseconds to ensure reliable transfers.

centronics-data-setup-time=2;
centronics-strobe-pulse-width=2;

# The ecpp driver waits ecpp-transfer-timeout seconds before it aborts
# the current transfer and put the untransferred data back on the queue.
# The default value for ecpp-transfer-timeout is 90 seconds.

ecpp-transfer-timeout=90;

# The following note applies to x86 platforms only
# If a system has a standard parallel port, but not enumerated
# in the device tree, you may gain access to the port by uncommenting
# the following lines and run "update_drv ecpp".
#
# name="lp" parent="/isa" interrupts=7 reg=1,0x378,0x8;
