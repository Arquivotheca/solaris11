# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License (the "License").
# You may not use this file except in compliance with the License.
#
# You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at usr/src/OPENSOLARIS.LICENSE.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets "[]" replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#
# Copyright 2009 Sun Microsystems, Inc.  All rights reserved.
# Use is subject to license terms.
#

one ohci_state
one ehci_state
one uhci_state
one usbser_state
one usbsacm_state
one usbsacm_port

### specify the root functions

root usba_common_power
root usba_common_register_events
root usba_ready_interface_association_node

root usbser_first_device
root usbser_putchar
root usbser_getchar
root usbser_ischar
root usbser_polledio_enter
root usbser_polledio_exit
root usb_console_output_fini
root usb_console_input_enter
root usb_console_input_exit
root usb_console_input_fini
root usb_console_input_init
root usb_console_read
root usb_get_dev_descr
root usb_get_if_number
root usb_parse_CV_cfg_descr
root usb_parse_CV_ep_descr
root usb_parse_CV_if_descr
root usb_pipe_get_private
root usb_get_current_frame_number
root usb_get_max_isoc_pkts
root usb_pipe_set_private
root usba_ready_interface_node
root usba_free_hcdi_ops
root usba_async_req_raise_power
root usba_async_req_lower_power
root usb_req_raise_power
root usb_req_lower_power
root usb_set_device_pwrlvl0
root usb_set_device_pwrlvl1
root usb_set_device_pwrlvl2
root usb_set_device_pwrlvl3
root usb_is_pm_enabled
root usb_async_req
root usb_pipe_bulk_transfer_size
root usb_get_ep_data
root usba_pipe_get_policy
root usb_pipe_ctrl_xfer_wait
root usb_pipe_drain_reqs
root usb_try_serialize_access
root usb_fini_serialization
root usb_init_serialization
root usb_release_access
root usb_serialize_access
root usb_clr_feature
root usb_clear_feature
root usb_get_alt_if
root usb_get_ep_descr
root usb_get_if_descr
root usb_log
root usb_pipe_isoc_xfer
root usb_pipe_stop_isoc_polling
root usb_set_alt_if
root usb_set_cfg
root usb_get_cfg
root usb_ep_num
root usb_get_status
root usb_pipe_reset
root usb_log_descr_tree
root usb_print_descr_tree
root usb_rval2errno
root usb_register_hotplug_cbs
root usb_get_current_cfgidx
root usb_register_client
root usb_reset_device
root usb_register_dev_driver
root usb_unregister_dev_driver

root usb_ugen_attach
root usb_ugen_close
root usb_ugen_detach
root usb_ugen_disconnect_ev_cb
root usb_ugen_get_hdl
root usb_ugen_open
root usb_ugen_poll
root usb_ugen_power
root usb_ugen_read
root usb_ugen_reconnect_ev_cb
root usb_ugen_write

root hcdi_autoclearing
root hcdi_cb_thread
root hcdi_shared_cb_thread

root hubd_restore_state_cb
root hubd_disconnect_event_cb
root hubd_post_resume_event_cb
root hubd_pre_suspend_event_cb
root hubd_reconnect_event_cb
root hubd_hotplug_thread
root hubd_reset_thread
root hubd_cpr_post_user_callb
root hubd_root_hub_cleanup_thread
root hubd_bus_power

root usba_pipe_do_async_func_thread
root usba_pipe_sync_reset
root usba_get_hc_dma_attr
root usba_hcdi_get_req_private
root usba_hcdi_set_req_private
root usba_dbuf_tail
root usba_hubdi_power
root usba_hubdi_root_hub_power
root usba_get_hotplug_stats
root usba_reset_hotplug_stats
root usba_ascii_string_descr
root usba_move_list
root usba_taskq_destroy
root usba_mk_mctl
root usb_fail_checkpoint

root ohci_intr
root ehci_intr

### specify the usbsacm root functions

root usbser_soft_state_size
root usbsacm_open
root usbser_close
root usbser_wput
root usbser_wsrv
root usbser_rsrv
root usbser_tx_cb
root usbser_rx_cb
root usbser_status_cb
root usbser_wq_thread
root usbser_rq_thread
root usbser_disconnect_cb
root usbser_reconnect_cb
root usbser_cpr_suspend
root usbser_cpr_resume

root usbsacm_bulkin_cb
root usbsacm_bulkout_cb

### specify usbsacm function pointers

add ds_ops::ds_attach targets usbsacm_ds_attach
add ds_ops::ds_detach targets usbsacm_ds_detach
add ds_ops::ds_register_cb targets usbsacm_ds_register_cb
add ds_ops::ds_unregister_cb targets usbsacm_ds_unregister_cb
add ds_ops::ds_open_port targets usbsacm_ds_open_port
add ds_ops::ds_close_port targets usbsacm_ds_close_port
add ds_ops::ds_usb_power targets usbsacm_ds_usb_power
add ds_ops::ds_suspend targets usbsacm_ds_suspend
add ds_ops::ds_resume targets usbsacm_ds_resume
add ds_ops::ds_disconnect targets usbsacm_ds_disconnect
add ds_ops::ds_reconnect targets usbsacm_ds_reconnect
add ds_ops::ds_set_port_params targets usbsacm_ds_set_port_params
add ds_ops::ds_set_modem_ctl targets usbsacm_ds_set_modem_ctl
add ds_ops::ds_get_modem_ctl targets usbsacm_ds_get_modem_ctl
add ds_ops::ds_break_ctl targets usbsacm_ds_break_ctl
add ds_ops::ds_tx targets usbsacm_ds_tx
add ds_ops::ds_rx targets usbsacm_ds_rx
add ds_ops::ds_stop targets usbsacm_ds_stop
add ds_ops::ds_start targets usbsacm_ds_start
add ds_ops::ds_fifo_flush targets usbsacm_ds_fifo_flush
add ds_ops::ds_fifo_drain targets usbsacm_ds_fifo_drain
add ds_ops::ds_out_pipe targets warlock_dummy
add ds_ops::ds_in_pipe targets warlock_dummy

add usbsacm_port::acm_cb.cb_tx targets usbser_tx_cb
add usbsacm_port::acm_cb.cb_rx targets usbser_rx_cb

add usb_ctrl_req::ctrl_cb	targets usbsacm_intr_cb
add usb_ctrl_req::ctrl_exc_cb	targets usbsacm_intr_ex_cb
add usb_bulk_req::bulk_cb	targets usbsacm_bulkin_cb
add usb_bulk_req::bulk_exc_cb	targets usbsacm_bulkin_cb
add usb_bulk_req::bulk_cb	targets usbsacm_bulkout_cb
add usb_bulk_req::bulk_exc_cb	targets usbsacm_bulkout_cb

add usb_isoc_req::isoc_cb	targets warlock_dummy
add usb_isoc_req::isoc_exc_cb	targets warlock_dummy
add usba_pipe_async_req::callback	targets warlock_dummy
add usba_pipe_async_req::sync_func	targets warlock_dummy
add usba_pm_req::cb			targets warlock_dummy

add ohci_trans_wrapper::tw_handle_td targets ohci_handle_ctrl_td
add ohci_trans_wrapper::tw_handle_td targets ohci_handle_bulk_td
add ohci_trans_wrapper::tw_handle_td targets ohci_handle_intr_td
add ohci_trans_wrapper::tw_handle_td targets ohci_handle_isoc_td

add ehci_trans_wrapper::tw_handle_qtd targets ehci_handle_bulk_qtd
add ehci_trans_wrapper::tw_handle_qtd targets ehci_handle_intr_qtd
add ehci_trans_wrapper::tw_handle_qtd targets ehci_handle_ctrl_qtd
