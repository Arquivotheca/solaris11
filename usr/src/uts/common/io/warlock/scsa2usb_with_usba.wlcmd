#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License (the "License").
# You may not use this file except in compliance with the License.
#
# You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at usr/src/OPENSOLARIS.LICENSE.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets "[]" replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#
#
# Copyright 2009 Sun Microsystems, Inc.  All rights reserved.
# Use is subject to license terms.
#

one	ohci_state
one	ehci_state
one	uhci_state
one	scsa2usb_state
one	scsi_device
one     __ddi_xbuf_attr
one     sd_lun
one     sd_resv_reclaim_request

### specify the root functions

root	usba_ascii_string_descr
root	usb_console_output_init
root	usb_console_output_fini
root	usb_console_output_enter
root	usb_console_output_exit
root	usb_console_write
root	usb_console_input_enter
root	usb_console_input_exit
root	usb_console_input_fini
root	usb_console_input_init
root	usb_console_read
root	usb_get_dev_descr
root	usb_get_if_number
root	usb_parse_CV_cfg_descr
root	usb_parse_CV_ep_descr
root	usb_parse_CV_if_descr
root	usb_parse_comp_ep_descr
root	usb_pipe_get_private
root	usb_get_current_frame_number
root	usb_get_max_isoc_pkts
root	usba_pipe_get_policy
root	usb_pipe_set_private
root	usba_ready_interface_node
root	usba_free_hcdi_ops
root	usba_async_req_raise_power
root	usba_async_req_lower_power
root    usb_rval2errno
root	usb_req_raise_power
root	usb_req_lower_power
root	usb_set_device_pwrlvl0
root	usb_set_device_pwrlvl1
root	usb_set_device_pwrlvl2
root	usb_set_device_pwrlvl3
root	usb_is_pm_enabled
root	usb_async_req
root	usb_pipe_bulk_transfer_size
root	usb_ep_num
root	usb_get_ep_data
root	usb_pipe_ctrl_xfer_wait
root	usb_pipe_drain_reqs
root	usb_try_serialize_access

root	usb_fini_serialization
root	usb_init_serialization
root	usb_release_access
root	usb_serialize_access

root    usb_alloc_bulk_req
root    usb_clear_feature
root    usb_free_bulk_req
root    usb_get_alt_if
root    usb_get_ep_descr
root    usb_get_if_descr
root    usb_pipe_bulk_xfer
root    usb_pipe_isoc_xfer
root    usb_pipe_stop_isoc_polling
root    usb_set_alt_if
root    usb_set_cfg
root    usb_get_cfg
root	usb_get_status
root    usb_log_descr_tree
root    usb_print_descr_tree
root	usb_register_hotplug_cbs
root	usb_get_current_cfgidx
root	usb_register_client
root	usb_ugen_power
root	usb_reset_device
root	usb_register_dev_driver
root	usb_unregister_dev_driver

root	usba_common_power
root	usba_common_register_events
root	usba_ready_interface_association_node
root    usba_get_hc_dma_attr
root    usba_hcdi_get_req_private
root    usba_hcdi_set_req_private
root	usba_pipe_do_async_func_thread
root	hcdi_autoclearing
root	hcdi_cb_thread
root    hcdi_shared_cb_thread


root	hubd_cpr_post_user_callb
root	hubd_hotplug_thread
root	hubd_reset_thread
root    hubd_disconnect_event_cb
root    hubd_post_resume_event_cb
root    hubd_pre_suspend_event_cb
root    hubd_reconnect_event_cb
root	hubd_root_hub_cleanup_thread

root	ohci_intr
root	ehci_intr
root    ohci_quiesce
root    uhci_quiesce
root    ehci_quiesce

root    usba_dbuf_tail
root	usb_log
root	hubd_restore_state_cb
root	hubd_disconnect_event_cb
root	hubd_bus_power
root	usba_hubdi_power
root	usba_hubdi_root_hub_power
root	usba_get_hotplug_stats
root	usba_reset_hotplug_stats
root	usba_taskq_destroy
root	usba_mk_mctl
root	usb_fail_checkpoint

add usba_pipe_async_req::sync_func targets usba_pipe_sync_close
add usba_pipe_async_req::sync_func targets usba_pipe_sync_reset

add hubd::h_cleanup_child targets warlock_dummy
add usb_isoc_req::isoc_cb		targets warlock_dummy
add usb_isoc_req::isoc_exc_cb		targets warlock_dummy
add usba_pipe_async_req::callback	targets warlock_dummy
add usba_pm_req::cb			targets warlock_dummy

add ohci_trans_wrapper::tw_handle_td targets ohci_handle_ctrl_td
add ohci_trans_wrapper::tw_handle_td targets ohci_handle_bulk_td
add ohci_trans_wrapper::tw_handle_td targets ohci_handle_intr_td
add ohci_trans_wrapper::tw_handle_td targets ohci_handle_isoc_td

add ehci_trans_wrapper::tw_handle_qtd targets ehci_handle_ctrl_qtd
add ehci_trans_wrapper::tw_handle_qtd targets ehci_handle_bulk_qtd
add ehci_trans_wrapper::tw_handle_qtd targets ehci_handle_intr_qtd

add scsi_pkt::pkt_comp targets \
        scsa2usb_scsi_destroy_pkt \
        scsa2usb_scsi_init_pkt \
        scsa2usb_scsi_start \
        scsa2usb_scsi_abort \
        scsa2usb_scsi_reset \
        scsa2usb_scsi_setcap \
        scsa2usb_scsi_getcap 

root	scsa2usb_scsi_tgt_init scsa2usb_scsi_tgt_probe scsa2usb_scsi_tgt_free

root	scsa2usb_reconnect_event_cb
root	scsa2usb_disconnect_event_cb
root	scsa2usb_work_thread
root	scsa2usb_panic_callb

add	scsi_hba_tran::tran_tgt_init	targets scsa2usb_scsi_tgt_init
add	scsi_hba_tran::tran_tgt_probe	targets scsa2usb_scsi_tgt_probe
add	scsi_hba_tran::tran_tgt_free	targets scsa2usb_scsi_tgt_free
add	scsi_hba_tran::tran_start	targets scsa2usb_scsi_start
add	scsi_hba_tran::tran_abort	targets scsa2usb_scsi_abort
add	scsi_hba_tran::tran_reset	targets scsa2usb_scsi_reset
add	scsi_hba_tran::tran_getcap 	targets scsa2usb_scsi_getcap
add	scsi_hba_tran::tran_setcap 	targets scsa2usb_scsi_setcap
add	scsi_hba_tran::tran_init_pkt 	targets scsa2usb_scsi_init_pkt
add	scsi_hba_tran::tran_destroy_pkt	targets scsa2usb_scsi_destroy_pkt
add	scsi_hba_tran::tran_bus_config targets scsa2usb_scsi_bus_config
add	scsi_hba_tran::tran_bus_unconfig targets scsa2usb_scsi_bus_unconfig

add	scsi_hba_tran::tran_bus_power targets warlock_dummy

ignore  sd.c:sd_scsi_probe_cache_fini
ignore  sd.c:sd_scsi_probe_cache_init
ignore	sd.c:sd_scsi_target_lun_fini
ignore	sd.c:sd_scsi_target_lun_init
root    sd.c:sd_taskq_create
root    sd.c:sd_taskq_delete 


add scsi_watch_request::swr_callback targets \
        sd.c:sd_mhd_watch_cb \
        sd.c:sd_media_watch_cb

add scsi_pkt::pkt_comp targets \
        sd.c:sd_mhd_watch_cb \
        sd.c:sd_media_watch_cb \
        sd.c:sd_mhd_watch_cb \
        scsi_watch.c:scsi_watch_request_intr \
        sd.c:sdintr \
        scsa2usb.c:scsa2usb_scsi_init_pkt \
        scsa2usb.c:scsa2usb_scsi_start \
        scsa2usb.c:scsa2usb_scsi_abort \
        scsa2usb.c:scsa2usb_scsi_reset \
        scsa2usb.c:scsa2usb_scsi_setcap \
        scsa2usb.c:scsa2usb_scsi_getcap \
        scsa2usb.c:scsa2usb_scsi_tgt_init \
        scsa2usb.c:scsa2usb_scsi_tgt_free 

add	sd.c:sd_start_cmds/funcp target sd_initpkt_for_buf sd_initpkt_for_uscsi

root	sd_handle_mchange sd_media_change_task sd_start_stop_unit_task
root	sd_wm_cache_constructor sd_wm_cache_destructor sd_read_modify_write_task
root	sd_failfast_flushq_callback sd_reenable_dsense_task
root	sd_target_change_task

root	scsi_hba.c:scsi_hba_bus_power
root	sd.c:sd_mhd_reset_notify_cb

add     __ddi_xbuf_attr::xa_strategy targets sd_xbuf_strategy

add st.c:st_known_tape_type/config_funct targets \
        st_get_conf_from_st_dot_conf \
        st_get_conf_from_st_conf_dot_c \
	st_get_conf_from_tape_drive \
        st_get_default_conf


add scsi_watch_request::swr_callback targets \
        st.c:st_media_watch_cb

add     sd_uscsi_info::ui_dkc.dkc_callback targets warlock_dummy
add     dk_callback::dkc_callback targets warlock_dummy

root	st_bigblk_xfer_done
