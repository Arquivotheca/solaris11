#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License (the "License").
# You may not use this file except in compliance with the License.
#
# You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at usr/src/OPENSOLARIS.LICENSE.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets "[]" replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#
#
# Copyright 2008 Sun Microsystems, Inc.  All rights reserved.
# Use is subject to license terms.
#
# ident	"%Z%%M%	%I%	%E% SMI"

DEFAULTS {
	runtime = 60;
        dir = /tmp;
        stats = /tmp;
	filesystem = tmpfs;
	description = "filemicro tmpfs";
}

CONFIG createandalloc {
	function = generic;
	personality = filemicro_create;
}

CONFIG createandallocsync {
	function = generic;
	personality = filemicro_create;
	sync = true;
}

CONFIG createallocfsync {
	function = generic;
	personality = filemicro_writefsync;
}

CONFIG createallocappend {
	function = generic;
	personality = filemicro_createrand;
}

CONFIG randread2k {
	function = generic;
	personality = filemicro_rread;
}

CONFIG randread2kcached {
	function = generic;
	personality = filemicro_rread;
	cached = true;
}

CONFIG randwrite2ksync {
	function = generic;
	personality = filemicro_rwrite;
	sync = true;
}

CONFIG randwrite2ksync4thread {
	function = generic;
	personality = filemicro_rwrite;
	nthreads = 4;
	sync = true;
}

CONFIG randwrite8kfsynccached {
	function = generic;
	personality = filemicro_rwritefsync;
	cached = true;
}

CONFIG seqread32k {
	function = generic;
	personality = filemicro_seqread;
	iosize = 32k;
	filesize = 100m;
}

CONFIG seqread32kcached {
	function = generic;
	personality = filemicro_seqread;
	iosize = 32k;
	filesize = 100m;
	cached = true;
}

CONFIG seqwrite32k {
	function = generic;
	personality = filemicro_seqwrite;
	iosize = 32k;
}

CONFIG seqwrite32kdsync {
	function = generic;
	personality = filemicro_seqwrite;
	iosize = 32k;
	sync = true;
}

CONFIG seqwriterand8k {
	function = generic;
	personality = filemicro_seqwriterand;
}

CONFIG unlink1g {
	function = generic;
	personality = filemicro_delete;
	nthreads = 1;
}

CONFIG createfiles {
	function = generic;
	personality = filemicro_createfiles;
}

CONFIG rwritedsync {
	function = generic;
	personality = filemicro_rwritedsync;
}

CONFIG filemicro_seqwriterandvargam {
	function = generic;
	personality = filemicro_seqwriterandvargam;
}

CONFIG filemicro_seqwriterandvartab {
	function = generic;
	personality = filemicro_seqwriterandvartab;
}
