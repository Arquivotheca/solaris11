#!/usr/sbin/sh
#
#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License (the "License").
# You may not use this file except in compliance with the License.
#
# You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at usr/src/OPENSOLARIS.LICENSE.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets "[]" replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#
#
# Copyright (c) 1994, 2011, Oracle and/or its affiliates. All rights reserved.
#

. /lib/svc/share/smf_include.sh

# Trusted Extensions non-global zones need special handling

case "$1" in
'start')
	if (smf_is_system_labeled); then
	    if (smf_is_nonglobalzone); then
		if [ ! -f /var/tsol/doors/nscd_per_label ]; then

        		# If needed create a door to the global zone daemon.
        		if [ -r $SMF_SYSVOL_FS/name_service_door ]; then
				rm $SMF_SYSVOL_FS/name_service_door
        		fi
                	ln -s /var/tsol/doors/name_service_door  \
				$SMF_SYSVOL_FS || exit $SMF_EXIT_ERR_FATAL

        		# If current service duration is not "transient",
        		# create a dummy background process to preserve
			# contract lifetime.
        		duration=""
        		if /bin/svcprop -q -c -p startd/duration $SMF_FMRI
			    then
                		duration=`/bin/svcprop -c -p startd/duration  \
					$SMF_FMRI`
        		fi
        		if [ "$duration" != "transient" ]; then
                		( while true ; do sleep 3600 ; done ) &
        		fi

        		# The real daemon is not started in non-global zones,
			# so exit now.
        		exit $SMF_EXIT_OK
		else
        		# remove the door to the global zone daemon
        		if [ -L $SMF_SYSVOL_FS/name_service_door ]; then
                		rm $SMF_SYSVOL_FS/name_service_door
        		fi
		fi
	    fi
	fi

	# Test and import if upgrade
	/usr/sbin/nscfg import -q $SMF_FMRI
	err=$?
	if [ $err -eq 1 ] ; then
		echo "WARNING: $SMF_FMRI configuration import error." >& 2
		exit $SMF_EXIT_ERR_CONFIG
	elif [ $err -eq 3 ] ; then
		echo "WARNING: $SMF_FMRI no configuration." >& 2
		exit $SMF_EXIT_ERR_CONFIG
	fi
	/usr/sbin/nscfg export $SMF_FMRI
	err=$?
	if [ $err -eq 1 ] ; then
		echo "WARNING: $SMF_FMRI configuration export error." >& 2
		exit $SMF_EXIT_ERR_CONFIG
	fi

	if [ -f /etc/nscd.conf -a -f /usr/sbin/nscd ]; then
		/usr/sbin/nscd < /dev/null > /dev/msglog 2>&1 &
	else
		echo "No /etc/nscd.conf or no /usr/sbin/nscd"
		exit $SMF_EXIT_ERR_CONFIG
	fi
	;;
'refresh')
	/usr/sbin/nscfg export $SMF_FMRI
	err=$?
	if [ $err -eq 2 ] ; then
		exit $SMF_EXIT_OK
	elif [ $err -ne 0 ] ; then
		echo "Unable to create /etc/nscd.conf"
		exit $SMF_EXIT_ERR_CONFIG
	fi
	/usr/bin/pgrep -z `smf_zonename` nscd && \
		/usr/bin/pkill -HUP -z `smf_zonename` nscd
	exit $SMF_EXIT_OK
	;;

'unconfigure')
	# Unroll any admin customization
	svccfg -s svc:/system/name-service/cache delcust
	if [ $? -ne 0 ]; then
		echo "Failed to unroll administrative customizations for $SMF_FMRI"
		exit $SMF_EXIT_ERR_FATAL
	fi
	# Revert legacy config to original state
	/usr/sbin/nscfg export $SMF_FMRI
	exit $SMF_EXIT_OK
	;;

*)
	echo "Usage: $0 { start | refresh | unconfigure }"
	exit 1
	;;
esac
