#!/usr/sbin/sh
#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License (the "License").
# You may not use this file except in compliance with the License.
#
# You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at usr/src/OPENSOLARIS.LICENSE.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets "[]" replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#
#
# Copyright (c) 1992, 2011, Oracle and/or its affiliates. All rights reserved.
#
# Copyright (c) 1984, 1986, 1987, 1988, 1989 AT&T.
# All rights reserved.
#
#

. /lib/svc/share/smf_include.sh
. /lib/svc/share/fs_include.sh

# Mount other file systems to be available in single user mode.
# Currently, these are /var, /var/adm and /tmp.  A change
# here will require a modification to the following programs (and
# documentation): /usr/sbin/mountall, /usr/sbin/umountall, and
# /lib/svc/bin/svc.startd.

rootiszfs=0

# In a zone, the zone root is mounted with a temporary mountpoint option
# (zfs mount -o mountpoint=<dir> <dataset>).  If the mountpoint of a child
# dataset is inherited, neither "zfs mount <dataset>" nor "zfs mount -a"
# will cause that child dataset to be mounted.  That is, the only way to
# mount such a child is with a temporary mountpoint option.  Thus, if the
# root (zone root, that is) file system is mounted with a temporary
# mountpoint option, we also need to mount other datasets in the BE
# using a temporary mountpoint.

rootistmpmnt=0
readmnttab / < /etc/mnttab
if [ "$fstype" = zfs ] ; then
	rootiszfs=1
	be=$special
	case "$mntopts" in
	*mountpoint=*)
		rootistmpmnt=1
		;;
	esac
fi

for fs in /var /var/adm /tmp; do
	readvfstab $fs < $vfstab
	if [ -n "$mountp" ]; then
		mounted $mountp $mntopts $fstype < /etc/mnttab && continue
		checkfs $fsckdev $fstype $mountp || exit $SMF_EXIT_ERR_FATAL
		mountfs -O $mountp $fstype $mntopts - ||
		    exit $SMF_EXIT_ERR_FATAL
		continue
	fi
	if [ "$rootiszfs" = 1 ]; then
		mountpt=`zfs get -H -o value mountpoint $be$fs 2>/dev/null`
		if [ $? = 0 ] ; then
			if [ "x$mountpt" = "x$fs" ] ; then
				opts=-O
				if [ $rootistmpmnt = 1 ]; then
					opts="$opts -o mountpoint=$mountpt"
				fi
				/usr/sbin/zfs mount $opts $be$fs
			fi
		fi
	fi
done

if [ "$rootiszfs" = 1 ] ; then
	/usr/sbin/zfs list -rH -o mountpoint -s mountpoint -t filesystem $be | \
	    while read mountp ; do
		if [ "x$mountp" != "x" -a "$mountp" != "legacy" ] ; then
			mounted $mountp - zfs < /etc/mnttab  && continue
			opts=
			if [ $rootistmpmnt = 1 ]; then
				opts="$opts -o mountpoint=$mountp"
			fi
			/usr/sbin/zfs mount $opts $be$mountp
		fi
	done
fi

exit $SMF_EXIT_OK
