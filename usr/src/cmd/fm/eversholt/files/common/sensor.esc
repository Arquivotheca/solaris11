/*
 * CDDL HEADER START
 *
 * The contents of this file are subject to the terms of the
 * Common Development and Distribution License (the "License").
 * You may not use this file except in compliance with the License.
 *
 * You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
 * or http://www.opensolaris.org/os/licensing.
 * See the License for the specific language governing permissions
 * and limitations under the License.
 *
 * When distributing Covered Code, include this CDDL HEADER in each
 * file and include the License file at usr/src/OPENSOLARIS.LICENSE.
 * If applicable, add the following below this CDDL HEADER, with the
 * fields enclosed by brackets "[]" replaced with your own identifying
 * information: Portions Copyright [yyyy] [name of copyright owner]
 *
 * CDDL HEADER END
 */
/*
 * Copyright 2009 Sun Microsystems, Inc.  All rights reserved.
 * Use is subject to license terms.
 */

#pragma dictionary "SENSOR"

#define	TOPO_SENSOR_ERRSRC_UNKNOWN	0
#define	TOPO_SENSOR_ERRSRC_INTERNAL	1
#define	TOPO_SENSOR_ERRSRC_EXTERNAL	2

fru fan;
fru psu;

/*
 * Generic fan/psu fault events.
 */
event fault.fan.failed@fan;
event fault.psu.failed@psu;


/*
 * Fine-grained fan/psu fault events
 */
event fault.fan.failed-pred@fan;
event fault.psu.failed-int@psu;
event fault.psu.failed-ext@psu;
event fault.psu.failed-pred@psu;

/*
 * fan and psu ereports.
 */
event ereport.sensor.failure@fan;
event ereport.sensor.failure@psu;

/*
 * Propagations.
 */
prop fault.fan.failed@fan ->
    ereport.sensor.failure@fan { payloadprop("type") == "fan" &&
	payloadprop("predictive") == 0 };

prop fault.fan.failed-pred@fan ->
    ereport.sensor.failure@fan { payloadprop("type") == "fan" &&
	payloadprop("predictive") == 1 };

prop fault.psu.failed@psu ->
    ereport.sensor.failure@psu { payloadprop("type") == "psu" &&
        payloadprop("source") == TOPO_SENSOR_ERRSRC_UNKNOWN &&
	payloadprop("predictive") == 0 };

prop fault.psu.failed-int@psu ->
    ereport.sensor.failure@psu { payloadprop("type") == "psu" &&
        payloadprop("source") == TOPO_SENSOR_ERRSRC_INTERNAL &&
	payloadprop("predictive") == 0 };

prop fault.psu.failed-ext@psu ->
    ereport.sensor.failure@psu { payloadprop("type") == "psu" &&
        payloadprop("source") == TOPO_SENSOR_ERRSRC_EXTERNAL &&
	payloadprop("predictive") == 0 };

prop fault.psu.failed-pred@psu ->
    ereport.sensor.failure@psu { payloadprop("type") == "psu" &&
        payloadprop("predictive") == 1 };
