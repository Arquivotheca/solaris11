<?xml version="1.0"?>
<!DOCTYPE service_bundle SYSTEM "/usr/share/lib/xml/dtd/service_bundle.dtd.1">
<!--
	Copyright 2007 Sun Microsystems, Inc.  All rights reserved.
	Use is subject to license terms.

 CDDL HEADER START

 The contents of this file are subject to the terms of the
 Common Development and Distribution License (the "License").
 You may not use this file except in compliance with the License.

 You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
 or http://www.opensolaris.org/os/licensing.
 See the License for the specific language governing permissions
 and limitations under the License.

 When distributing Covered Code, include this CDDL HEADER in each
 file and include the License file at usr/src/OPENSOLARIS.LICENSE.
 If applicable, add the following below this CDDL HEADER, with the
 fields enclosed by brackets "[]" replaced with your own identifying
 information: Portions Copyright [yyyy] [name of copyright owner]

 CDDL HEADER END

	ident	"%Z%%M%	%I%	%E% SMI"

	NOTE:  This service manifest is not editable; its contents will
	be overwritten by package or patch operations, including
	operating system upgrade.  Make customizations in a different
	file.
-->
<service_bundle type='manifest' name='SUNWcsr:ipsecalgs'>

<service
	name='network/ipsec/ipsecalgs'
	type='service'
	version='1'>

	<!-- The policy service depends on the 'ipsecalgs'
	service being enabled. -->
	<create_default_instance enabled='true' />

	<single_instance />

	<dependency
		name='cryptosvc'
		grouping='require_all'
		restart_on='none'
		type='service'>
		<service_fmri value='svc:/system/cryptosvc' />
	</dependency>

        <dependency
                name='config_data'
                grouping='require_all'
                type='path'
		restart_on='none'>
                <service_fmri value='file://localhost/etc/inet/ipsecalgs' />
        </dependency>

	<dependent
		name='ipsecalgs-network'
		grouping='optional_all'
		restart_on='none'>
		<service_fmri
			value='svc:/milestone/network'
		/>
	</dependent>

	<exec_method
		type='method'
		name='start'
		exec='/usr/sbin/ipsecalgs -s'
		timeout_seconds='60'
	/>

	<exec_method
		type='method'
		name='refresh'
		exec='/usr/sbin/ipsecalgs -s'
		timeout_seconds='60'
	/>

	<exec_method
		type='method'
		name='stop'
		exec=':true'
		timeout_seconds='3'
	/>

	<property_group name='general' type='framework'>
		<!-- A user with this authorization can:

			svcadm restart ipsecalgs
			svcadm refresh ipsecalgs
			svcadm mark <state> ipsecalgs
			svcadm clear ipsecalgs

		see auths(1) and user_attr(4)-->

		<propval
			name='action_authorization'
			type='astring'
			value='solaris.smf.manage.ipsec'
		/>
		<!-- A user with this authorization can:

			svcadm disable ipsecalgs
			svcadm enable ipsecalgs

		 see auths(1) and user_attr(4)-->
		<propval
			name='value_authorization'
			type='astring'
			value='solaris.smf.manage.ipsec'
		/>
	</property_group>

	<property_group name='startd' type='framework'>
		<propval
			name='duration'
			type='astring'
			value='transient'
		/>
	</property_group>

	<stability value='Unstable' />

	<template>
		<common_name>
			<loctext xml:lang='C'>
				IPsec algorithm initialization
			</loctext>
		</common_name>
		<description>
			<loctext xml:lang='C'>
				IPsec algorithm configuration involves
				loading AH and ESP algorithm support.
			</loctext>
		</description>
		<documentation>
			<manpage
				title='ipsecalgs'
				section='1M'
				manpath='/usr/share/man'
			/>
		</documentation>
	</template>
</service>
</service_bundle>
