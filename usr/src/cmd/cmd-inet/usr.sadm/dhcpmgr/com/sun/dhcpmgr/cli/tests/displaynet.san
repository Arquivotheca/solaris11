#!/usr/bin/ksh
#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License, Version 1.0 only
# (the "License").  You may not use this file except in compliance
# with the License.
#
# You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at usr/src/OPENSOLARIS.LICENSE.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets "[]" replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#
#
#ident	"%Z%%M%	%I%	%E% SMI"
#
# Copyright (c) 2001 by Sun Microsystems, Inc.
# All rights reserved.
#

#
# Source the utilities.
#
DIRNAME=`dirname $0`
. ${DIRNAME}/utilities.san

#
# Process the input arguments.
#
VALIDOPTS=dr:p:
process_args $@

#
# In case the tester wants to see script output, allow them
# to run in debug mode.
#
TESTNAME=`basename $0`
if [ ! -z "${DEBUG}" ]
then
    OUTFILE=/tmp/${TESTNAME}.$$
    echo "Output from test: ${TESTNAME}" >${OUTFILE}
    echo >>${OUTFILE}
    echo "debug output can be found at ${OUTFILE}"
else
    OUTFILE=/dev/null
fi

#
# Set variables.
#
TESTNAME=`basename $0`
SRVNAME=`uname -n`
SRVADDR=`get_server_ip`

#
# Determine subnet, netmask, and broadcast address.
#
get_default_class ${SRVADDR} | read DEFNET DEFMASK
SUBNET=`get_netmask ${SRVADDR}`
if [ -z "${SUBNET}" ]
then
    if [ "${DEFNET}" != "${SRVADDR}" ]
    then
	# likely subnetted/supernetted.
	print - "\n\n###\tWarning\t###\n"
	print - "Network ${SRVADDR} is netmasked, but no entry was found in the 'netmasks'\ntable; please update the 'netmasks' table in the appropriate\nnameservice before continuing (see /etc/nsswitch.conf).\n" >&2
	return 1
    else
	# use the default.
	SUBNET="${DEFMASK}"
    fi
fi

SUBNETADDR=`get_subnet_addr ${SRVADDR} ${SUBNET}`

#
# Verify that the network table exists.
#
NETTABS=`/usr/sbin/pntadm -r ${DHCPRSRC} -p ${DHCPPATH} -L 2>>${OUTFILE}`
NETTAB=`echo ${NETTABS} | fgrep ${SUBNETADDR}`
if [ -z ${NETTAB} ]
then
    echo "Network table for ${SUBNETADDR} does not exist."
    echo "${TESTNAME} - Test failed!"
    exit 1
fi

#
# Display the table.
#
CLIENTID="01AABBCCDDEEFF"
FLAGS="01"
CADDR=${SRVADDR}
SADDR=${SRVADDR}
EXPIRE="03/15/2001"
MACRO="UNKNOWN"
COMMENT=Modified
DATAFILE=/tmp/${TESTNAME}.data.$$

/usr/sbin/pntadm -r ${DHCPRSRC} -p ${DHCPPATH} -P ${SUBNETADDR} >${DATAFILE} 2>>${OUTFILE}
RET=$?
if [ "${RET}" != "0" ]
then
    rm ${DATAFILE}
    echo "Error listing table for ${SUBNETADDR} = ${RET}"
    echo "${TESTNAME} - Test failed!"
    exit 1
fi

ENTRY=`grep "^${CLIENTID}" ${DATAFILE}`
if [ -z "${ENTRY}" ]
then
    rm ${DATAFILE}
    echo "Client entry not found in ${SUBNETADDR}"
    echo "${TESTNAME} - Test failed!"
    exit 1
fi
rm ${DATAFILE}

#
# Verify that the entry fields are correct.
#
FIELD=`echo $ENTRY | cut -d " " -f1,1`
if [ "${FIELD}" != "${CLIENTID}" ]
then
    echo "ClientID of entry is not correct in ${SUBNETADDR}"
    echo "${FIELD} != ${CLIENTID}"
    echo "${TESTNAME} - Test failed!"
    exit 1
fi
    
FIELD=`echo $ENTRY | cut -d " " -f2,2`
if [ "${FIELD}" != "${FLAGS}" ]
then
    echo "Flags of entry is not correct in ${SUBNETADDR}"
    echo "${FIELD} != ${FLAGS}"
    echo "${TESTNAME} - Test failed!"
    exit 1
fi

FIELD=`echo $ENTRY | cut -d " " -f3,3`
if [ "${FIELD}" != "${CADDR}" ]
then
    echo "Client address of entry is not correct in ${SUBNETADDR}"
    echo "${FIELD} != ${CADDR}"
    echo "${TESTNAME} - Test failed!"
    exit 1
fi

FIELD=`echo $ENTRY | cut -d " " -f4,4`
if [ "${FIELD}" != "${SADDR}" ]
then
    echo "Server address of entry is not correct in ${SUBNETADDR}"
    echo "${FIELD} != ${SADDR}"
    echo "${TESTNAME} - Test failed!"
    exit 1
fi

FIELD=`echo $ENTRY | cut -d " " -f5,5`
if [ "${FIELD}" != "${EXPIRE}" ]
then
    echo "Lease expiration of entry is not correct in ${SUBNETADDR}"
    echo "${FIELD} != ${EXPIRE}"
    echo "${TESTNAME} - Test failed!"
    exit 1
fi

FIELD=`echo $ENTRY | cut -d " " -f6,6`
if [ "${FIELD}" != "${MACRO}" ]
then
    echo "Macro of entry is not correct in ${SUBNETADDR}"
    echo "${FIELD} != ${MACRO}"
    echo "${TESTNAME} - Test failed!"
    exit 1
fi

FIELD=`echo $ENTRY | cut -d " " -f7,7`
if [ "${FIELD}" != "${COMMENT}" ]
then
    echo "Comment field of entry is not correct in ${SUBNETADDR}"
    echo "${FIELD} != ${COMMENT}"
    echo "${TESTNAME} - Test failed!"
    exit 1
fi

echo "${TESTNAME} - Test passed."
exit 0
