#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License (the "License").
# You may not use this file except in compliance with the License.
#
# You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at usr/src/OPENSOLARIS.LICENSE.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets "[]" replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#
#
# Copyright (c) 1994, 2011, Oracle and/or its affiliates. All rights reserved.
#

pics/%.o:	../common/%.c
		$(COMPILE.c) -o $@ $<
		$(POST_PROCESS_O)

pics/%32.o:	../common/%.c
		$(COMPILE.c) -o $@ $<
		$(POST_PROCESS_O)

pics/%64.o:	../common/%.c
		$(COMPILE.c) -o $@ -D_ELF64 $<
		$(POST_PROCESS_O)

pics/%32.o:	%.c
		$(COMPILE.c) -o $@ $<
		$(POST_PROCESS_O)

pics/%64.o:	%.c
		$(COMPILE.c) -o $@ -D_ELF64 $<
		$(POST_PROCESS_O)

pics/%.o:	$(SGSTOOLS)/common/%.c
		$(COMPILE.c) -o $@ $<
		$(POST_PROCESS_O)

pics/%.o:	$(AVLDIR)/%.c
		$(COMPILE.c) -o $@ $<
		$(POST_PROCESS_O)

#
# We use the shared elfcap code under usr/src/common/elfcap
#
pics/elfcap.o:	$(ELFCAP)/elfcap.c
		$(COMPILE.c) -o  $@ $(ELFCAP)/elfcap.c
		$(POST_PROCESS_O)

# Rules for compiling the shared relocation engines (doreloc.c) maintained
# under usr/src/uts. To support cross linking, We compile and link
# all of these into every copy of libld. Each one requires a separate rule:
#	- The source files are in different subtrees under usr/src/uts
#	- The output file needs to include the platform name to
#		keep the object files from colliding
# The DO_RELOC_LIBLD definition is needed to generate the libld version
# of the doreloc code.
#
pics/%_x86_32.o: $(KRTLD_I386)/%.c
		$(COMPILE.c) -o $@ -DDO_RELOC_LIBLD $<
		$(POST_PROCESS_O)

pics/%_x86_64.o: $(KRTLD_AMD64)/%.c
		$(COMPILE.c) -o $@ -D_ELF64 -DDO_RELOC_LIBLD $<
		$(POST_PROCESS_O)

pics/%_sparc_32.o: $(KRTLD_SPARC)/%.c
		$(COMPILE.c) -o $@ -DDO_RELOC_LIBLD $<
		$(POST_PROCESS_O)

pics/%_sparc_64.o: \
		$(KRTLD_SPARC)/%.c
		$(COMPILE.c) -o $@ -D_ELF64 -DDO_RELOC_LIBLD $<
		$(POST_PROCESS_O)


$(LIBLINKS):
		$(RM) $@; $(SYMLINK) $(DYNLIB) $@

delete:
		$(RM) $(DYNLIB)

.PARALLEL:	$(LINTOUT32) $(LINTOUT64) $(LINTLIB32) $(LINTLIB64)

lint:		$(LINTLIB32) $(LINTOUT32) $(LINTLIB64) $(LINTOUT64) \
		    .WAIT $(SGSLINTOUT)

# The lint libraries are not delivered with the product,
# so we install them in the stub proto.
$(STUBROOTFS_LIBDIR)/$(LINTLIB32) \
$(STUBROOTFS_LIBDIR64)/$(LINTLIB32): $(LINTLIB32)
	$(INS.file) $(LINTLIB32)

$(STUBROOTFS_LIBDIR)/$(LINTLIB64) \
$(STUBROOTFS_LIBDIR64)/$(LINTLIB64): $(LINTLIB64)
	$(INS.file) $(LINTLIB64)

# Special target for native builds (ie. when we need to build a version of ld
# to build a version of ld :-).

native:		$(SGSPROTO)/$(DYNLIB)

$(SGSPROTO)/$(DYNLIB): \
		pics .WAIT $$(PICS)
		$(BUILD.SO)
		$(POST_PROCESS_SO)
		@$(RM) $(SGSPROTO)/$(LIBLINKS)
		$(SYMLINK) $(DYNLIB) $(SGSPROTO)/$(LIBLINKS)

include		$(SRC)/lib/Makefile.targ
include		$(SRC)/cmd/sgs/Makefile.targ

# Derived source and header files (messaging).

catalog:	$(BLTMESG)

chkmsg:		$(LIBSRCS) $(CHKSRCS)
		sh $(CHKMSG) $(CHKMSGFLAGS) $(LIBSRCS) $(CHKSRCS)

$(BLTDEFS) + \
$(BLTDATA):	$(SGSMSGTARG)
		$(SGSMSG) $(SGSMSGFLAGS2) $(SGSMSGTARG)

$(BLTMESG):	$(SGSMSGALL)
		$(SGSMSG) $(SGSMSGFLAGS1) $(SGSMSGALL)
