.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.\"
.\" Copyright 2006 Sun Microsystems, Inc.  All rights reserved.
.\" Use is subject to license terms.
.\"
.\" ident	"%Z%%M%	%I%	%E% SMI"
.\"
.TH sccscheck 1 "7 April 2006"
.SH NAME
.I sccscheck
\- 
.SH SYNOPSIS
.B sccscheck
filename
.SH DESCRIPTION
The standard solaris 
.I make(1)
is SCCS-aware, automatically checking out files if they are out of
date with respect to the SCCS file; however, this is of little value
in the context of teamware and of no value if a non-SCCS SCM system is
used, and can lead to hard-to-diagnose build failures  in the presence
of recursive parallel make.
The
.I sccscheck
script is used from the OS/Net Makefile.master file as a substitute
for make(1)'s default handling of SCCS files; it generates errors
preceded by "sccscheck: error", and warnings preceded by "sccscheck:
warning".

By default an out-of-date source file is treated as a non-event, and the
build continues onward; in most cases this will avoid unnecessary
rebuilds of other targets depending on the out-of-date source file.
.SH ENVIRONMENT
If set to a non-empty string, SCCSCHECK_WARN will cause sccscheck to
emit a verbose warning when an out-of-date source file is encountered;
the build will continue but the resulting build logs will be large.

If set to a non-empty string, SCCSCHECK_FAIL will cause sccscheck
to treat out-of-date source files as an error rather than a
warning.

If both are set, behavior will be as if only SCCSCHECK_FAIL is set.



