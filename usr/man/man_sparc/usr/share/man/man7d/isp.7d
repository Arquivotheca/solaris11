'\" te
.\"  Copyright (c) 1998, Sun Microsystems, Inc.  All Rights Reserved
.TH isp 7D "12 Jan 1998" "SunOS 5.11" "Devices"
.SH NAME
isp \- ISP SCSI Host Bus Adapter Driver
.SH SYNOPSIS
.SS "Sbus"
.LP
.nf
\fBQLGC,isp@\fIsbus-slot\fR,10000\fR
.fi

.SS "PCI"
.LP
.nf
\fBSUNW,isptwo@\fIpci-slot\fR\fR
.fi

.SH DESCRIPTION
.sp
.LP
The \fBISP\fR Host Bus Adapter is a \fBSCSA\fR compliant nexus driver that supports the Qlogic ISP1000  \fBSCSI\fR and the ISP1040B  \fBSCSI\fR chips. The ISP1000 chip works on SBus and  the ISP1040B chip works on PCI bus. The \fBISP\fR is an intelligent \fBSCSI\fR Host Bus Adapter chip that reduces the amount of \fBCPU\fR overhead used in a \fBSCSI\fR transfer.
.sp
.LP
The  \fBisp\fR driver supports the standard functions provided by the \fBSCSA\fR interface. The driver supports tagged and untagged queuing, fast and wide \fBSCSI,\fR and auto request sense, but does not support linked commands. The PCI version  \fBISP\fR Host bus adapter based on ISP1040B also supports Fast-20 scsi devices.
.SH CONFIGURATION
.sp
.LP
The \fBisp\fR driver can be configured by defining properties in  \fBisp.conf\fR which override the global \fBSCSI\fR settings. Supported properties are \fBscsi-options\fR, \fBtarget<\fIn\fR>-scsi-options\fR, \fBscsi-reset-delay\fR, \fBscsi-watchdog-tick\fR, \fBscsi-tag-age-limit\fR, \fBscsi-initiator-id\fR, and \fBscsi-selection-timeout\fR.
.sp
.LP
\fBtarget<\fIn\fR>-scsi-options\fR overrides the \fBscsi-options\fR property value for \fBtarget<\fIn\fR>\fR. <\fIn\fR> is a hex value that can vary from \fB0\fR to \fBf\fR. Refer to \fBscsi_hba_attach\fR(9F) for details. 
.sp
.LP
Both the ISP1000 and ISP1040B support only certain SCSI selection timeout values. The valid values are 25, 50, 75, 100, 250, 500, 750 and 1000. These properties are in units of milliseconds.
.SH EXAMPLES
.LP
\fBExample 1 \fRSCSI Options
.sp
.LP
Create a file called  \fB/kernel/drv/isp.conf\fR and add this line:

.sp
.in +2
.nf
scsi-options=0x78;
.fi
.in -2

.sp
.LP
This will disable tagged queuing, fast \fBSCSI,\fR and Wide mode for all  \fBisp\fR instances. The following will disable an option for one specific  \fBISP\fR (refer to  \fBdriver.conf\fR(4)):

.sp
.in +2
.nf
name="isp"  parent="/iommu@f,e0000000/sbus@f,e0001000"
       reg=1,0x10000,0x450
       target1-scsi-options=0x58
       scsi-options=0x178 scsi-initiator-id=6;
.fi
.in -2

.sp
.LP
Note that the default initiator ID in OBP is 7 and that the change to ID 6 will occur at attach time. It may be preferable to change the initiator ID in OBP.

.sp
.LP
The above would set  \fBscsi-options\fR for target 1 to  \fB0x58\fR and for all other targets on this \fBSCSI\fR bus to  \fB0x178\fR.

.sp
.LP
The physical pathname of the parent can be determined using the \fB/devices\fR tree or following the link of the logical device name:

.sp
.in +2
.nf
example# \fBls -l /dev/rdsk/c2t0d0s0\fR
lrwxrwxrwx   1 root   root  76 Aug 22 13:29 /dev/rdsk/c2t0d0s0 ->
\&../../devices/iommu@f,e0000000/sbus@f,e0001000/QLGC,isp@1,10000/sd@0,0:a,raw
.fi
.in -2
.sp

.sp
.LP
Determine the register property values using the output of \fBprtconf\fR(1M) with the \fB-v\fR option:

.sp
.in +2
.nf
QLGC,isp, instance #0
    ...
    Register Specifications:
        Bus Type=0x1, Address=0x10000, Size=450
.fi
.in -2

.LP
\fBExample 2 \fRISP Properties
.sp
.LP
The \fBisp\fR driver exports properties indicating per target the negotiated transfer speed (\fBtarget<n>-sync-speed\fR), whether tagged queuing has been enabled (\fBtarget<n>-TQ\fR), and whether the wide data transfer has been negotiated (\fBtarget<n>-wide\fR). The \fBsync-speed\fR property value is the data transfer rate in KB/sec. The \fBtarget-TQ\fR and \fBtarget-wide\fR properties have no value. The existence of these properties indicate that tagged queuing or wide transfer has been enabled. Refer to \fBprtconf\fR(1M) (verbose option) for viewing the \fBisp\fR properties. 

.sp
.in +2
.nf
QLGC,isp, instance #2
    Driver software properties:
         name <target0-TQ> length <0> -- <no value>.
         name <target0-wide> length <0> -- <no value>.
         name <target0-sync-speed> length <4>
             value <0x000028f5>.
         name <scsi-options> length <4>
             value <0x000003f8>.
         name <scsi-watchdog-tick> length <4>
             value <0x0000000a>.
         name <scsi-tag-age-limit> length <4>
             value <0x00000008>.
         name <scsi-reset-delay> length <4>
             value <0x00000bb8>.
.fi
.in -2

.LP
\fBExample 3 \fRPCI Bus
.sp
.LP
To achieve the same setting of SCSI-options as in \fBinstance #0\fR above on a  PCI machine, create a file called  \fB/kernel/drv/isp.conf\fR and add the following entries.

.sp
.in +2
.nf
name="isp" parent="/pci@1f,2000/pci@1"
  unit-address="4"
  scsi-options=0x178
  target3-scsi-options=0x58 scsi-initiator-id=6;
.fi
.in -2

.sp
.LP
The physical pathname of the parent can be determined using the \fB/devices\fR tree or following the link of the logical device name:

.sp
.LP
To set scsi-options more specifically per device type, add the following line in the  \fB/kernel/drv/isp.conf\fR file:

.sp
.in +2
.nf
device-type-scsi-options-list =
    "SEAGATE ST32550W", "seagate-scsi-options" ; 
seagate-scsi-options = 0x58;
.fi
.in -2

.sp
.LP
All device which are of this specific disk type will have \fBscsi-options\fR set to 0x58.

.sp
.LP
\fBscsi-options\fR specified per target ID has the highest precedence, followed by \fBscsi-options\fR per device type. Global (for all  \fBisp\fR instances) \fBscsi-options\fR per bus has the lowest precedence.

.sp
.LP
The system needs to be rebooted before the specified \fBscsi-options\fR take effect.

.LP
\fBExample 4 \fRDriver Capabilities
.sp
.LP
The target driver needs to set capabilities in the  \fBisp\fR driver in order to enable some driver features. The target driver  can query and modify these capabilities:  \fBsynchronous\fR, \fBtagged-qing\fR, \fBwide-xfer\fR, \fBauto-rqsense\fR, \fBqfull-retries\fR, \fBqfull-retry-interval\fR. All other capabilities can only be queried.

.sp
.LP
By default, \fBtagged-qing\fR, \fBauto-rqsense\fR, and \fBwide-xfer\fR capabilities are disabled, while \fBdisconnect\fR, \fBsynchronous\fR, and \fBuntagged-qing\fR are enabled. These capabilities can only have binary values (\fB0\fR or \fB1\fR). The default values for \fBqfull-retries\fR and \fBqfull-retry-interval\fR are both \fB10\fR. The \fBqfull-retries\fR capability is a \fBuchar_t\fR (\fB0\fR to \fB255\fR) while \fBqfull-retry-interval\fR is a \fBushort_t\fR (\fB0\fR to \fB65535\fR).

.sp
.LP
The target driver needs to enable  \fBtagged-qing\fR and \fBwide-xfer\fR explicitly. The \fBuntagged-qing\fR capability is always enabled and its value cannot be modified,  because \fBisp\fR can queue commands even when  \fBtagged-qing\fR is disabled.

.sp
.LP
Whenever there is a conflict between the value of \fBscsi-options\fR and a capability, the value set in \fBscsi-options\fR prevails. Only \fBwhom != 0\fR is supported in the \fBscsi_ifsetcap\fR(9F) call.

.sp
.LP
Refer to \fBscsi_ifsetcap\fR(9F) and  \fBscsi_ifgetcap\fR(9F) for details.

.SH FILES
.sp
.ne 2
.mk
.na
\fB\fB/kernel/drv/isp\fR\fR
.ad
.RS 24n
.rt  
\fBELF\fR Kernel Module
.RE

.sp
.ne 2
.mk
.na
\fB\fB/kernel/drv/isp.conf\fR\fR
.ad
.RS 24n
.rt  
Configuration file
.RE

.SH ATTRIBUTES
.sp
.LP
See \fBattributes\fR(5) for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i) 
lw(2.75i) |lw(2.75i) 
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
ArchitectureSPARC
.TE

.SH SEE ALSO
.sp
.LP
\fBprtconf\fR(1M), \fBdriver.conf\fR(4), \fBattributes\fR(5), \fBscsi_abort\fR(9F), \fBscsi_hba_attach\fR(9F), \fBscsi_ifgetcap\fR(9F), \fBscsi_reset\fR(9F), \fBscsi_transport\fR(9F), \fBscsi_device\fR(9S), \fBscsi_extended_sense\fR(9S), \fBscsi_inquiry\fR(9S), \fBscsi_pkt\fR(9S)
.sp
.LP
\fIWriting Device Drivers\fR
.sp
.LP
\fIANSI Small Computer System Interface-2 (SCSI-2)\fR
.sp
.LP
QLogic Corporation, \fIISP1000 Firmware Interface Specification\fR 
.sp
.LP
QLogic Corporation, \fIISP1020 Firmware Interface Specification\fR 
.sp
.LP
QLogic Corporation, \fIISP1000 Technical Manual\fR 
.sp
.LP
QLogic Corporation, \fIISP1020a/1040a Technical Manual\fR 
.sp
.LP
QLogic Corporation, \fIDifferences between the ISP1020a/1040a and the ISP1020B/1040B - Application Note\fR 
.SH DIAGNOSTICS
.sp
.LP
The messages described below may appear on the system console as well as being logged.
.sp
.LP
The first set of messages may be displayed while the  \fBisp\fR driver is first trying to attach.  All of these messages mean that the  \fBisp\fR driver was unable to attach.  These messages are preceded by "isp<number>",  where "<number>" is the instance number of the  \fBISP\fR Host Bus Adapter.
.sp
.ne 2
.mk
.na
\fB\fBDevice in slave-only slot, unused\fR\fR
.ad
.sp .6
.RS 4n
The SBus device has been placed in a slave-only slot and will not be accessible; move to non-slave-only SBus slot.
.RE

.sp
.ne 2
.mk
.na
\fB\fBDevice is using a hilevel intr, unused\fR\fR
.ad
.sp .6
.RS 4n
The device was configured with an interrupt level that cannot be used with this \fBisp\fR driver. Check the device.
.RE

.sp
.ne 2
.mk
.na
\fB\fBFailed to alloc soft state\fR\fR
.ad
.sp .6
.RS 4n
Driver was unable to allocate space for the internal state structure. Driver did not attach to device; \fBSCSI\fR devices will be inaccessible.
.RE

.sp
.ne 2
.mk
.na
\fB\fBBad soft state\fR\fR
.ad
.sp .6
.RS 4n
Driver requested an invalid internal state structure. Driver did not attach to device; \fBSCSI\fR devices will be inaccessible.
.RE

.sp
.ne 2
.mk
.na
\fB\fBUnable to map registers\fR\fR
.ad
.sp .6
.RS 4n
Driver was unable to map device registers; check for bad hardware. Driver did not attach to device; \fBSCSI\fR devices will be inaccessible.
.RE

.sp
.ne 2
.mk
.na
\fB\fBCannot add intr\fR\fR
.ad
.sp .6
.RS 4n
Driver was not able to add the interrupt routine to the kernel. Driver did not attach to device; \fBSCSI\fR devices will be inaccessible.
.RE

.sp
.ne 2
.mk
.na
\fB\fBUnable to attach\fR\fR
.ad
.sp .6
.RS 4n
Driver was unable to attach to the hardware for some reason that may be printed. Driver did not attach to device; \fBSCSI\fR devices will be inaccessible.
.RE

.sp
.LP
The next set of messages can be displayed at any time. They will be printed with the full device pathname followed by the shorter form described above.
.sp
.ne 2
.mk
.na
\fB\fBFirmware should be < 0x<number> bytes\fR\fR
.ad
.sp .6
.RS 4n
Firmware size exceeded allocated space and will not download firmware. This could mean that the firmware was corrupted somehow. Check the \fBisp\fR driver.
.RE

.sp
.ne 2
.mk
.na
\fB\fBFirmware checksum incorrect\fR\fR
.ad
.sp .6
.RS 4n
Firmware has an invalid checksum and will not be downloaded.
.RE

.sp
.ne 2
.mk
.na
\fB\fBChip reset timeout\fR\fR
.ad
.sp .6
.RS 4n
\fBISP\fR chip failed to reset in the time allocated; may be bad hardware.
.RE

.sp
.ne 2
.mk
.na
\fB\fBStop\fR \fBfirmware\fR \fBfailed\fR\fR
.ad
.sp .6
.RS 4n
Stopping the firmware failed; may be bad hardware.
.RE

.sp
.ne 2
.mk
.na
\fB\fBLoad ram failed\fR\fR
.ad
.sp .6
.RS 4n
Unable to download new firmware into the \fBISP\fR chip.
.RE

.sp
.ne 2
.mk
.na
\fB\fBDMA setup failed\fR\fR
.ad
.sp .6
.RS 4n
The \fBDMA\fR setup failed in the host adapter driver on a  \fBscsi_pkt\fR. This will return \fBTRAN_BADPKT\fR to a \fBSCSA\fR target driver.
.RE

.sp
.ne 2
.mk
.na
\fB\fBBad request pkt\fR\fR
.ad
.sp .6
.RS 4n
The \fBISP\fR Firmware rejected the packet as being set up incorrectly. This will cause the  \fBisp\fR driver to call the target completion routine with the reason of  \fBCMD_TRAN_ERR\fR set in the  \fBscsi_pkt\fR. Check the target driver for correctly setting up the packet.
.RE

.sp
.ne 2
.mk
.na
\fB\fBBad request pkt header\fR\fR
.ad
.sp .6
.RS 4n
The \fBISP\fR Firmware rejected the packet as being set up incorrectly. This will cause the  \fBisp\fR driver to call the target completion routine with the reason of  \fBCMD_TRAN_ERR\fR set in the  \fBscsi_pkt\fR. Check the target driver for correctly setting up the packet.
.RE

.sp
.ne 2
.mk
.na
\fB\fBPolled\fR \fBcommand\fR \fBtimeout\fR \fBon\fR \fB<number>.<number>\fR\fR
.ad
.sp .6
.RS 4n
A polled command experienced a timeout. The target device, as noted by the target lun (<number>.<number>) information, may not be responding  correctly to the command, or the \fBISP\fR chip may be hung.  This will cause an error recovery to be initiated in the  \fBisp\fR driver. This could mean a bad device or cabling.
.RE

.sp
.ne 2
.mk
.na
\fB\fBSCSI Cable/Connection problem\fR\fR
.ad
.sp .6
.RS 4n

.RE

.sp
.ne 2
.mk
.na
\fB\fBHardware/Firmware\fR \fBerror\fR\fR
.ad
.sp .6
.RS 4n
The \fBISP\fR chip encountered a firmware error of some kind. The problem is probably due to a faulty scsi cable or improper cable connection.  This error will cause the  \fBisp\fR driver to do error recovery by resetting the chip.
.RE

.sp
.ne 2
.mk
.na
\fB\fBReceived unexpected SCSI Reset\fR\fR
.ad
.sp .6
.RS 4n
The \fBISP\fR chip received an unexpected \fBSCSI\fR Reset and has initiated  its own internal error recovery, which will return all the  \fBscsi_pkt\fR with reason set to  \fBCMD_RESET.\fR
.RE

.sp
.ne 2
.mk
.na
\fB\fBFatal timeout\fR \fBon\fR \fBtarget <number>.<number>\fR\fR
.ad
.sp .6
.RS 4n
The  \fBisp\fR driver found a command that had not completed in the correct amount of time; this will cause error recovery by the  \fBisp\fR driver. The device that experienced the timeout was at target lun (<number>.<number>).
.RE

.sp
.ne 2
.mk
.na
\fB\fBFatal error, resetting interface\fR\fR
.ad
.sp .6
.RS 4n
This is an indication that the  \fBisp\fR driver is doing error recovery.  This will cause all outstanding commands that have been transported to the  \fBisp\fR driver to be completed via the  \fBscsi_pkt\fR completion routine in the target driver with reason of  \fBCMD_RESET\fR and status of  \fBSTAT_BUS_RESET\fR set in the  \fBscsi_pkt\fR.
.RE

