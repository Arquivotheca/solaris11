'\" te
.\"  Copyright (c) 2011, Oracle and/or its affiliates. All rights reserved.
.TH ibp 7D "2 Aug 2011" "SunOS 5.11" "Devices"
.SH NAME
ibp \- Infiniband IPoIB device driver
.SH SYNOPSIS
.LP
.nf
\fB/dev/ibp*\fR
.fi

.SH DESCRIPTION
.sp
.LP
The \fBibp\fR driver implements the IETF IP over Infiniband protocol and provides IPoIB service for all IBA ports present in the system. For more information about managing the data-links created by the \fBibp\fR driver, see \fBdladm\fR(1M) manual page. 
.sp
.LP
The \fBibp\fR driver is a multi-threaded, loadable, clonable, STREAMS hardware driver supporting the connectionless Data Link Provider Interface, \fBdlpi\fR(7P)). 
.sp
.LP
The \fBibp\fR driver provides basic support for both the IBA Unreliable Datagram Queue Pair hardware and the IBA Reliable Connected Queue Pair hardware. Functions include QP initialization, frame transmit and receive, multicast and promiscuous  mode support, and statistics reporting. 
.sp
.LP
By default, Connected Mode will be used by the each IB link. This behavior can be modified by changing the \fBlinkmode\fR property of the data link. See the EXAMPLES section of the \fBdladm\fR(1M) manual page for information .
.sp
.LP
Because \fBibp\fR over connected mode attempts to use a large MTU (65520 bytes), applications should adapt to the large MTU to get better performance, for example, adopting a large TCP window size.
.sp
.LP
Use the cloning, character-special device \fB/dev/ibp\fR to access all \fBibp\fR devices installed within the system.
.sp
.LP
The \fBibp\fR driver is dependent on GLD, a loadable kernel module that provides the \fBibp\fR driver with the DLPI and STREAMS functionality required of a LAN driver. Except as noted in the \fBApplication Programming Interface\fR section of this man page, see \fBgld\fR(7D) for more details on the primitives supported by the driver. The GLD module is located at \fB/kernel/misc/sparcv9/gld\fR on 64 bit systems and at \fB/kernel/misc/gld\fR on 32 bit systems.
.sp
.LP
The \fBibp\fR driver expects certain configuration of the IBA fabric prior to operation (which also implies the SM must be active and managing the fabric). Specifically, the IBA multicast group representing the IPv4 limited broadcast address 255.255.255.255 (also defined as broadcast-GID in IETF documents) should be created prior to initializing the device. IBA properties (including mtu, qkey and sl) of this group is used by the driver to create any other IBA multicast group as instructed by higher level (IP) software. The driver probes for the existance of this broadcast-GID during \fBattach\fR(9E).
.SH APPLICATION PROGRAMMING INTERFACE (DLPI)
.sp
.LP
The values returned by the driver in the DL_INFO_ACK primitive in response to your DL_INFO_REQ are:
.RS +4
.TP
.ie t \(bu
.el o
Maximum SDU is the MTU associated with the broadcast-GID group, less the 4 byte IPoIB header for UD mode and 65520 for CM mode.
.RE
.RS +4
.TP
.ie t \(bu
.el o
Minimum SDU is 0.
.RE
.RS +4
.TP
.ie t \(bu
.el o
dlsap address length is 22.
.RE
.RS +4
.TP
.ie t \(bu
.el o
MAC type is DL_IB.
.RE
.RS +4
.TP
.ie t \(bu
.el o
The sap length value is -2, meaning the physical address component is followed immediately by a 2-byte sap component within the DLSAP address.
.RE
.RS +4
.TP
.ie t \(bu
.el o
Broadcast address value is the MAC address consisting of the 4 bytes of QPN 00:FF:FF:FF prepended to the IBA multicast address of the broadcast-GID.
.sp
Due to the nature of link address definition for IPoIB, the DL_SET_PHYS_ADDR_REQ DLPI primitive is not supported.
.sp
In the transmit case for streams that have been put in raw mode via the DLIOCRAW ioctl, the DLPI application must prepend the 20 byte IPoIB destination address to the data it wants to transmit over-the-wire. In the receive case, applications receive the IP/ARP datagram along with the IETF defined 4 byte header.
.RE
.SH WARNING
.sp
.LP
This section describes warning messages that might be generated by the driver. Please note that while the format of these messages can be modified in future versions, the same general information is provided.
.sp
.LP
While joining IBA multicast groups corresponding to IP multicast groups as part of multicast promiscuous operations as required by IP multicast routers, or as part of running \fBsnoop\fR(1M), it is possible that joins to some multicast groups can fail due to inherent resource constraints in the IBA components. In such cases, warning message similar to the following appear in the system log, indicating the interface on which the failure occurred:
.sp
.in +2
.nf
NOTICE: ibp: Could not get list of IBA multicast groups
NOTICE: ibp: IBA promiscuous mode missed multicast group
NOTICE: ibp: IBA promiscuous mode missed new multicast gid
.fi
.in -2

.sp
.LP
Additionally, if the IBA link transitions to an unavailable state (that is, the IBA link state becomes \fBDown\fR, \fBInitialize\fR or \fBArmed\fR) and then becomes active again, the driver tries to rejoin previously joined groups if required. Failure to rejoin multicast groups triggers messages such as:
.sp
.in +2
.nf
NOTICE: ibp: Failure on port up to rejoin multicast gid
.fi
.in -2

.sp
.LP
Further, as described above, if the broadcast-GID is not found or could not be created,  or  the  associated  MTU is higher than what the HCA port can support, the following messages are printed to the system log:
.sp
.in +2
.nf
NOTICE: ibp: IPoIB broadcast group absent
NOTICE: ibp: IPoIB broadcast group MTU 4096 greater than port's
maximum MTU 2048
.fi
.in -2

.sp
.LP
In all cases of these reported problems when running \fBifconfig\fR(1M), it should be checked that IBA cabling is intact, an SM is running on the fabric, and the broadcast-GID with appropriate properties has been created in the IBA partition.
.sp
.LP
The MTU of Reliable Connected mode can be larger than the MTU of Unreliable Datagram mode. 
.sp
.LP
When Reliable Connected mode is enabled, \fBibp\fR still uses Unreliable Datagram mode to transmit and receive multicast packets.
.sp
.LP
If only one side has enabled Reliable Connected mode, communication falls back to datagram mode. The connected mode instance uses Path MTU discovery to automatically adjust the MTU of a unicast packet if an MTU difference exists. Before Path MTU discovery reduces the MTU for a specific destination, several packets whose size exceeds the MTU of Unreliable Datagram mode is dropped.
.SH EXAMPLES
.LP
\fBExample 1 \fRModifying the \fBlinkmode\fR Property
.sp
.in +2
.nf
# Below example modify the 'linkmode' to ud

# dladm show-linkprop pffff.ibp0 | grep linkmode
LINK        PROPERTY   PERM VALUE  DEFAULT    POSSIBLE
pffff.ibp0  linkmode    rw   cm       cm        cm,ud 

# dladm set-linkprop -p linkmode=ud pffff.ibp0

# dladm show-linkprop pffff.ibp0 | grep linkmode
LINK        PROPERTY   PERM VALUE  DEFAULT    POSSIBLE
pffff.ibp0  linkmode    rw   ud      cm        cm,ud 
# 
.fi
.in -2

.SH FILES
.sp
.ne 2
.mk
.na
\fB\fB/dev/ibp*\fR\fR
.ad
.RS 27n
.rt  
Special character device
.RE

.sp
.ne 2
.mk
.na
\fB\fB/kernel/drv/ib.conf\fR\fR
.ad
.RS 27n
.rt  
Configuration file to start IPoIB service
.RE

.sp
.ne 2
.mk
.na
\fB\fB/kernel/drv/sparcv9/ibp\fR\fR
.ad
.RS 27n
.rt  
64-bit SPARC device driver
.RE

.sp
.ne 2
.mk
.na
\fB\fB/kernel/drv/amd64/ibp\fR\fR
.ad
.RS 27n
.rt  
64-bit x86 device driver
.RE

.sp
.ne 2
.mk
.na
\fB\fB/kernel/drv/ibp\fR\fR
.ad
.RS 27n
.rt  
32-bit x86 device driver
.RE

.SH SEE ALSO
.sp
.LP
\fBcfgadm\fR(1M), \fBdladm\fR(1M), \fBifconfig\fR(1M), \fBsyslogd\fR(1M), \fBgld\fR(7D), \fBib\fR(7D), \fBkstat\fR(7D), \fBstreamio\fR(7I), \fBdlpi\fR(7P), \fBattributes\fR(5), \fBattach\fR(9E)
.SH NOTES
.sp
.LP
IBP is a GLD-based driver and provides the statistics described by \fBgld\fR(7D). Valid received packets not accepted by any stream (long) increases when IBP transmits broadcast IP packets. This happens because the infiniband hardware copies and loops back the transmitted broadcast packets to the source. These packets are discarded by GLD and are recorded as \fBunknowns\fR.
