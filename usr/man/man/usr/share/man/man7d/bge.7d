'\" te
.\"  Copyright (c) 2008, Sun Microsystems, Inc.  All Rights Reserved
.TH bge 7D "9 Apr 2008" "SunOS 5.11" "Devices"
.SH NAME
bge \- SUNW,bge Gigabit Ethernet driver for Broadcom BCM57xx
.SH SYNOPSIS
.LP
.nf
\fB/dev/bge*\fR
.fi

.SH DESCRIPTION
.sp
.LP
The \fBbge\fR Gigabit Ethernet driver is a multi-threaded, loadable, clonable, GLD-based STREAMS driver supporting the Data Link Provider Interface, \fBdlpi\fR(7P), on Broadcom BCM57xx (BCM5700/5701/5703/5704/5705/5705M/5714/5721/5751/5751M/5782/5788 on x86) Gigabit Ethernet controllers fitted to the system motherboard. With the exception of BCM5700/BCM5701/BCM5704S, these devices incorporate both MAC and PHY functions and provide three-speed (copper) Ethernet operation on the RJ-45 connectors. (BCM5700/BCM5701/BCM5704S do not have a PHY integrated into the MAC chipset.)
.sp
.LP
The \fBbge\fR driver functions include controller initialization, frame transmit and receive, promiscuous and multicast support, and error recovery and reporting.
.sp
.LP
The \fBbge\fR driver and hardware support auto-negotiation, a protocol specified by the 1000 Base-T standard. Auto-negotiation allows each device to advertise its capabilities and discover those of its peer (link partner). The highest common denominator supported by both link partners is automatically selected, yielding the greatest available throughput, while requiring no manual configuration. The \fBbge\fR driver also allows you to configure the advertised capabilities to less than the maximum (where the full speed of the interface is not required), or to force a specific mode of operation, irrespective of the link partner's advertised capabilities.
.SH APPLICATION PROGRAMMING INTERFACE
.sp
.LP
The cloning character-special device, \fB/dev/bge\fR, is used to access all BCM57xx devices ( (BCM5700/5701/5703/5704, 5705/5714/5721/5751/5751M/5782 on x86) fitted to the system motherboard.
.sp
.LP
The \fBbge\fR driver is managed by the \fBdladm\fR(1M) command line utility, which allows VLANs to be defined on top of bge  instances and for \fBbge\fR instances to be aggregated. See \fBdladm\fR(1M) for more details.
.sp
.LP
You must send an explicit DL_ATTACH_REQ message to associate the opened stream with a particular device (PPA). The PPA ID is interpreted as an unsigned integer data type and indicates the corresponding device instance (unit) number. The driver returns an error (DL_ERROR_ACK) if the PPA field value does not correspond to a valid device instance number for the system. The device is initialized on first attach and de-initialized (stopped) at last detach.
.sp
.LP
The values returned by the driver in the DL_INFO_ACK primitive in response to a DL_INFO_REQ are:
.RS +4
.TP
.ie t \(bu
.el o
Maximum SDU (default 1500).
.RE
.RS +4
.TP
.ie t \(bu
.el o
Minimum SDU (default 0).
.RE
.RS +4
.TP
.ie t \(bu
.el o
DLSAP address length is 8.
.RE
.RS +4
.TP
.ie t \(bu
.el o
MAC type is \fBDL_ETHER\fR.
.RE
.RS +4
.TP
.ie t \(bu
.el o
\fBSAP\fR length value is \fI-2\fR, meaning the physical address component is followed immediately by a 2-byte \fBSAP\fR component within the \fBDLSAP\fR address.
.RE
.RS +4
.TP
.ie t \(bu
.el o
Broadcast address value is the Ethernet/IEEE broadcast address (FF:FF:FF:FF:FF:FF).
.RE
.sp
.LP
Once in the DL_ATTACHED state, you must send a DL_BIND_REQ to associate a particular Service Access Point (SAP) with the stream.
.SH CONFIGURATION
.sp
.LP
By default, the \fBbge\fR driver performs auto-negotiation to select the link speed and mode. Link speed and mode can be any one of the following, (as described in the \fI IEEE803.2\fR standard):
.RS +4
.TP
.ie t \(bu
.el o
1000 Mbps, full-duplex
.RE
.RS +4
.TP
.ie t \(bu
.el o
1000 Mbps, half-duplex
.RE
.RS +4
.TP
.ie t \(bu
.el o
100 Mbps, full-duplex
.RE
.RS +4
.TP
.ie t \(bu
.el o
100 Mbps, half-duplex
.RE
.RS +4
.TP
.ie t \(bu
.el o
10 Mbps, full-duplex
.RE
.RS +4
.TP
.ie t \(bu
.el o
10 Mbps, half-duplex
.RE
.sp
.LP
The auto-negotiation protocol automatically selects:
.RS +4
.TP
.ie t \(bu
.el o
Speed (1000 Mbps, 100 Mbps, or 10 Mbps)
.RE
.RS +4
.TP
.ie t \(bu
.el o
Operation mode (full-duplex or half-duplex)
.RE
.sp
.LP
as the highest common denominator supported by both link partners. Because the \fBbge\fR device supports all modes, the effect is to select the highest throughput mode supported by the other device.
.sp
.LP
Alternatively, you can set the capabilities advertised by the \fBbge\fR device using \fBdladm\fR(1M). The driver supports a number of parameters whose names begin with \fBen_\fR (see below). Each of these parameters contains a boolean value that determines whether the device advertises that mode of operation. If \fBen_autoneg_cap\fR is set to 0, the driver forces the mode of operation selected by the first non-zero parameter in priority order as  listed below:
.sp
.in +2
.nf
    (highest priority/greatest throughput)
          en_1000fdx_cap        1000Mbps full duplex
          en_1000hdx_cap        1000Mpbs half duplex
          en_100fdx_cap         100Mpbs full duplex
          en_100hdx_cap         100Mpbs half duplex
          en_10fdx_cap          10Mpbs full duplex
          en_10hdx_cap          10Mpbs half duplex
                           (lowest priority/least throughput)
.fi
.in -2

.sp
.LP
For example, to prevent the device 'bge2' from advertising gigabit capabilities, enter (as super-user):
.sp
.in +2
.nf
# dladm set-linkprop -p enable_1000hdx_cap=0  bge2
# dladm set-linkprop -p enable_1000fdx_cap=0 bge2
.fi
.in -2

.sp
.LP
All capabilities default to enabled. Note that changing any capability parameter causes the link to go down while the link partners renegotiate the link speed/duplex using the newly changed capabilities.
.sp
.LP
The current settings of the parameters may be found using dladm show-ether. In addition, the driver exports the current state, speed, duplex setting, and working mode of the link via kstat parameters (these are read only and may not be changed). For example, to check link state of device \fBbge0\fR:
.sp
.in +2
.nf
# dladm show-ether -x bge0
LINK       PTYPE    STATE    AUTO  SPEED-DUPLEX            PAUSE
bge0       current  up       yes   1G-f                    bi
--         capable  --       yes   1G-fh,100M-fh,10M-fh    bi
--         adv      --       yes   1G-fh                   bi
--         peeradv  --       yes   1G-f                    bi
.fi
.in -2

.sp
.LP
The output above indicates that the link is up and running at 1Gbps full-duplex with its rx/tx direction pause capability.
.sp
.LP
To extract link state information for the same link using kstat:
.sp
.in +2
.nf
# kstat bge:0:mac:link_state
module: bge                 instance: 0     
name:   mac                 class:    net
link_state 
.fi
.in -2

.sp
.LP
The default MTU is 1500. To enable Jumbo Frames support, you can configure the \fBbge\fR driver by defining the default_mtu property via \fBdladm\fR(1M) or in \fBdriver.conf\fR(4) to greater than 1500 bytes (for example: default_mtu=9000). Note that the largest jumbo size supported by bge is 9000 bytes. Additionally, not all bge-derived devices currently support Jumbo Frames. The following devices  support Jumbo Frames up to 9KB:  BCM5700, 5701, 5702, 5703C, 5703S, 5704C, 5704S, 5714C, 5714S, 5715C and 5715S. Other devices currently do not support Jumbo Frames.
.SH FILES
.sp
.ne 2
.mk
.na
\fB\fB/kernel/drv/bge*\fR\fR
.ad
.RS 27n
.rt  
32-bit ELF kernel module. (x86)
.RE

.sp
.ne 2
.mk
.na
\fB\fB/kernel/drv/amd64/bge\fR\fR
.ad
.RS 27n
.rt  
64-bit ELF kernel module (x86).
.RE

.sp
.ne 2
.mk
.na
\fB\fB/kernel/drv/sparcv9/bge\fR\fR
.ad
.RS 27n
.rt  
64-bit ELF kernel module (SPARC).
.RE

.SH ATTRIBUTES
.sp
.LP
See \fBattributes\fR(5) for a description of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i) 
lw(2.75i) |lw(2.75i) 
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
ArchitectureSPARC, x86
.TE

.SH SEE ALSO
.sp
.LP
\fBdladm\fR(1M), \fBdriver.conf\fR(4), \fBattributes\fR(5), \fBstreamio\fR(7I), \fBdlpi\fR(7P)
.sp
.LP
\fIWriting Device Drivers\fR
.sp
.LP
\fISTREAMS Programming Guide\fR
.sp
.LP
\fINetwork Interfaces Programmer's Guide\fR
