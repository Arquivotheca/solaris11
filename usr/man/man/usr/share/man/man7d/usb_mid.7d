'\" te
.\" Copyright 2006, 2011, Oracle and/or its affiliates. All rights reserved.
.TH usb_mid 7D "16 Aug 2011" "SunOS 5.11" "Devices"
.SH NAME
usb_mid \- USB Multi Interface Driver
.SH SYNOPSIS
.LP
.nf
\fBdevice@\fR\fIunit-address\fR 
.fi

.SH DESCRIPTION
.sp
.LP
The \fBusb_mid\fR driver is a \fBUSBA\fR (Solaris Universal Serial Bus Architecture)-compliant  nexus  driver that binds to device level nodes of a composite (multi interface) device if no vendor or class-specific driver is available. The \fBusb_mid\fR driver creates interface nodes or interface association nodes and attempts to bind drivers to them. If no driver is found for interface association nodes, \fBusb_ia\fR(7D) is bound by default. 
.SS "UGEN (Generic USB)"
.sp
.LP
The \fBusb_mid\fR driver also supports a \fBugen\fR(7D) interface allowing raw access to the device, for example by \fBlibusb\fR(3LIB) applications, by passing the drivers bound to each interface. Since a libusb application might change the state of the device, you should not access the device through the child interface drivers. The \fBusb_mid\fR driver creates a \fBugen\fR interface only if none of its children are explicitly bound to the \fBugen\fR(7D) driver. Additionally, \fBusb_mid\fR does not create children.
.SH FILES
.sp
.ne 2
.mk
.na
\fB\fB/kernel/drv/usb_mid\fR\fR
.ad
.sp .6
.RS 4n
32-bit x86 ELF kernel module
.RE

.sp
.ne 2
.mk
.na
\fB\fB/kernel/drv/amd64/usb_mid\fR\fR
.ad
.sp .6
.RS 4n
64-bit x86 ELF kernel module
.RE

.sp
.ne 2
.mk
.na
\fB\fB/kernel/drv/sparcv9/usb_mid\fR\fR
.ad
.sp .6
.RS 4n
64-bit SPARC ELF kernel module
.RE

.sp
.ne 2
.mk
.na
\fB\fB/dev/usb/*/*/*\fR\fR
.ad
.sp .6
.RS 4n
ugen(7D) nodes.
.RE

.SH ATTRIBUTES
.sp
.LP
See \fBattributes\fR(5) for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i) 
lw(2.75i) |lw(2.75i) 
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
ArchitectureSPARC & x86, PCI-based systems
_
Availability system/io/usb
.TE

.SH SEE ALSO
.sp
.LP
\fBcfgadm_usb\fR(1M), \fBlibusb\fR(3LIB), \fBattributes\fR(5), \fBusba\fR(7D), \fBusb_ia\fR(7D)
.sp
.LP
\fIWriting Device Drivers\fR 
.sp
.LP
\fIUniversal Serial Bus Specification 2.0\fR\(em2000
.sp
.LP
\fIInterface Association Descriptor Engineering Change Notice (ECN)\fR\(em2003
.sp
.LP
\fIOracle Solaris Administration: Common Tasks\fR
.sp
.LP
http://www.oracle.com
.SH DIAGNOSTICS
.sp
.LP
In addition to being logged, the following messages may appear on the system console. All messages are formatted in the following manner:
.sp
.in +2
.nf
Warning: <device path> (usb_mid<instance number>): Error Message...
.fi
.in -2
.sp

.sp
.ne 2
.mk
.na
\fBCannot access <device>. Please reconnect.\fR
.ad
.sp .6
.RS 4n
This device has been disconnected because a device other than the original one has been inserted. The driver informs you of this fact by displaying the name of the original device.
.RE

.sp
.ne 2
.mk
.na
\fBDevice not identical to the previous one on this port. Please disconnect and reconnect.\fR
.ad
.sp .6
.RS 4n
Same condition as described above; however in this case, the driver is unable to identify the original device with a name string.
.RE

.sp
.ne 2
.mk
.na
\fBPlease disconnect and reconnect this device.\fR
.ad
.sp .6
.RS 4n
A hotplug of the device is needed before it can be restored.
.RE

.sp
.LP
The following messages may be logged into the system log. They are formatted in the following manner:
.sp
.in +2
.nf
<device path><usb_mid<instance number>): message...
.fi
.in -2
.sp

.sp
.ne 2
.mk
.na
\fBNo driver found for interface <n> (nodename: <string>) of <device>.\fR
.ad
.sp .6
.RS 4n
No driver is available for this interface. 
.RE

.sp
.ne 2
.mk
.na
\fBNo driver found for device <device>.\fR
.ad
.sp .6
.RS 4n
No driver is available for this interface. 
.RE

.sp
.ne 2
.mk
.na
\fBCan't support ugen for multiple configuration devices that have attached child interface drivers.\fR
.ad
.sp .6
.RS 4n
No ugen interface is available and \fBlibusb\fR(3LIB) cannot work with this device.
.RE

