'\" te
.\" To view license terms, attribution, and copyright for IP Filter, the default path is /usr/lib/ipf/IPFILTER.LICENCE. If the Solaris operating environment has been installed anywhere other than the default, modify the given path to access the file at the installed location.
.\" Portions Copyright (c) 2008, Sun Microsystems Inc. All Rights Reserved.
.TH ipfs 1M "3 Apr 2008" "SunOS 5.11" "System Administration Commands"
.SH NAME
ipfs \- saves and restores information for NAT and state tables
.SH SYNOPSIS
.LP
.nf
\fBipfs\fR [\fB-nv\fR] \fB-l\fR
.fi

.LP
.nf
\fBipfs\fR [\fB-nv\fR] \fB-u\fR
.fi

.LP
.nf
\fBipfs\fR [\fB-nv\fR] [\fB-d\fR \fIdirname\fR] \fB-R\fR
.fi

.LP
.nf
\fBipfs\fR [\fB-nv\fR] [\fB-d\fR \fIdirname\fR] \fB-W\fR
.fi

.LP
.nf
\fBipfs\fR [\fB-nNSv\fR] [\fB-f\fR \fIfilename\fR] \fB-r\fR
.fi

.LP
.nf
\fBipfs\fR [\fB-nNSv\fR] [\fB-f\fR \fIfilename\fR] \fB-w\fR
.fi

.LP
.nf
\fBipfs\fR [\fB-nNSv\fR] \fB-f\fR \fIfilename\fR \fB-i\fR \fI<if1>\fR,\fI<if2>\fR
.fi

.SH DESCRIPTION
.sp
.LP
The \fBipfs\fR utility enables the saving of state information across reboots. Specifically, the utility allows state information created for NAT entries and rules using "keep state" to be locked (modification prevented) and then saved to disk. Then, after a reboot, that information is restored. The result of this state-saving is that connections are not interrupted.
.SH OPTIONS
.sp
.LP
The following options are supported:
.sp
.ne 2
.mk
.na
\fB\fB-d\fR\fR
.ad
.RS 6n
.rt  
Change the default directory used with \fB-R\fR and \fB-W\fR options for saving state information.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-n\fR\fR
.ad
.RS 6n
.rt  
Do not take any action that would affect information stored in the kernel or on disk.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-v\fR\fR
.ad
.RS 6n
.rt  
Provides a verbose description of \fBipfs\fR activities.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-N\fR\fR
.ad
.RS 6n
.rt  
Operate on NAT information.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-S\fR\fR
.ad
.RS 6n
.rt  
Operate on filtering state information.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-u\fR\fR
.ad
.RS 6n
.rt  
Unlock state tables in the kernel.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-l\fR\fR
.ad
.RS 6n
.rt  
Lock state tables in the kernel.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-r\fR\fR
.ad
.RS 6n
.rt  
Read information in from the specified file and load it into the kernel. This requires the state tables to have already been locked and does not change the lock once complete.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-w\fR\fR
.ad
.RS 6n
.rt  
Write information out to the specified file and from the kernel. This requires the state tables to have already been locked and does not change the lock once complete.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-R\fR\fR
.ad
.RS 6n
.rt  
Restores all saved state information, if any, from two files, \fBipstate.ipf\fR and \fBipnat.ipf\fR, stored in the \fB/var/db/ipf\fR directory. This directory can be changed with the \fB-d\fR option. The state tables are locked at the beginning of this operation and unlocked once complete.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-W\fR\fR
.ad
.RS 6n
.rt  
Saves in-kernel state information, if any, out to two files, \fBipstate.ipf\fR and \fBipnat.ipf\fR, stored in the \fB/var/db/ipf\fR directory. This directory can be changed with the \fB-d\fR option. The state tables are locked at the beginning of this operation and unlocked once complete.
.RE

.SH FILES
.RS +4
.TP
.ie t \(bu
.el o
\fB/var/db/ipf/ipstate.ipf\fR
.RE
.RS +4
.TP
.ie t \(bu
.el o
\fB/var/db/ipf/ipnat.ipf\fR
.RE
.RS +4
.TP
.ie t \(bu
.el o
\fB/dev/ipl\fR
.RE
.RS +4
.TP
.ie t \(bu
.el o
\fB/dev/ipstate\fR
.RE
.RS +4
.TP
.ie t \(bu
.el o
\fB/dev/ipnat\fR
.RE
.SH ATTRIBUTES
.sp
.LP
See \fBattributes\fR(5) for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i) 
lw(2.75i) |lw(2.75i) 
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Availabilitynetwork/ipfilter
_
Interface StabilityCommitted
.TE

.SH SEE ALSO
.sp
.LP
\fBipf\fR(1M), \fBipmon\fR(1M), \fBipnat\fR(1M), \fBattributes\fR(5)
.SH DIAGNOSTICS
.sp
.LP
Arguably, the \fB-W\fR and \fB-R\fR operations should set the locking and, rather than undo it, restore it to what it was previously.
.sp
.LP
Fragment table information is currently not saved.
