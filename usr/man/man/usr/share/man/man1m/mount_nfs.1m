'\" te
.\" Copyright (c) 1998, 2011, Oracle and/or its affiliates. All rights reserved.
.\" Copyright 1989 AT&T
.TH mount_nfs 1M "8 Mar 2011" "SunOS 5.11" "System Administration Commands"
.SH NAME
mount_nfs \- mount remote NFS resources
.SH SYNOPSIS
.LP
.nf
\fBmount\fR [\fB-F\fR nfs] [\fIgeneric_options\fR] [\fB-o\fR \fIspecific_options\fR] [\fB-O\fR] \fIresource\fR
.fi

.LP
.nf
\fBmount\fR [\fB-F\fR nfs] [\fIgeneric_options\fR] [\fB-o\fR \fIspecific_options\fR] [\fB-O\fR] \fImount_point\fR
.fi

.LP
.nf
\fBmount\fR [\fB-F\fR nfs] [\fIgeneric_options\fR] [\fB-o\fR \fIspecific_options\fR]
     [\fB-O\fR] \fIresource\fR \fImount_point\fR
.fi

.SH DESCRIPTION
.sp
.LP
The \fBmount\fR utility attaches a named \fIresource\fR to the file system hierarchy at the pathname location \fImount_point\fR, which must already exist. If \fImount_point\fR has any contents prior to the \fBmount\fR operation, the contents remain hidden until the \fIresource\fR is once again unmounted.
.sp
.LP
\fBmount_nfs\fR starts the \fBlockd\fR(1M) and \fBstatd\fR(1M) daemons if they are not already running.
.sp
.LP
If the resource is listed in the \fB/etc/vfstab\fR file, the command line can specify either \fIresource\fR or \fImount_point\fR, and \fBmount\fR consults \fB/etc/vfstab\fR for more information. If the \fB-F\fR option is omitted, \fBmount\fR takes the file system type from \fB/etc/vfstab\fR.
.sp
.LP
If the resource is not listed in the \fB/etc/vfstab\fR file, then the command line must specify both the \fIresource\fR and the \fImount_point\fR.
.sp
.LP
\fIhost\fR can be an IPv4 or IPv6 address string. As IPv6 addresses already contain colons, enclose \fIhost\fR in a pair of square brackets when specifying an IPv6 address string. Otherwise the first occurrence of a colon can be interpreted as the separator between the host name and path, for example, \fB[1080::8:800:200C:417A]:tmp/file\fR. See \fBinet\fR(7P) and \fBinet6\fR(7P).
.sp
.ne 2
.mk
.na
\fB\fIhost\fR:\fIpathname\fR\fR
.ad
.sp .6
.RS 4n
Where \fIhost\fR is the name of the \fBNFS\fR server host, and \fIpathname\fR is the path name of the directory on the server being mounted. The path name is interpreted according to the server's path name parsing rules and is not necessarily slash-separated, though on most servers, this is the case.
.RE

.sp
.ne 2
.mk
.na
\fB\fInfs\fR://\fIhost\fR[:\fIport\fR]/\fIpathname\fR\fR
.ad
.sp .6
.RS 4n
This is an \fBNFS\fR \fBURL\fR and follows the standard convention for \fBNFS\fR \fBURL\fRs as described in \fINFS URL Scheme\fR, RFC 2224. See the discussion of \fBURL\fR's and the public option under \fBNFS FILE SYSTEMS\fR for a more detailed discussion.
.RE

.sp
.ne 2
.mk
.na
\fB\fIhost\fR:\fIpathname\fR \fInfs\fR://\fIhost\fR[:\fIport\fR]/\fIpathname\fR\fR
.ad
.br
.na
\fB\fR
.ad
.sp .6
.RS 4n
\fIhost\fR:\fIpathname\fR is a comma-separated list of \fIhost\fR:\fIpathname\fR.
.sp
See the discussion of replicated file systems and failover under \fBNFS FILE SYSTEMS\fR for a more detailed discussion.
.RE

.sp
.ne 2
.mk
.na
\fB\fIhostlist\fR \fIpathname\fR\fR
.ad
.sp .6
.RS 4n
\fIhostlist\fR is a comma-separated list of hosts. 
.sp
See the discussion of replicated file systems and failover under \fBNFS FILE SYSTEMS\fR for a more detailed discussion.
.RE

.sp
.LP
The \fBmount\fR command maintains a table of mounted file systems in \fB/etc/mnttab\fR, described in \fBmnttab\fR(4).
.sp
.LP
\fBmount_nfs\fR supports both NFSv3 and NFSv4 mounts. The default NFS version is NFSv4.
.SS "SMF Management"
.sp
.LP
The NFS client service is managed by the service management facility, \fBsmf\fR(5), under the service identifier:
.sp
.in +2
.nf
svc:/network/nfs/client:default
.fi
.in -2
.sp

.sp
.LP
Administrative actions on this service, such as enabling, disabling, or requesting restart, can be performed using \fBsvcadm\fR(1M). The service's status can be queried using the \fBsvcs\fR(1) command.
.SH OPTIONS
.sp
.LP
See \fBmount\fR(1M) for the list of supported \fIgeneric_options\fR. See \fBshare_nfs\fR(1M) for a description of server options.
.sp
.ne 2
.mk
.na
\fB\fB-o\fR \fIspecific_options\fR\fR
.ad
.sp .6
.RS 4n
Set file system specific options according to a comma-separated list with no intervening spaces. 
.sp
.ne 2
.mk
.na
\fB\fBacdirmax=\fR\fIn\fR\fR
.ad
.sp .6
.RS 4n
Hold cached attributes for no more than \fIn\fR seconds after directory update. The default value is \fB60\fR.
.RE

.sp
.ne 2
.mk
.na
\fB\fBacdirmin=\fR\fIn\fR\fR
.ad
.sp .6
.RS 4n
Hold cached attributes for at least \fIn\fR seconds after directory update. The default value is \fB30\fR.
.RE

.sp
.ne 2
.mk
.na
\fB\fBacregmax=\fR\fIn\fR\fR
.ad
.sp .6
.RS 4n
Hold cached attributes for no more than \fIn\fR seconds after file modification. The default value is \fB60\fR.
.RE

.sp
.ne 2
.mk
.na
\fB\fBacregmin=\fR\fIn\fR\fR
.ad
.sp .6
.RS 4n
Hold cached attributes for at least \fIn\fR seconds after file modification. The default value is \fB3\fR.
.RE

.sp
.ne 2
.mk
.na
\fB\fBactimeo=\fR\fIn\fR\fR
.ad
.sp .6
.RS 4n
Set \fImin\fR and \fImax\fR times for regular files and directories to \fIn\fR seconds. See "File Attributes," below, for a description of the effect of setting this option to \fB0\fR.
.sp
See "Specifying Values for Attribute Cache Duration Options," below, for a description of how \fBacdirmax\fR, \fBacdirmin\fR, \fBacregmax\fR, \fBacregmin\fR, and \fBactimeo\fR are parsed on a \fBmount\fR command line.
.RE

.sp
.ne 2
.mk
.na
\fB\fBbg\fR | \fBfg\fR\fR
.ad
.sp .6
.RS 4n
If the first attempt fails, retry in the background, or, in the foreground. The default is \fBfg\fR.
.RE

.sp
.ne 2
.mk
.na
\fB\fBforcedirectio\fR | \fBnoforcedirectio\fR\fR
.ad
.sp .6
.RS 4n
If \fBforcedirectio\fR is specified, then for the duration of the mount, forced direct \fBI/O\fR is used. If the filesystem is mounted using \fBforcedirectio\fR, data is transferred directly between client and server, with no buffering on the client. If the filesystem is mounted using \fBnoforcedirectio\fR, data is buffered on the client. \fBforcedirectio\fR is a performance option that is of benefit only in large sequential data transfers. The default behavior is \fBnoforcedirectio\fR. 
.RE

.sp
.ne 2
.mk
.na
\fB\fBgrpid\fR\fR
.ad
.sp .6
.RS 4n
By default, the \fBGID\fR associated with a newly created file obeys the System V semantics; that is, the \fBGID\fR is set to the effective \fBGID\fR of the calling process. This behavior can be overridden on a per-directory basis by setting the set-GID bit of the parent directory; in this case, the \fBGID\fR of a newly created file is set to the \fBGID\fR of the parent directory (see \fBopen\fR(2) and \fBmkdir\fR(2)). Files created on file systems that are mounted with the \fBgrpid\fR option obeys \fBBSD\fR semantics independent of whether the set-GID bit of the parent directory is set; that is, the \fBGID\fR is unconditionally inherited from that of the parent directory.
.RE

.sp
.ne 2
.mk
.na
\fB\fBhard\fR | \fBsoft\fR\fR
.ad
.sp .6
.RS 4n
Continue to retry requests until the server responds (\fBhard\fR) or give up and return an error (\fBsoft\fR). The default value is \fBhard\fR. Note that NFSv4 clients do not support soft mounts.
.RE

.sp
.ne 2
.mk
.na
\fB\fBintr\fR | \fBnointr\fR\fR
.ad
.sp .6
.RS 4n
Allow (do not allow) keyboard interrupts to kill a process that is hung while waiting for a response on a hard-mounted file system. The default is \fBintr\fR, which makes it possible for clients to interrupt applications that can be waiting for a remote mount.
.RE

.sp
.ne 2
.mk
.na
\fB\fBllock\fR\fR
.ad
.sp .6
.RS 4n
Use local locking (no lock manager). Note that this is a private interface.
.RE

.sp
.ne 2
.mk
.na
\fB\fBnoac\fR\fR
.ad
.sp .6
.RS 4n
Suppress data and attribute caching. The data caching that is suppressed is the write-behind. The local page cache is still maintained, but data copied into it is immediately written to the server.
.RE

.sp
.ne 2
.mk
.na
\fB\fBnocto\fR\fR
.ad
.sp .6
.RS 4n
Do not perform the normal close-to-open consistency. When a file is closed, all modified data associated with the file is flushed to the server and not held on the client. When a file is opened the client sends a request to the server to validate the client's local caches. This behavior ensures a file's consistency across multiple NFS clients. When \fBnocto\fR is in effect, the client does not perform the flush on close and the request for validation, allowing the possiblity of differences among copies of the same file as stored on multiple clients.
.sp
This option can be used where it can be guaranteed that accesses to a specified file system are made from only one client and only that client. Under such a condition, the effect of \fBnocto\fR can be a slight performance gain.
.RE

.sp
.ne 2
.mk
.na
\fB\fBport=\fR\fIn\fR\fR
.ad
.sp .6
.RS 4n
The server \fBIP\fR port number. The default is \fBNFS_PORT\fR. If the \fBport\fR option is specified, and if the resource includes one or more \fBNFS\fR \fBURL\fRs, and if any of the \fBURL\fRs include a \fBport\fR number, then the \fBport\fR number in the option and in the \fBURL\fR must be the same.
.RE

.sp
.ne 2
.mk
.na
\fB\fBposix\fR\fR
.ad
.sp .6
.RS 4n
Request \fBPOSIX.1\fR semantics for the file system. Requires a mount Version 2 \fBmountd\fR(1M) on the server. See \fBstandards\fR(5) for information regarding POSIX.
.RE

.sp
.ne 2
.mk
.na
\fB\fBproto=\fR\fInetid\fR | \fBrdma\fR\fR
.ad
.sp .6
.RS 4n
By default, the transport protocol that the NFS mount uses is the first available RDMA transport supported both by the client and the server. If no RDMA transport is found, then it attempts to use a TCP transport or, failing that, a UDP transport, as ordered in the \fB/etc/netconfig\fR file. If it does not find a connection oriented transport, it uses the first available connectionless transport.
.sp
Use this option to override the default behavior.
.sp
\fBproto\fR is set to the value of \fInetid\fR or \fBrdma\fR. \fInetid\fR is the value of the \fBnetwork_id\fR field entry in the \fB/etc/netconfig\fR file. 
.sp
The UDP protocol is not supported for NFS Version 4. If you specify a UDP protocol with the \fBproto\fR option, NFS version 4 is not used.
.RE

.sp
.ne 2
.mk
.na
\fB\fBpublic\fR\fR
.ad
.sp .6
.RS 4n
The \fBpublic\fR option forces the use of the public file handle when connecting to the \fBNFS\fR server. The resource specified might not have an \fBNFS\fR \fBURL\fR. See the discussion of \fBURL\fRs and the public option under \fBNFS FILE SYSTEMS\fR for a more detailed discussion.
.RE

.sp
.ne 2
.mk
.na
\fB\fBquota\fR | \fBnoquota\fR\fR
.ad
.sp .6
.RS 4n
Enable or prevent \fBquota\fR(1M) to check whether the user is over quota on this file system; if the file system has quotas enabled on the server, quotas are still checked for operations on this file system.
.RE

.sp
.ne 2
.mk
.na
\fB\fBremount\fR\fR
.ad
.sp .6
.RS 4n
Remounts a read-only file system as read-write (using the \fBrw\fR option). This option cannot be used with other \fB-o\fR options, and this option works only on currently mounted read-only file systems.
.RE

.sp
.ne 2
.mk
.na
\fB\fBretrans=\fR\fIn\fR\fR
.ad
.sp .6
.RS 4n
Set the number of \fBNFS\fR retransmissions to \fIn\fR. The default value is \fB5\fR. For connection-oriented transports, this option has no effect because it is assumed that the transport performs retransmissions on behalf of NFS.
.RE

.sp
.ne 2
.mk
.na
\fB\fBretry=\fR\fIn\fR\fR
.ad
.sp .6
.RS 4n
The number of times to retry the \fBmount\fR operation. The default for the \fBmount\fR command is \fB10000\fR.
.sp
The default for the automounter is \fB0\fR, in other words, do not retry. You might find it useful to increase this value on heavily loaded servers, where automounter traffic is dropped, causing unnecessary server not responding errors.
.RE

.sp
.ne 2
.mk
.na
\fB\fBrsize=\fR\fIn\fR\fR
.ad
.sp .6
.RS 4n
Set the read buffer size to a maximum of \fIn\fR bytes. The default value is \fB1048576\fR when using connection-orientated transports with Version 3 or Version 4 of the \fBNFS\fR protocol, and \fB32768\fR when using connection-less transports. The default can be negotiated down if the server prefers a smaller transfer size. "\fBRead\fR" operations may not necessarily use the maximum buffer size. When using Version 2, the default value is \fB32768\fR for all transports.
.RE

.sp
.ne 2
.mk
.na
\fB\fBsec=\fR\fImode\fR\fR
.ad
.sp .6
.RS 4n
Set the security \fImode\fR for \fBNFS\fR transactions. If \fBsec=\fR is not specified, then the default action is to use \fBAUTH_SYS\fR over \fBNFS\fR Version 2 mounts, use a user-configured default \fBauth\fR over NFS version 3 mounts, or to negotiate a mode over Version 4 mounts.
.sp
The preferred mode for NFS Version 3 mounts is the default mode specified in \fB/etc/nfssec.conf\fR (see \fBnfssec.conf\fR(4)) on the client. If there is no default configured in this file or if the server does not export using the client's default mode, then the client picks the first mode that it supports in the array of modes returned by the server. These alternatives are limited to the security flavors listed in \fB/etc/nfssec.conf\fR.
.sp
NFS Version 4 mounts negotiate a security mode when the server returns an array of security modes. The client attempts the mount with each security mode, in order, until one is successful.
.sp
Only one mode can be specified with the \fBsec=\fR option. See \fBnfssec\fR(5) for the available \fImode\fR options.
.RE

.sp
.ne 2
.mk
.na
\fB\fBsecure\fR\fR
.ad
.sp .6
.RS 4n
This option has been deprecated in favor of the \fBsec=\fR\fIdh\fR option.
.RE

.sp
.ne 2
.mk
.na
\fB\fBtimeo=\fR\fIn\fR\fR
.ad
.sp .6
.RS 4n
Set the \fBNFS\fR timeout to \fIn\fR tenths of a second. The default value is \fB11\fR tenths of a second for connectionless transports, and \fB600\fR tenths of a second for connection-oriented transports. This value is ignored for connectionless transports. Such transports might implement their own timeouts, which are outside the control of NFS.
.RE

.sp
.ne 2
.mk
.na
\fB\fBvers=\fR\fINFS version number\fR\fR
.ad
.sp .6
.RS 4n
By default, the version of \fBNFS\fR protocol used between the client and the server is the highest one available on both systems. The default maximum for the client is Version 4. This can be changed by setting \fBclient_versmax\fR to a valid version number (\fB2\fR, \fB3\fR, or \fB4\fR). Use the \fBsharectl\fR(1M) command to manipulate the \fBclient_versmax\fR property. If the \fBNFS\fR server does not support the client's default maximum, the next lowest version attempted until a matching version is found.
.RE

.sp
.ne 2
.mk
.na
\fB\fBwsize=\fR\fIn\fR\fR
.ad
.sp .6
.RS 4n
Set the write buffer size to a maximum of \fIn\fR bytes. The default value is \fB1048576\fR when using connection-orientated transports with Version 3 or Version 4 of the \fBNFS\fR protocol, and \fB32768\fR when using connection-less transports. The default can be negotiated down if the server prefers a smaller transfer size. "\fBWrite\fR" operations may not necessarily use the maximum buffer size. When using Version 2, the default value is \fB32768\fR for all transports.
.RE

.sp
.ne 2
.mk
.na
\fB\fBxattr\fR | \fBnoxattr\fR\fR
.ad
.sp .6
.RS 4n
Allow or disallow the creation and manipulation of extended attributes. The default is \fBxattr\fR. See \fBfsattr\fR(5) for a description of extended attributes.
.RE

.RE

.sp
.ne 2
.mk
.na
\fB\fB-O\fR\fR
.ad
.sp .6
.RS 4n
Overlay mount. Allow the file system to be mounted over an existing mount point, making the underlying file system inaccessible. If a mount is attempted on a pre-existing mount point without setting this flag, the mount fails, producing the error "device busy."
.RE

.SH NFS FILE SYSTEMS
.sp
.ne 2
.mk
.na
\fBBackground versus Foreground\fR
.ad
.sp .6
.RS 4n
File systems mounted with the \fBbg\fR option indicate that \fBmount\fR is to retry in the background if the server's mount daemon (\fBmountd\fR(1M)) does not respond. \fBmount\fR retries the request up to the count specified in the \fBretry=\fR\fIn\fR option. (Note that the default value for \fBretry\fR differs between \fBmount\fR and \fBautomount\fR. See the description of \fBretry\fR, above.) Once the file system is mounted, each \fBNFS\fR request made in the kernel waits \fBtimeo=\fR\fIn\fR tenths of a second for a response. If no response arrives, the time-out is multiplied by \fB2\fR and the request is retransmitted. When the number of retransmissions has reached the number specified in the \fBretrans=\fR\fIn\fR option, a file system mounted with the \fBsoft\fR option returns an error on the request; one mounted with the \fBhard\fR option prints a warning message and continues to retry the request.
.RE

.sp
.ne 2
.mk
.na
\fBHard versus Soft\fR
.ad
.sp .6
.RS 4n
File systems that are mounted read-write or that contain executable files should always be mounted with the \fBhard\fR option. Applications using \fBsoft\fR mounted file systems can incur unexpected \fBI/O\fR errors, file corruption, and unexpected program core dumps. The soft option is not recommended.
.RE

.sp
.ne 2
.mk
.na
\fBAuthenticated requests\fR
.ad
.sp .6
.RS 4n
The server can require authenticated \fBNFS\fR requests from the client. \fBsec=\fR\fIdh\fR authentication might be required. See \fBnfssec\fR(5).
.RE

.sp
.ne 2
.mk
.na
\fBURLs and the public option\fR
.ad
.sp .6
.RS 4n
If the \fBpublic\fR option is specified, or if the \fIresource\fR includes and \fBNFS\fR \fBURL\fR, \fBmount\fR attempts to connect to the server using the public file handle lookup protocol. See \fIWebNFS Client Specification\fR, RFC 2054. If the server supports the public file handle, the attempt is successful; \fBmount\fR does not need to contact the server's \fBrpcbind\fR(1M) and the \fBmountd\fR(1M) daemons to get the port number of the \fBmount\fR server and the initial file handle of \fIpathname\fR, respectively. If the \fBNFS\fR client and server are separated by a firewall that allows all outbound connections through specific ports, such as \fBNFS_PORT\fR, then this enables \fBNFS\fR operations through the firewall. The public option and the \fBNFS\fR \fBURL\fR can be specified independently or together. They interact as specified in the following matrix:
.sp
.in +2
.nf
                   Resource Style

                    \fIhost\fR:\fIpathname\fR              NFS URL

public option      Force public file          Force public file
                    handle and fail            handle and fail
                    mount if not supported.    mount if not supported.

                    Use Native paths.          Use Canonical paths.

default            Use MOUNT protocol.        Try public file handle
                                               with Canonical paths.
                                               Fall back to MOUNT
                                               protocol if not 
                                               supported.
.fi
.in -2

A Native path is a path name that is interpreted according to conventions used on the native operating system of the \fBNFS\fR server. A Canonical path is a path name that is interpreted according to the \fBURL\fR rules. See \fIUniform Resource Locators (URL)\fR, RFC 1738. See "Examples," below, for uses of Native and Canonical paths.
.RE

.sp
.ne 2
.mk
.na
\fBReplicated file systems and failover\fR
.ad
.sp .6
.RS 4n
\fIresource\fR can list multiple read\(mionly file systems to be used to provide data. These file systems should contain equivalent directory structures and identical files. The file systems can be specified either with a comma\(miseparated list of \fIhost:/pathname\fR entries and/or \fBNFS\fR \fBURL\fR entries, or with a comma \(miseparated list of hosts, if all file system names are the same. If multiple file systems are named and the first server in the list is down, failover uses the next alternate server to access files. If the read\(mionly option is not chosen, replication is disabled. File access, for NFS Versions 2 and 3, is blocked on the original if NFS locks are active for that file.
.RE

.SS "File Attributes"
.sp
.LP
To improve \fBNFS\fR read performance, files and file attributes are cached. File modification times get updated whenever a write occurs. However, file access times can be temporarily out-of-date until the cache gets refreshed.
.sp
.LP
The attribute cache retains file attributes on the client. Attributes for a file are assigned a time to be flushed. If the file is modified before the flush time, then the flush time is extended by the time since the last modification (under the assumption that files that changed recently are likely to change soon). There is a minimum and maximum flush time extension for regular files and for directories. Setting \fBactimeo=\fR\fIn\fR sets flush time to \fIn\fR seconds for both regular files and directories.
.sp
.LP
Setting \fBactimeo=0\fR disables attribute caching on the client. This means that every reference to attributes is satisfied directly from the server though file data is still cached. While this guarantees that the client always has the latest file attributes from the server, it has an adverse effect on performance through additional latency, network load, and server load.
.sp
.LP
Setting the \fBnoac\fR option also disables attribute caching, but has the further effect of disabling client write caching. While this guarantees that data written by an application is written directly to a server, where it can be viewed immediately by other clients, it has a significant adverse effect on client write performance. Data written into memory-mapped file pages (\fBmmap\fR(2)) are not written directly to this server.
.SS "Specifying Values for Attribute Cache Duration Options"
.sp
.LP
The attribute cache duration options are \fBacdirmax\fR, \fBacdirmin\fR, \fBacregmax\fR, \fBacregmin\fR, and \fBactimeo\fR, as described under OPTIONS. A value specified for \fBactimeo\fR sets the values of all attribute cache duration options except for any of these options specified following \fBactimeo\fR on a \fBmount\fR command line. For example, consider the following command:
.sp
.in +2
.nf
example# mount -o acdirmax=10,actimeo=1000 server:/path /localpath 
.fi
.in -2

.sp
.LP
Because \fBactimeo\fR is the last duration option in the command line, its value (\fB1000\fR) becomes the setting for all of the duration options, including \fBacdirmax\fR. Now consider:
.sp
.in +2
.nf
example# mount -o actimeo=1000,acdirmax=10 server:/path /localpath
.fi
.in -2

.sp
.LP
Because the \fBacdirmax\fR option follows \fBactimeo\fR on the command line, it is assigned the value specified (\fB10\fR). The remaining duration options are set to the value of \fBactimeo\fR (\fB1000\fR).
.SH EXAMPLES
.LP
\fBExample 1 \fRMounting an \fBNFS\fR File System
.sp
.LP
To mount an \fBNFS\fR file system: 

.sp
.in +2
.nf
example# mount serv:/usr/src /usr/src
.fi
.in -2
.sp

.sp
.LP
This is an example of the use of a native path.

.LP
\fBExample 2 \fRMounting An \fBNFS\fR File System Read-Only With No suid Privileges
.sp
.LP
To mount an \fBNFS\fR file system read-only with no suid privileges:

.sp
.in +2
.nf
example# mount -r -o nosuid serv:/usr/src /usr/src
.fi
.in -2
.sp

.LP
\fBExample 3 \fRMounting An \fBNFS\fR File System Over Version 2, with the UDP Transport
.sp
.LP
To mount an \fBNFS\fR file system over Version 2, with the UDP transport:

.sp
.in +2
.nf
example# mount -o vers=2,proto=udp serv:/usr/src /usr/src
.fi
.in -2
.sp

.LP
\fBExample 4 \fRMounting an \fBNFS\fR File System Using An \fBNFS\fR \fBURL\fR
.sp
.LP
To mount an \fBNFS\fR file system using an \fBNFS\fR \fBURL\fR (a canonical path): 

.sp
.in +2
.nf
example# mount nfs://serv/usr/man /usr/man
.fi
.in -2
.sp

.LP
\fBExample 5 \fRMounting An \fBNFS\fR File System Forcing Use Of The Public File Handle
.sp
.LP
To mount an \fBNFS\fR file system and force the use of the public file handle and an \fBNFS\fR \fBURL\fR (a canonical path) that has a non 7-bit ASCII escape sequence:

.sp
.in +2
.nf
example# mount -o public nfs://serv/usr/%A0abc /mnt/test
.fi
.in -2
.sp

.LP
\fBExample 6 \fRMounting an \fBNFS\fR File System Using a Native Path
.sp
.LP
To mount an \fBNFS\fR file system using a native path (where the server uses colons (":") as the component separator) and the public file handle:

.sp
.in +2
.nf
example# mount -o public serv:C:doc:new /usr/doc
.fi
.in -2
.sp

.LP
\fBExample 7 \fRMounting a Replicated Set of \fBNFS\fR File Systems with the Same Pathnames
.sp
.LP
To mount a replicated set of \fBNFS\fR file systems with the same pathnames:

.sp
.in +2
.nf
example# mount serv\(mia,serv\(mib,serv\(mic:/usr/man /usr/man
.fi
.in -2
.sp

.LP
\fBExample 8 \fRMounting a Replicated Set of \fBNFS\fR File Systems with Different Pathnames
.sp
.LP
To mount a replicated set of \fBNFS\fR file systems with different pathnames:

.sp
.in +2
.nf
example# mount serv\(mix:/usr/man,serv\(miy:/var/man,nfs://serv-z/man /usr/man
.fi
.in -2
.sp

.SH FILES
.sp
.ne 2
.mk
.na
\fB\fB/etc/mnttab\fR\fR
.ad
.sp .6
.RS 4n
table of mounted file systems
.RE

.sp
.ne 2
.mk
.na
\fB\fB/etc/dfs/fstypes\fR\fR
.ad
.sp .6
.RS 4n
default distributed file system type
.RE

.sp
.ne 2
.mk
.na
\fB\fB/etc/vfstab\fR\fR
.ad
.sp .6
.RS 4n
table of automatically mounted resources
.RE

.SH ATTRIBUTES
.sp
.LP
See \fBattributes\fR(5) for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i) 
lw(2.75i) |lw(2.75i) 
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Availabilitysystem/file-system/nfs
.TE

.SH SEE ALSO
.sp
.LP
\fBlockd\fR(1M), \fBmountall\fR(1M), \fBmountd\fR(1M), \fBnfsd\fR(1M), \fBquota\fR(1M), \fBsharectl\fR(1M), \fBstatd\fR(1M), \fBmkdir\fR(2), \fBmmap\fR(2), \fBmount\fR(2), \fBopen\fR(2), \fBumount\fR(2), \fBmnttab\fR(4), \fBnfssec.conf\fR(4), \fBattributes\fR(5), \fBfsattr\fR(5), \fBnfssec\fR(5), \fBstandards\fR(5), \fBinet\fR(7P), \fBinet6\fR(7P), \fBlofs\fR(7FS)
.sp
.LP
Callaghan, Brent, \fIWebNFS Client Specification\fR, RFC 2054, October 1996.
.sp
.LP
Callaghan, Brent, \fINFS URL Scheme\fR, RFC 2224, October 1997.
.sp
.LP
Berners-Lee, Masinter & McCahill , \fIUniform Resource Locators (URL)\fR, RFC 1738, December 1994.
.SH NOTES
.sp
.LP
An \fBNFS\fR server should not attempt to mount its own file systems. See \fBlofs\fR(7FS).
.sp
.LP
If the directory on which a file system is to be mounted is a symbolic link, the file system is mounted on \fBthe directory to which the symbolic link refers,\fR rather than being mounted on top of the symbolic link itself.
.sp
.LP
SunOS 4.x used the \fBbiod\fR maintenance procedure to perform parallel read-ahead and write-behind on \fBNFS\fR clients. SunOS 5.x made \fBbiod\fR obsolete with multi-threaded processing, which transparently performs parallel read-ahead and write-behind.
.sp
.LP
Since the root \fB(\fR/\fB)\fR file system is mounted read-only by the kernel during the boot process, only the \fBremount\fR option (and options that can be used in conjunction with \fBremount\fR) affect the root (\fB/\fR) entry in the \fB/etc/vfstab\fR file.
