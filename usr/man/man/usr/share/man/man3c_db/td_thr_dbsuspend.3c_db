'\" te
.\" Copyright (c) 1998 Sun Microsystems, Inc.  All Rights Reserved
.TH td_thr_dbsuspend 3C_DB "20 Oct 1998" "SunOS 5.11" "Threads Debugging Library Functions"
.SH NAME
td_thr_dbsuspend, td_thr_dbresume \- suspend and resume threads in libc_db
.SH SYNOPSIS
.LP
.nf
cc [ \fIflag\fR... ] \fIfile\fR... -lc_db [ \fIlibrary\fR... ]
#include <proc_service.h>
#include <thread_db.h>

\fBtd_err_e\fR \fBtd_thr_dbsuspend\fR(\fBconst td_thrhandle_t *\fR\fIth_p\fR);
.fi

.LP
.nf
\fBtd_err_e\fR \fBtd_thr_dbresume\fR(\fBconst td_thrhandle_t *\fR\fIth_p\fR);
.fi

.SH DESCRIPTION
.sp
.LP
These operations do nothing other than call \fBps_lstop\fR(3PROC) and \fBps_lcontinue\fR(3PROC), respectively, on the lightweight process (LWP) identified by the thread handle, \fIth_p\fR. Since \fBps_lstop()\fR and \fBps_lcontinue()\fR must be provided by the caller's application (see \fBproc_service\fR(3PROC)), and the application (a debugger-like entity) has full control over the stopped state of the process and all of its LWPs, \fBtd_thr_dbsuspend()\fR and \fBtd_thr_dbresume()\fR are unnecessary interfaces. They exist only to maintain interface compatibility with the past.
.SH RETURN VALUES
.sp
.ne 2
.mk
.na
\fB\fBTD_OK\fR \fR
.ad
.RS 13n
.rt  
The call completed successfully.
.RE

.sp
.ne 2
.mk
.na
\fB\fBTD_BADTH\fR \fR
.ad
.RS 13n
.rt  
An invalid thread handle was passed in.
.RE

.sp
.ne 2
.mk
.na
\fB\fBTD_DBERR\fR \fR
.ad
.RS 13n
.rt  
A call to \fBps_lstop()\fR or \fBps_lcontinue()\fR failed.
.RE

.sp
.ne 2
.mk
.na
\fB\fBTD_ERR\fR \fR
.ad
.RS 13n
.rt  
A \fBlibc_db\fR internal error occurred.
.RE

.SH ATTRIBUTES
.sp
.LP
See \fBattributes\fR(5) for description of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i) 
lw(2.75i) |lw(2.75i) 
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
MT-LevelSafe
.TE

.SH SEE ALSO
.sp
.LP
\fBlibc_db\fR(3LIB), \fBattributes\fR(5)
