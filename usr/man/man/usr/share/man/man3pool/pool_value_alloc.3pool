'\" te
.\" Copyright (c) 2003, Sun Microsystems, Inc. All Rights Reserved.
.TH pool_value_alloc 3POOL "23 Sep 2003" "SunOS 5.11" "Pool Configuration Manipulation Library Functions"
.SH NAME
pool_value_alloc, pool_value_free, pool_value_get_bool, pool_value_get_double, pool_value_get_int64, pool_value_get_name, pool_value_get_string, pool_value_get_type, pool_value_get_uint64, pool_value_set_bool, pool_value_set_double, pool_value_set_int64, pool_value_set_name, pool_value_set_string, pool_value_set_uint64 \- resource pool property value manipulation functions
.SH SYNOPSIS
.LP
.nf
cc [ \fIflag\fR\&.\|.\|. ] \fIfile\fR\&.\|.\|. \fB-lpool\fR [ \fIlibrary\fR\&.\|.\|. ] 
#include <pool.h>

\fBpool_value_t *\fR\fBpool_value_alloc\fR(\fBvoid\fR);
.fi

.LP
.nf
\fBvoid\fR \fBpool_value_free\fR(\fBpool_value_t *\fR\fIvalue\fR);
.fi

.LP
.nf
\fBpool_value_class_t\fR \fBpool_value_get_type\fR(
     \fBconst pool_value_t *\fR\fIvalue\fR);
.fi

.LP
.nf
\fBint\fR \fBpool_value_get_bool\fR(\fBconst pool_value_t *\fR\fIvalue\fR,
     \fBuchar_t *\fR\fIbool\fR);
.fi

.LP
.nf
\fBint\fR \fBpool_value_get_double\fR(\fBconst pool_value_t *\fR\fIvalue\fR,
     \fBdouble *\fR\fId\fR);
.fi

.LP
.nf
\fBint\fR \fBpool_value_get_int64\fR(\fBconst pool_value_t *\fR\fIvalue\fR,
     \fBint64_t *\fR\fIi64\fR);
.fi

.LP
.nf
\fBint\fR \fBpool_value_get_string\fR(\fBconst pool_value_t *\fR\fIvalue\fR,
     \fBconst char **\fR\fIstrp\fR);
.fi

.LP
.nf
\fBint\fR \fBpool_value_get_uint64\fR(\fBconst pool_value_t *\fR\fIvalue\fR,
     \fBuint64_t *\fR\fIui64\fR);
.fi

.LP
.nf
\fBvoid\fR \fBpool_value_set_bool\fR(\fBconst pool_value_t *\fR\fIvalue\fR,
     \fBuchar_t\fR \fIbool\fR);
.fi

.LP
.nf
\fBvoid\fR \fBpool_value_set_double\fR(\fBconst pool_value_t *\fR\fIvalue\fR,
     \fBdouble\fR \fId\fR);
.fi

.LP
.nf
\fBvoid\fR \fBpool_value_set_int64\fR(\fBconst pool_value_t *\fR\fIvalue\fR,
     \fBint64_t\fR \fIi64\fR);
.fi

.LP
.nf
\fBint\fR \fBpool_value_set_string\fR(\fBconst pool_value_t *\fR\fIvalue\fR,
     \fBconst char *\fR\fIstrp\fR);
.fi

.LP
.nf
\fBvoid\fR \fBpool_value_set_uint64\fR(\fBconst pool_value_t *\fR\fIvalue\fR,
     \fBuint64_t\fR \fIui64\fR);
.fi

.LP
.nf
\fBconst char *\fR\fBpool_value_get_name\fR(\fBconst pool_value_t *\fR\fIvalue\fR);
.fi

.LP
.nf
\fBint\fR \fBpool_value_set_name\fR(\fBconst pool_value_t *\fR\fIvalue\fR,
     \fBconst char *\fR\fIname\fR);
.fi

.SH DESCRIPTION
.sp
.LP
A \fBpool_value_t\fR is an opaque type representing the typed value portion of a pool property. For a list of the types supported by a \fBpool_value_t\fR, see \fBpool_get_property\fR(3POOL).
.sp
.LP
The \fBpool_value_alloc()\fR function allocates and returns an opaque container for a pool property value. The \fBpool_value_free()\fR function must be called explicitly for allocated property values.
.sp
.LP
The \fBpool_value_get_bool()\fR, \fBpool_value_get_double()\fR, \fBpool_value_get_int64()\fR, \fBpool_value_get_string()\fR, and \fBpool_value_get_uint64()\fR functions retrieve the value contained in the \fBpool_value_t\fR pointed to by \fIvalue\fR to the location pointed to by the second argument. If the type of the value does not match that expected by the function, an error value is returned.  The string retrieved by \fBpool_value_get_string()\fR is freed by the library when the value is overwritten or \fBpool_value_free()\fR is called on the pool property value.
.sp
.LP
The \fBpool_value_get_type()\fR function returns the type of the data contained by a \fBpool_value_t\fR. If the value is unused then a type of \fBPOC_INVAL\fR is returned.
.sp
.LP
The \fBpool_value_set_bool()\fR, \fBpool_value_set_double()\fR, \fBpool_value_set_int64()\fR, \fBpool_value_set_string()\fR, and \fBpool_value_set_uint64()\fR functions set the value and type of the property value to the provided values. The \fBpool_value_set_string()\fR function copies the string passed in and returns -1 if the memory allocation fails.
.sp
.LP
Property values can optionally have names. These names are used to describe properties as name=value pairs in the various query functions (see \fBpool_query_resources\fR(3POOL)).  A copy of the string passed to \fBpool_value_set_name()\fR is made by the library, and the value returned by \fBpool_value_get_name()\fR is freed when the \fBpool_value_t\fR is deallocated or overwritten.
.SH RETURN VALUES
.sp
.LP
Upon successful completion, \fBpool_value_alloc()\fR returns a pool property value with type initialized to \fBPVC_INVAL\fR. Otherwise, \fINULL\fR is returned and \fBpool_error()\fR returns the pool-specific error value.
.sp
.LP
Upon successful completion, \fBpool_value_get_type()\fR returns the type contained in the property value passed in as an argument. Otherwise, \fBPOC_INVAL\fR is returned and \fBpool_error()\fR returns the pool-specific error value.
.sp
.LP
Upon successful completion, \fBpool_value_get_bool()\fR, \fBpool_value_get_double()\fR, \fBpool_value_get_int64()\fR, \fBpool_value_get_string()\fR, and \fBpool_value_get_uint64()\fR return 0. Otherwise -1 is returned and \fBpool_error\fR(3POOL) returns the pool-specific error value.
.sp
.LP
Upon successful completion, \fBpool_value_set_string()\fR and \fBpool_value_set_name()\fR return 0. If the memory allocation failed, -1 is returned and \fBpool_error()\fR returns the pool-specific error value.
.SH ERRORS
.sp
.LP
The \fBpool_value_alloc()\fR function will fail if:
.sp
.ne 2
.mk
.na
\fB\fBPOE_SYSTEM\fR\fR
.ad
.RS 14n
.rt  
A system error has occurred. Check the system error code for more details.
.RE

.sp
.LP
The \fBpool_value_get_bool()\fR, \fBpool_value_get_double()\fR, \fBpool_value_get_int64()\fR, \fBpool_value_get_string()\fR, and \fBpool_value_get_uint64()\fR functions will fail if:
.sp
.ne 2
.mk
.na
\fB\fBPOE_BADPARAM\fR\fR
.ad
.RS 16n
.rt  
The supplied \fIvalue\fR does not match the type of the requested operation.
.RE

.sp
.LP
The \fBpool_value_set_string()\fR function will fail if:
.sp
.ne 2
.mk
.na
\fB\fBPOE_SYSTEM\fR\fR
.ad
.RS 14n
.rt  
A system error has occurred. Check the system error code for more details.
.RE

.sp
.LP
The \fBpool_value_set_name()\fR function will fail if:
.sp
.ne 2
.mk
.na
\fB\fBPOE_SYSTEM\fR\fR
.ad
.RS 14n
.rt  
A system error has occurred. Check the system error code for more details.
.RE

.SH ATTRIBUTES
.sp
.LP
See \fBattributes\fR(5) for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i) 
lw(2.75i) |lw(2.75i) 
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
CSIEnabled
_
Interface StabilityUncommitted
_
MT-LevelSafe
.TE

.SH SEE ALSO
.sp
.LP
\fBlibpool\fR(3LIB), \fBpool_error\fR(3POOL), \fBattributes\fR(5)
