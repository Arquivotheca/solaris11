'\" te
.\" Copyright (c) 2008, Sun Microsystems, Inc.  All Rights Reserved.
.\" Copyright (c) 2001, the Institute of Electrical and Electronics Engineers, Inc. and The Open Group. All Rights Reserved.
.\" Copyright 1991, 1992, 1994, The X/Open Company Ltd.
.\"  Sun Microsystems, Inc. gratefully acknowledges The Open Group for permission to reproduce portions of its copyrighted documentation. Original documentation from The Open Group can be obtained online at  http://www.opengroup.org/bookstore/.
.\" The Institute of Electrical and Electronics Engineers and The Open Group, have given us permission to reprint portions of their documentation. In the following statement, the phrase "this text" refers to portions of the system documentation. Portions of this text are reprinted and reproduced in electronic form in the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard for Information Technology -- Portable Operating System Interface (POSIX), The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the Institute of Electrical and Electronics Engineers, Inc and The Open Group. In the event of any discrepancy between these versions and the original IEEE and The Open Group Standard, the original IEEE and The Open Group Standard is the referee document. The original Standard can be obtained online at http://www.opengroup.org/unix/online.html.  This notice shall appear on any product containing this material. 
.TH pthread_key_delete 3C "23 Mar 2005" "SunOS 5.11" "Standard C Library Functions"
.SH NAME
pthread_key_delete \- delete thread-specific data key
.SH SYNOPSIS
.LP
.nf
cc -mt [ \fIflag\fR... ] \fIfile\fR... -lpthread [ \fIlibrary\fR... ]
#include <pthread.h>

\fBint\fR \fBpthread_key_delete\fR(\fBpthread_key_t\fR \fIkey\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The \fBpthread_key_delete()\fR function deletes a thread-specific data key previously returned by \fBpthread_key_create()\fR. The thread-specific data values associated with \fIkey\fR need not be  \fINULL\fR at the time \fBpthread_key_delete()\fR is called. It is the responsibility of the application to free any application storage or perform any cleanup actions for data structures related to the deleted key or associated thread-specific data in any threads; this cleanup can be done either before or after \fBpthread_key_delete()\fR is called. Any attempt to use \fIkey\fR following the call to \fBpthread_key_delete()\fR results in undefined behaviour.
.sp
.LP
The \fBpthread_key_delete()\fR function is callable from within destructor functions. No destructor functions will be invoked by \fBpthread_key_delete()\fR. Any destructor function that may have been associated with \fIkey\fR will no longer be called upon thread exit.
.SH RETURN VALUES
.sp
.LP
If successful, the \fBpthread_key_delete()\fR function returns  \fB0\fR. Otherwise, an error number is returned to indicate the error.
.SH ERRORS
.sp
.LP
The \fBpthread_key_delete()\fR function may fail if:
.sp
.ne 2
.mk
.na
\fB\fBEINVAL\fR\fR
.ad
.RS 10n
.rt  
The \fIkey\fR value is invalid.
.RE

.sp
.LP
The \fBpthread_key_delete()\fR function will not return an error code of \fBEINTR\fR.
.SH ATTRIBUTES
.sp
.LP
See \fBattributes\fR(5) for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i) 
lw(2.75i) |lw(2.75i) 
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelMT-Safe
_
StandardSee \fBstandards\fR(5).
.TE

.SH SEE ALSO
.sp
.LP
\fBpthread_key_create\fR(3C), \fBattributes\fR(5), \fBstandards\fR(5) 
