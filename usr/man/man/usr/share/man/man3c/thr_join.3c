'\" te
.\" Copyright (c) 2000 Sun Microsystems, Inc.  All Rights Reserved.
.\" Portions Copyright (c) 2001, the Institute of Electrical and Electronics Engineers, Inc. and The Open Group. All Rights Reserved.
.\" Portions Copyright (c) 1995 IEEE  All Rights Reserved
.\"  Sun Microsystems, Inc. gratefully acknowledges The Open Group for permission to reproduce portions of its copyrighted documentation. Original documentation from The Open Group can be obtained online at  http://www.opengroup.org/bookstore/.
.\" The Institute of Electrical and Electronics Engineers and The Open Group, have given us permission to reprint portions of their documentation. In the following statement, the phrase "this text" refers to portions of the system documentation. Portions of this text are reprinted and reproduced in electronic form in the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard for Information Technology -- Portable Operating System Interface (POSIX), The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the Institute of Electrical and Electronics Engineers, Inc and The Open Group. In the event of any discrepancy between these versions and the original IEEE and The Open Group Standard, the original IEEE and The Open Group Standard is the referee document. The original Standard can be obtained online at http://www.opengroup.org/unix/online.html.  This notice shall appear on any product containing this material. 
.TH thr_join 3C "27 Mar 2000" "SunOS 5.11" "Standard C Library Functions"
.SH NAME
thr_join \- wait for thread termination
.SH SYNOPSIS
.LP
.nf
cc -mt [ \fIflag\fR... ] \fIfile\fR...[ \fIlibrary\fR... ]
#include <thread.h> 

\fBint\fR \fBthr_join\fR(\fBthread_t\fR \fIthread\fR, \fBthread_t *\fR\fIdeparted\fR, \fBvoid **\fR\fIstatus\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The \fBthr_join()\fR function suspends processing of the calling thread until the target \fIthread\fR completes. The \fIthread\fR argument must be a member of the current process and cannot be a detached thread. See \fBthr_create\fR(3C). 
.sp
.LP
If two or more threads wait for the same thread to complete, all will suspend processing until the thread has terminated, and then one thread will return successfully and the others will return with an error of \fBESRCH\fR. The \fBthr_join()\fR function will not block processing of the calling thread if the target \fIthread\fR has already terminated.
.sp
.LP
If a \fBthr_join()\fR call returns successfully with a non-null \fIstatus\fR argument, the value passed to \fBthr_exit\fR(3C) by the terminating thread will be placed in the location referenced by \fIstatus\fR. 
.sp
.LP
If the target \fIthread\fR \fBID\fR is  \fB0\fR, \fBthr_join()\fR finds and returns the status of a terminated undetached thread in the process. If no such thread exists, it suspends processing of the calling thread until a thread for which no other thread is waiting enters that state, at which time it returns successfully, or until all other threads in the process are either daemon threads or threads waiting in \fBthr_join()\fR, in which case it returns \fBEDEADLK\fR. See \fBNOTES\fR.
.sp
.LP
If \fIdeparted\fR is not \fINULL\fR, it points to a location that is set to the ID of the terminated thread if \fBthr_join()\fR returns successfully.
.SH RETURN VALUES
.sp
.LP
If successful, \fBthr_join()\fR returns \fB0\fR. Otherwise, an error number is returned to indicate the error.
.SH ERRORS
.sp
.ne 2
.mk
.na
\fB\fBEDEADLK\fR \fR
.ad
.RS 12n
.rt  
A joining deadlock would occur, such as when a thread attempts to wait for itself, or the calling thread is waiting for any thread to exit and only daemon threads or waiting threads exist in the process. 
.RE

.sp
.ne 2
.mk
.na
\fB\fBESRCH\fR \fR
.ad
.RS 12n
.rt  
No undetached thread could be found corresponding to the given thread ID.
.RE

.SH ATTRIBUTES
.sp
.LP
See \fBattributes\fR(5) for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i) 
lw(2.75i) |lw(2.75i) 
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
\fBthr_create\fR(3C), \fBthr_exit\fR(3C), \fBwait\fR(3C), \fBattributes\fR(5), \fBstandards\fR(5) 
.SH NOTES
.sp
.LP
Using thr_join(3C) in the following syntax, 
.sp
.in +2
.nf
while (thr_join(0, NULL, NULL) == 0); 
.fi
.in -2

.sp
.LP
will wait for the termination of all non-daemon threads, excluding threads that are themselves waiting in \fBthr_join()\fR.
