'\" te
.\"  Copyright (c) 1992, X/Open Company Limited All Rights Reserved  Portions Copyright (c) 2002, Sun Microsystems, Inc.  All Rights Reserved
.\"  Sun Microsystems, Inc. gratefully acknowledges The Open Group for permission to reproduce portions of its copyrighted documentation. Original documentation from The Open Group can be obtained online at  http://www.opengroup.org/bookstore/.
.\" The Institute of Electrical and Electronics Engineers and The Open Group, have given us permission to reprint portions of their documentation. In the following statement, the phrase "this text" refers to portions of the system documentation. Portions of this text are reprinted and reproduced in electronic form in the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard for Information Technology -- Portable Operating System Interface (POSIX), The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the Institute of Electrical and Electronics Engineers, Inc and The Open Group. In the event of any discrepancy between these versions and the original IEEE and The Open Group Standard, the original IEEE and The Open Group Standard is the referee document. The original Standard can be obtained online at http://www.opengroup.org/unix/online.html.  This notice shall appear on any product containing this material. 
.TH setkey 3C "14 Aug 2002" "SunOS 5.11" "Standard C Library Functions"
.SH NAME
setkey \- set encoding key
.SH SYNOPSIS
.LP
.nf
#include <stdlib.h>

\fBvoid\fR \fBsetkey\fR(\fBconst char *\fR\fIkey\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The \fBsetkey()\fR function provides (rather primitive) access to the hashing algorithm employed by the \fBcrypt\fR(3C) function. The argument of \fBsetkey()\fR is an array of length 64 bytes containing only the bytes with numerical value of 0 and 1. If this string is divided into groups of 8, the low-order bit in each group is ignored; this gives a 56-bit key which is used by the algorithm. This is the key that will be used with the algorithm to encode a string \fIblock\fR passed to \fBencrypt\fR(3C).
.SH RETURN VALUES
.sp
.LP
No values are returned.
.SH ERRORS
.sp
.LP
The \fBsetkey()\fR function will fail if:
.sp
.ne 2
.mk
.na
\fB\fBENOSYS\fR\fR
.ad
.RS 10n
.rt  
The functionality is not supported on this implementation.
.RE

.SH USAGE
.sp
.LP
In some environments, decoding may not be implemented.  This is related to U.S. Government restrictions on encryption and decryption routines: the \fBDES\fR decryption algorithm cannot be exported outside the U.S.A. Historical practice has been to ship a different version of the encryption library without the decryption feature in the routines supplied. Thus the exported version of \fBencrypt()\fR does encoding but not decoding.
.sp
.LP
Because \fBsetkey()\fR does not return a value, applications wishing to check for errors should set \fBerrno\fR to 0, call \fBsetkey()\fR, then test \fBerrno\fR and, if it is non-zero, assume an error has occurred.
.SH ATTRIBUTES
.sp
.LP
See \fBattributes\fR(5) for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i) 
lw(2.75i) |lw(2.75i) 
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelSafe
_
StandardSee \fBstandards\fR(5).
.TE

.SH SEE ALSO
.sp
.LP
\fBcrypt\fR(3C), \fBencrypt\fR(3C), \fBattributes\fR(5), \fBstandards\fR(5)
