'\" te
.\"  Copyright 1989 AT&T  Copyright (c) 1992, X/Open Company Limited  All Rights Reserved  Portions Copyright (c) 2003, Sun Microsystems, Inc.  All Rights Reserved.
.\"  Sun Microsystems, Inc. gratefully acknowledges The Open Group for permission to reproduce portions of its copyrighted documentation. Original documentation from The Open Group can be obtained online at  http://www.opengroup.org/bookstore/.
.\" The Institute of Electrical and Electronics Engineers and The Open Group, have given us permission to reprint portions of their documentation. In the following statement, the phrase "this text" refers to portions of the system documentation. Portions of this text are reprinted and reproduced in electronic form in the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard for Information Technology -- Portable Operating System Interface (POSIX), The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the Institute of Electrical and Electronics Engineers, Inc and The Open Group. In the event of any discrepancy between these versions and the original IEEE and The Open Group Standard, the original IEEE and The Open Group Standard is the referee document. The original Standard can be obtained online at http://www.opengroup.org/unix/online.html.  This notice shall appear on any product containing this material. 
.TH getpass 3C "2 Sep 2003" "SunOS 5.11" "Standard C Library Functions"
.SH NAME
getpass, getpassphrase \- read a string of characters without echo
.SH SYNOPSIS
.LP
.nf
#include <stdlib.h>

\fBchar *\fR\fBgetpass\fR(\fBconst char *\fR\fIprompt\fR);
.fi

.LP
.nf
\fBchar *\fR\fBgetpassphrase\fR(\fBconst char *\fR\fIprompt\fR);
.fi

.SS "XPG4, SUS, SUSv2"
.LP
.nf
#include <unistd.h>

\fBchar *\fR\fBgetpass\fR(\fBconst char *\fR\fIprompt\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The \fBgetpass()\fR function opens the process's controlling terminal, writes to that device the null-terminated string \fIprompt\fR, disables echoing, reads a string of characters up to the next newline character or EOF, restores the terminal state and closes the terminal.
.sp
.LP
The \fBgetpassphrase()\fR function is identical to \fBgetpass()\fR, except that it reads and returns a string of up to 257 characters in length.
.SH RETURN VALUES
.sp
.LP
Upon successful completion, \fBgetpass()\fR returns a pointer to a null-terminated string of at most 9 bytes that were read from the terminal device. If an error is encountered, the terminal state is restored and a null pointer is returned.
.SH ERRORS
.sp
.LP
The \fBgetpass()\fR and  \fBgetpassphrase()\fR functions may fail if:
.sp
.ne 2
.mk
.na
\fB\fBEINTR\fR\fR
.ad
.RS 10n
.rt  
The function was interrupted by a signal.
.RE

.sp
.ne 2
.mk
.na
\fB\fBEIO\fR\fR
.ad
.RS 10n
.rt  
The process is a member of a background process attempting to read from its controlling terminal, the process is ignoring or blocking the \fBSIGTTIN\fR signal or the process group is orphaned.
.RE

.sp
.ne 2
.mk
.na
\fB\fBEMFILE\fR\fR
.ad
.RS 10n
.rt  
\fBOPEN_MAX\fR file descriptors are currently open in the calling process.
.RE

.sp
.ne 2
.mk
.na
\fB\fBENFILE\fR\fR
.ad
.RS 10n
.rt  
The maximum allowable number of files is currently open in the system.
.RE

.sp
.ne 2
.mk
.na
\fB\fBENXIO\fR\fR
.ad
.RS 10n
.rt  
The process does not have a controlling terminal.
.RE

.SH USAGE
.sp
.LP
The return value points to static data whose content may be overwritten by each call.
.SH ATTRIBUTES
.sp
.LP
See \fBattributes\fR(5) for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i) 
lw(2.75i) |lw(2.75i) 
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface Stability\fBgetpass()\fR is Standard.
_
MT-LevelUnsafe
.TE

.SH SEE ALSO
.sp
.LP
\fBattributes\fR(5), \fBstandards\fR(5)
