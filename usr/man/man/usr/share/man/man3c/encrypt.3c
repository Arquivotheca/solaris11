'\" te
.\"  Copyright (c) 2001, Sun Microsystems, Inc. All Rights Reserved  Portions Copyright (c) 1992, X/Open Company Limited  All Rights Reserved
.\"  Sun Microsystems, Inc. gratefully acknowledges The Open Group for permission to reproduce portions of its copyrighted documentation. Original documentation from The Open Group can be obtained online at  http://www.opengroup.org/bookstore/.
.\" The Institute of Electrical and Electronics Engineers and The Open Group, have given us permission to reprint portions of their documentation. In the following statement, the phrase "this text" refers to portions of the system documentation. Portions of this text are reprinted and reproduced in electronic form in the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard for Information Technology -- Portable Operating System Interface (POSIX), The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the Institute of Electrical and Electronics Engineers, Inc and The Open Group. In the event of any discrepancy between these versions and the original IEEE and The Open Group Standard, the original IEEE and The Open Group Standard is the referee document. The original Standard can be obtained online at http://www.opengroup.org/unix/online.html.  This notice shall appear on any product containing this material. 
.TH encrypt 3C "2 May 2001" "SunOS 5.11" "Standard C Library Functions"
.SH NAME
encrypt \- encoding function
.SH SYNOPSIS
.LP
.nf
#include <crypt.h>

\fBvoid\fR \fBencrypt\fR(\fBchar\fR \fIblock[64]\fR, \fBint\fR \fIedflag\fR);
.fi

.SS "Standard conforming"
.LP
.nf
#include <unistd.h>

\fBvoid\fR \fBencrypt\fR(\fBchar\fR \fIblock[64]\fR, \fBint\fR \fIedflag\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The \fBencrypt()\fR function provides (rather primitive) access to the hashing algorithm employed by the \fBcrypt\fR(3C) function. The key generated by \fBsetkey\fR(3C) is used to encrypt the string \fIblock\fR with \fBencrypt()\fR.
.sp
.LP
The \fIblock\fR argument to \fBencrypt()\fR is an array of length 64 bytes containing only the bytes with numerical value of 0 and 1. The array is modified in place to a similar array using the key set by \fBsetkey\fR(3C). If \fIedflag\fR is 0, the argument is encoded.  If \fIedflag\fR is 1, the argument may be decoded (see the \fBUSAGE\fR section below); if the argument is not decoded, \fBerrno\fR will be set to \fBENOSYS\fR.
.SH RETURN VALUES
.sp
.LP
The \fBencrypt()\fR function returns no value.
.SH ERRORS
.sp
.LP
The \fBencrypt()\fR function will fail if:
.sp
.ne 2
.mk
.na
\fB\fBENOSYS\fR\fR
.ad
.RS 10n
.rt  
The functionality is not supported on this implementation.
.RE

.SH USAGE
.sp
.LP
In some environments, decoding may not be implemented.  This is related to U.S. Government restrictions on encryption and decryption routines: the \fBDES\fR decryption algorithm cannot be exported outside the U.S.A. Historical practice has been to ship a different version of the encryption library without the decryption feature in the routines supplied. Thus the exported version of \fBencrypt()\fR does encoding but not decoding.
.sp
.LP
Because \fBencrypt()\fR does not return a value, applications wishing to check for errors should set \fBerrno\fR to 0, call \fBencrypt()\fR, then test \fBerrno\fR and, if it is non-zero, assume an error has occurred.
.SH ATTRIBUTES
.sp
.LP
See \fBattributes\fR(5) for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i) 
lw(2.75i) |lw(2.75i) 
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelSafe
_
StandardSee \fBstandards\fR(5).
.TE

.SH SEE ALSO
.sp
.LP
\fBcrypt\fR(3C), \fBsetkey\fR(3C), \fBattributes\fR(5)
