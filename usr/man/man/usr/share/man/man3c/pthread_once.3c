'\" te
.\" Copyright (c) 1995 IEEE. All Rights Reserved.
.\" Copyright (c) 2001, the Institute of Electrical and Electronics Engineers, Inc. and The Open Group. All Rights Reserved.
.\" Portions Copyright (c) 2005, Sun Microsystems, Inc.
.\"  Sun Microsystems, Inc. gratefully acknowledges The Open Group for permission to reproduce portions of its copyrighted documentation. Original documentation from The Open Group can be obtained online at  http://www.opengroup.org/bookstore/.
.\" The Institute of Electrical and Electronics Engineers and The Open Group, have given us permission to reprint portions of their documentation. In the following statement, the phrase "this text" refers to portions of the system documentation. Portions of this text are reprinted and reproduced in electronic form in the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard for Information Technology -- Portable Operating System Interface (POSIX), The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the Institute of Electrical and Electronics Engineers, Inc and The Open Group. In the event of any discrepancy between these versions and the original IEEE and The Open Group Standard, the original IEEE and The Open Group Standard is the referee document. The original Standard can be obtained online at http://www.opengroup.org/unix/online.html.  This notice shall appear on any product containing this material. 
.TH pthread_once 3C "23 Mar 2005" "SunOS 5.11" "Standard C Library Functions"
.SH NAME
pthread_once \- initialize dynamic package
.SH SYNOPSIS
.LP
.nf
cc -mt [ \fIflag\fR... ] \fIfile\fR... -lpthread [ \fIlibrary\fR... ]

#include <pthread.h> 
\fBpthread_once_t\fR \fIonce_control\fR = \fBPTHREAD_ONCE_INIT\fR;

\fBint\fR \fBpthread_once\fR(\fBpthread_once_t *\fR\fIonce_control\fR,
     \fBvoid (*\fR\fIinit_routine\fR)(\fBvoid\fR));
.fi

.SH DESCRIPTION
.sp
.LP
If any thread in a process with a \fIonce_control\fR parameter makes a call to \fBpthread_once()\fR, the first call will summon the \fBinit_routine()\fR, but subsequent calls will not. The \fIonce_control\fR parameter determines whether the associated initialization routine has been called. The \fBinit_routine()\fR is complete upon return of \fBpthread_once()\fR. 
.sp
.LP
\fBpthread_once()\fR is not a cancellation point; however, if the function \fBinit_routine()\fR is a cancellation point and is canceled, the effect on \fIonce_control\fR is the same as if \fBpthread_once()\fR had never been called.
.sp
.LP
The constant \fBPTHREAD_ONCE_INIT\fR is defined in the \fB<pthread.h>\fR header.
.sp
.LP
If \fIonce_control\fR has automatic storage duration or is not initialized by \fBPTHREAD_ONCE_INIT\fR, the behavior of \fBpthread_once()\fR is undefined.
.SH RETURN VALUES
.sp
.LP
Upon successful completion, \fBpthread_once()\fR returns \fB0\fR. Otherwise, an error number is returned to indicate the error.
.SH ERRORS
.sp
.ne 2
.mk
.na
\fB\fBEINVAL\fR \fR
.ad
.RS 11n
.rt  
\fIonce_control\fR or  \fIinit_routine\fR is \fINULL\fR. 
.RE

.SH ATTRIBUTES
.sp
.LP
See \fBattributes\fR(5) for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i) 
lw(2.75i) |lw(2.75i) 
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelMT-Safe
_
StandardSee \fBstandards\fR(5).
.TE

.SH SEE ALSO
.sp
.LP
\fBattributes\fR(5), \fBstandards\fR(5)
.SH NOTES
.sp
.LP
Solaris threads do not offer this functionality.
