'\" te
.\"  Copyright (c) 1992, X/Open Company Limited All Rights Reserved  Portions Copyright (c) 2002, Sun Microsystems, Inc.  All Rights Reserved
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for permission to reproduce portions of its copyrighted documentation. Original documentation from The Open Group can be obtained online at  http://www.opengroup.org/bookstore/.
.\" The Institute of Electrical and Electronics Engineers and The Open Group, have given us permission to reprint portions of their documentation. In the following statement, the phrase "this text" refers to portions of the system documentation. Portions of this text are reprinted and reproduced in electronic form in the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard for Information Technology -- Portable Operating System Interface (POSIX), The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the Institute of Electrical and Electronics Engineers, Inc and The Open Group. In the event of any discrepancy between these versions and the original IEEE and The Open Group Standard, the original IEEE and The Open Group Standard is the referee document. The original Standard can be obtained online at http://www.opengroup.org/unix/online.html.  This notice shall appear on any product containing this material.
.TH bsd_signal 3C "24 Jul 2002" "SunOS 5.11" "Standard C Library Functions"
.SH NAME
bsd_signal \- simplified signal facilities
.SH SYNOPSIS
.LP
.nf
#include <signal.h>

\fBvoid\fR (\fB*bsd_signal(int\fR \fIsig\fR, \fBvoid\fR (*\fIfunc\fR)(\fBint\fR)))(\fBint\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The \fBbsd_signal()\fR function provides a partially compatible interface for programs written to historical system interfaces (see \fBUSAGE\fR below).
.sp
.LP
The function call \fBbsd_signal\fR(\fIsig\fR, \fIfunc\fR) has an effect as if implemented as:
.sp
.in +2
.nf
void (*bsd_signal(int sig, void (*func)\|(int)))\|(int)
{
     struct sigaction act, oact;

     act.sa_handler = \fIfunc\fR;
     act.sa_flags = SA_RESTART;
     sigemptyset(&act.sa_mask);
     sigaddset(&act.sa_mask, \fIsig\fR);
     if (sigaction(\fIsig\fR, &act, &oact) == \(mi1)
          return(\fBSIG_ERR\fR);
     return(oact.sa_handler);
}
.fi
.in -2

.sp
.LP
The handler function should be declared:
.sp
.in +2
.nf
void handler(int \fIsig\fR);
.fi
.in -2

.sp
.LP
where \fIsig\fR is the signal number.  The behavior is undefined if \fIfunc\fR is a function that takes more than one argument, or an argument of a different type.
.SH RETURN VALUES
.sp
.LP
Upon successful completion, \fBbsd_signal()\fR returns the previous action for \fIsig\fR. Otherwise, \fBSIG_ERR\fR is returned and \fBerrno\fR is set to indicate the error.
.SH ERRORS
.sp
.LP
Refer to \fBsigaction\fR(2).
.SH USAGE
.sp
.LP
This function is a direct replacement for the \fBBSD\fR \fBsignal()\fR function for simple applications that are installing a single-argument signal handler function.  If a \fBBSD\fR signal handler function is being installed that expects more than one argument, the application has to be modified to use \fBsigaction\fR(2). The \fBbsd_signal()\fR function differs from \fBsignal()\fR in that the \fBSA_RESTART\fR flag is set and the \fBSA_RESETHAND\fR will be clear when \fBbsd_signal()\fR is used.  The state of these flags is not specified for \fBsignal()\fR.
.SH ATTRIBUTES
.sp
.LP
See \fBattributes\fR(5) for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
lw(2.75i) |lw(2.75i) 
lw(2.75i) |lw(2.75i) 
.
\fBATTRIBUTE TYPE\fR\fBATTRIBUTE VALUE\fR
_
Interface StabilityCommitted
_
StandardSee \fBstandards\fR(5).
.TE

.SH SEE ALSO
.sp
.LP
\fBsigaction\fR(2), \fBsigaddset\fR(3C), \fBsigemptyset\fR(3C), \fBattributes\fR(5), \fBstandards\fR(5)
