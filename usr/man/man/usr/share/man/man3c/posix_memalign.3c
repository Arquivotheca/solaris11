'\" te
.\" Copyright (c) 2001, the Institute of Electrical and Electronics Engineers, Inc. and The Open Group. All Rights Reserved.
.\" Portions Copyright (c) 2008, 2010, Oracle and/or its affiliates. All rights reserved.
.\"  Sun Microsystems, Inc. gratefully acknowledges The Open Group for permission to reproduce portions of its copyrighted documentation. Original documentation from The Open Group can be obtained online at  http://www.opengroup.org/bookstore/.
.\" The Institute of Electrical and Electronics Engineers and The Open Group, have given us permission to reprint portions of their documentation. In the following statement, the phrase "this text" refers to portions of the system documentation. Portions of this text are reprinted and reproduced in electronic form in the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard for Information Technology -- Portable Operating System Interface (POSIX), The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the Institute of Electrical and Electronics Engineers, Inc and The Open Group. In the event of any discrepancy between these versions and the original IEEE and The Open Group Standard, the original IEEE and The Open Group Standard is the referee document. The original Standard can be obtained online at http://www.opengroup.org/unix/online.html.  This notice shall appear on any product containing this material. 
.TH posix_memalign 3C "4 May 2010" "SunOS 5.11" "Standard C Library Functions"
.SH NAME
posix_memalign \- aligned memory allocation
.SH SYNOPSIS
.LP
.nf
#include <stdlib.h>

\fBint\fR \fBposix_memalign\fR(\fBvoid **\fR\fImemptr\fR, \fBsize_t\fR \fIalignment\fR, \fBsize_t\fR \fIsize\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The \fBposix_memalign()\fR function allocates size bytes aligned on a boundary specified by alignment, and returns a pointer to the allocated memory in \fImemptr\fR. The value of alignment must be a power of two multiple of \fBsizeof\fR(\fBvoid *\fR).
.sp
.LP
Upon successful completion, the value pointed to by \fImemptr\fR will be a multiple of alignment.
.sp
.LP
If the size of the space requested is 0, the value returned in \fImemptr\fR will be a null pointer.
.sp
.LP
The \fBfree\fR(3C) function will deallocate memory that has previously been allocated by \fBposix_memalign()\fR.
.SH RETURN VALUES
.sp
.LP
Upon successful completion, \fBposix_memalign()\fR returns zero. Otherwise, an error number is returned to indicate the error.
.SH ERRORS
.sp
.LP
The \fBposix_memalign()\fR function will fail if:
.sp
.ne 2
.mk
.na
\fB\fBEINVAL\fR\fR
.ad
.RS 10n
.rt  
The value of the alignment parameter is not a power of two multiple of \fBsizeof\fR(\fBvoid *\fR).
.RE

.sp
.ne 2
.mk
.na
\fB\fBENOMEM\fR\fR
.ad
.RS 10n
.rt  
There is insufficient memory available with the requested alignment.
.RE

.SH ATTRIBUTES
.sp
.LP
See \fBattributes\fR(5) for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i) 
lw(2.75i) |lw(2.75i) 
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelMT-Safe
_
StandardSee \fBstandards\fR(5).
.TE

.SH SEE ALSO
.sp
.LP
\fBfree\fR(3C), \fBmalloc\fR(3C), \fBmemalign\fR(3C), \fBattributes\fR(5), \fBstandards\fR(5)
