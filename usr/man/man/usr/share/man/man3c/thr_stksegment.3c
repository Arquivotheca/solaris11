'\" te
.\"  Copyright (c) 2000 Sun Microsystems, Inc. - All Rights Reserved.
.TH thr_stksegment 3C "15 Jun 2000" "SunOS 5.11" "Standard C Library Functions"
.SH NAME
thr_stksegment \- get thread stack address and size
.SH SYNOPSIS
.LP
.nf
cc -mt [ \fIflag\fR... ] \fIfile\fR...[ \fIlibrary\fR... ]
#include <thread.h>
#include <signal.h>

\fBint\fR \fBthr_stksegment\fR(\fBstack_t *\fR\fIss\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The \fBthr_stksegment()\fR function returns, in its \fBstack_t\fR argument, the address and size of the calling thread's stack.
.sp
.LP
The \fBstack_t\fR structure includes the following members:
.sp
.in +2
.nf
void   *ss_sp
size_t ss_size
int    ss_flags
.fi
.in -2

.sp
.LP
On successful return from \fBthr_stksegment()\fR, \fBss_sp\fR contains the high address of the caller's stack and \fBss_size\fR contains the size of the stack in bytes.  The \fBss_flags\fR member is always 0. Note that the meaning of \fBss_sp\fR is reversed from other uses of \fBstack_t\fR such as \fBsigaltstack\fR(2) where \fBss_sp\fR is the low address.
.sp
.LP
The stack information provided by \fBthr_stksegment()\fR is typically used by debuggers, garbage collectors, and similar applications. Most applications should not require such information.
.SH RETURN VALUES
.sp
.LP
The  \fBthr_stksegment()\fR function returns  \fB0\fR if the thread stack address and size were successfully retrieved.  Otherwise, it returns a non-zero error value.
.SH ERRORS
.sp
.LP
The  \fBthr_stksegment()\fR function will fail if:
.sp
.ne 2
.mk
.na
\fB\fBEAGAIN\fR \fR
.ad
.RS 11n
.rt  
The stack information for the thread is not available because the thread's initialization is not yet complete, or the thread is an internal thread.
.RE

.SH ATTRIBUTES
.sp
.LP
See \fBattributes\fR(5) for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i) 
lw(2.75i) |lw(2.75i) 
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
\fBsigaltstack\fR(2), \fBthr_create\fR(3C), \fBattributes\fR(5) 
