'\" te
.\" Copyright (c) 2008, 2011, Oracle and/or its affiliates. All rights reserved.
.\" Copyright 1989 AT&T
.\" Portions Copyright (c) 1992, X/Open Company Limited.  All Rights Reserved.
.\"  Sun Microsystems, Inc. gratefully acknowledges The Open Group for permission to reproduce portions of its copyrighted documentation. Original documentation from The Open Group can be obtained online at  http://www.opengroup.org/bookstore/.
.\" The Institute of Electrical and Electronics Engineers and The Open Group, have given us permission to reprint portions of their documentation. In the following statement, the phrase "this text" refers to portions of the system documentation. Portions of this text are reprinted and reproduced in electronic form in the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard for Information Technology -- Portable Operating System Interface (POSIX), The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the Institute of Electrical and Electronics Engineers, Inc and The Open Group. In the event of any discrepancy between these versions and the original IEEE and The Open Group Standard, the original IEEE and The Open Group Standard is the referee document. The original Standard can be obtained online at http://www.opengroup.org/unix/online.html.  This notice shall appear on any product containing this material. 
.TH timer_create 3C "5 Feb 2008" "SunOS 5.11" "Standard C Library Functions"
.SH NAME
timer_create \- create a timer
.SH SYNOPSIS
.LP
.nf
#include <signal.h>
#include <time.h>

\fBint\fR \fBtimer_create\fR(\fBclockid_t\fR \fIclock_id\fR,
     \fBstruct sigevent *restrict\fR \fIevp\fR, \fBtimer_t *restrict\fR \fItimerid\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The \fBtimer_create()\fR function creates a timer using the specified clock, \fIclock_id\fR, as the timing base. The \fBtimer_create()\fR function returns, in the location referenced by \fItimerid\fR, a timer \fBID\fR of type \fBtimer_t\fR used to identify the timer in timer requests. This timer \fBID\fR will be unique within the calling process until the timer is deleted. The particular clock, \fIclock_id\fR, is defined in <\fBtime.h\fR>. The timer whose \fBID\fR is returned will be in a disarmed state upon return from \fBtimer_create()\fR. 
.sp
.LP
The \fIevp\fR argument, if non-null, points to a \fBsigevent\fR structure. This structure, allocated by the application, defines the asynchronous notification that will occur when the timer expires (see \fBsignal.h\fR(3HEAD) for event notification details). If the \fIevp\fR argument is \fINULL\fR, the effect is as if the \fIevp\fR argument pointed to a \fBsigevent\fR structure with the \fBsigev_notify\fR member having the value \fBSIGEV_SIGNAL\fR, the \fBsigev_signo\fR having the value \fBSIGALARM\fR, and the \fBsigev_value\fR member having the value of the timer \fBID\fR.
.sp
.LP
The system defines a set of clocks that can be used as timing bases for per-process timers. The following values for \fIclock_id\fR are supported:
.sp
.ne 2
.mk
.na
\fB\fBCLOCK_REALTIME\fR\fR
.ad
.RS 18n
.rt  
wall clock
.RE

.sp
.ne 2
.mk
.na
\fB\fBCLOCK_VIRTUAL\fR\fR
.ad
.RS 18n
.rt  
user CPU usage clock
.RE

.sp
.ne 2
.mk
.na
\fB\fBCLOCK_PROF\fR\fR
.ad
.RS 18n
.rt  
user and system CPU usage clock
.RE

.sp
.ne 2
.mk
.na
\fB\fBCLOCK_HIGHRES\fR\fR
.ad
.RS 18n
.rt  
non-adjustable, high-resolution clock
.RE

.sp
.LP
For timers created with a \fIclock_id\fR of \fBCLOCK_HIGHRES\fR, the system will attempt to use an optimal hardware source. This may include, but is not limited to, per-CPU timer sources.  The actual hardware source used is transparent to the user and may change over the lifetime of the timer. For example, if the caller that created the timer were to change its processor binding or its processor set, the system may elect to drive the timer with a hardware source  that better reflects the new binding. Timers based on a \fIclock_id\fR of \fBCLOCK_HIGHRES\fR are ideally suited for interval timers that have minimal jitter tolerance.
.sp
.LP
Timers are not inherited by a child process across a \fBfork\fR(2) and are disarmed and deleted by a call to one of the \fBexec\fR functions (see \fBexec\fR(2)). 
.SH RETURN VALUES
.sp
.LP
Upon successful completion, \fBtimer_create()\fR returns \fB0\fR and updates the location referenced by \fItimerid\fR to a \fBtimer_t\fR, which can be passed to the per-process timer calls. If an error occurs, the function returns \fB\(mi1\fR and sets \fBerrno\fR to indicate the error. The value of \fItimerid\fR is undefined if an error occurs.
.SH ERRORS
.sp
.LP
The \fBtimer_create()\fR function will fail if:
.sp
.ne 2
.mk
.na
\fB\fBEAGAIN\fR\fR
.ad
.RS 10n
.rt  
The system lacks sufficient signal queuing resources to honor the request, or the calling process has already created all of the timers it is allowed by the system.
.RE

.sp
.ne 2
.mk
.na
\fB\fBEINVAL\fR\fR
.ad
.RS 10n
.rt  
The specified clock \fBID\fR, \fIclock_id\fR, is not defined.
.RE

.sp
.ne 2
.mk
.na
\fB\fBEPERM\fR\fR
.ad
.RS 10n
.rt  
The specified clock \fBID\fR, \fIclock_id\fR, is \fBCLOCK_HIGHRES\fR and the {\fBPRIV_PROC_CLOCK_HIGHRES\fR} is not asserted in the effective set of the calling process.
.RE

.SH ATTRIBUTES
.sp
.LP
See \fBattributes\fR(5) for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
lw(2.75i) |lw(2.75i) 
lw(2.75i) |lw(2.75i) 
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelMT-Safe with exceptions
_
StandardSee \fBstandards\fR(5).
.TE

.SH SEE ALSO
.sp
.LP
\fBexec\fR(2), \fBfork\fR(2), \fBtime\fR(2), \fBclock_settime\fR(3C), \fBsignal\fR(3C), \fBsignal.h\fR(3HEAD), \fBtimer_delete\fR(3C), \fBtimer_settime\fR(3C), \fBattributes\fR(5), \fBprivileges\fR(5), \fBstandards\fR(5)
