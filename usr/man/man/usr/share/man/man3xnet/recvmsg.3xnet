'\" te
.\"  Copyright (c) 1992, X/Open Company Limited  All Rights Reserved  Portions Copyright (c) 2006, Sun Microsystems, Inc.  All Rights Reserved
.\"  Sun Microsystems, Inc. gratefully acknowledges The Open Group for permission to reproduce portions of its copyrighted documentation. Original documentation from The Open Group can be obtained online at  http://www.opengroup.org/bookstore/.
.\" The Institute of Electrical and Electronics Engineers and The Open Group, have given us permission to reprint portions of their documentation. In the following statement, the phrase "this text" refers to portions of the system documentation. Portions of this text are reprinted and reproduced in electronic form in the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard for Information Technology -- Portable Operating System Interface (POSIX), The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the Institute of Electrical and Electronics Engineers, Inc and The Open Group. In the event of any discrepancy between these versions and the original IEEE and The Open Group Standard, the original IEEE and The Open Group Standard is the referee document. The original Standard can be obtained online at http://www.opengroup.org/unix/online.html.  This notice shall appear on any product containing this material. 
.TH recvmsg 3XNET "27 Feb 2006" "SunOS 5.11" "X/Open Networking Services Library Functions"
.SH NAME
recvmsg \- receive a message from a socket
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [ \fIflag\fR ... ] \fIfile\fR ... \fB-lxnet\fR [ \fIlibrary\fR ... ]
#include <sys/socket.h>

\fBssize_t\fR \fBrecvmsg\fR(\fBint\fR \fIsocket\fR, \fBstruct msghdr *\fR\fImessage\fR, \fBint\fR \fIflags\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The \fBrecvmsg()\fR function receives a message from a connection-mode or connectionless-mode socket. It is normally used with connectionless-mode sockets because it permits the application to retrieve the source address of received data.
.sp
.LP
The \fBrecvmsg()\fR function receives messages from unconnected or connected sockets and returns the length of the message.
.sp
.LP
The \fBrecvmsg()\fR function returns the total length of the message. For message-based sockets such as \fBSOCK_DGRAM\fR and \fBSOCK_SEQPACKET\fR, the entire message must be read in a single operation. If a message is too long to fit in the supplied buffers, and \fBMSG_PEEK\fR is not set in the \fIflags\fR argument, the excess bytes are discarded, and \fBMSG_TRUNC\fR is set in the \fBmsg_flags\fR member of the \fBmsghdr\fR structure. For stream-based sockets such as \fBSOCK_STREAM\fR, message boundaries are ignored. In this case, data is returned to the user as soon as it becomes available, and no data is discarded.
.sp
.LP
If the \fBMSG_WAITALL\fR flag is not set, data will be returned only up to the end of the first message.
.sp
.LP
If no messages are available at the socket, and \fBO_NONBLOCK\fR is not set on the socket's file descriptor, \fBrecvmsg()\fR blocks until a message arrives. If no messages are available at the socket and \fBO_NONBLOCK\fR is set on the socket's file descriptor, the \fBrecvmsg()\fR function fails and sets \fBerrno\fR to \fBEAGAIN\fR or \fBEWOULDBLOCK\fR.
.sp
.LP
In the \fBmsghdr\fR structure, defined in \fBsocket.h\fR(3HEAD), the \fBmsg_name\fR and \fBmsg_namelen\fR members specify the source address if the socket is unconnected. If the socket is connected, the \fBmsg_name\fR and \fBmsg_namelen\fR members are ignored. The \fBmsg_name\fR member may be a null pointer if no names are desired or required.
.sp
.LP
The \fBmsg_control\fR and \fBmsg_controllen\fR members specify a buffer to receive ancillary data sent along with a message. Ancillary data consists of a sequence of pairs. Each pair is composed of a \fBcmsghdr\fR structure followed by a data array. The \fBcmsghdr\fR structure, defined in \fBsocket.h\fR(3HEAD), contains descriptive information which allows an application to correctly parse data. The data array contains the ancillary data message.
.sp
.LP
If ancillary data is not transferred, \fBmsg_control\fR is set to \fBNULL\fR and \fBmsg_controllen\fR is set to \fB0\fR.
.sp
.LP
The \fBmsg_iov\fR and \fBmsg_iovlen\fR fields of the \fBmsghdr\fR structure are used to specify where the received data will be stored. \fBmsg_iov\fR points to an array of \fBiovec\fR structures. The \fBmsg_iovlen\fR must be set to the dimension of this array. In each \fBiovec\fR structure, the \fBiov_base\fR field specifies a storage area and the \fBiov_len\fR field gives its size in bytes. Each storage area indicated by \fBmsg_iov\fR is filled with received data in turn until all of the received data is stored or all of the areas have been filled.
.sp
.LP
If the \fBSO_TIMESTAMP\fR option has been enabled through \fBsetsockopt()\fR, then a struct \fBtimeval\fR is returned following the \fBcmsghdr\fR, and the \fBcmsg_len\fR field of the \fBcmsghdr\fR indicates the size of the struct \fBtimeval\fR.
.sp
.LP
On successful completion, the \fBmsg_flags\fR member of the message header is the bitwise-inclusive OR of all of the following flags that indicate conditions detected for the received message:
.sp
.ne 2
.mk
.na
\fB\fBMSG_EOR\fR\fR
.ad
.RS 14n
.rt  
End of record was received (if supported by the protocol).
.RE

.sp
.ne 2
.mk
.na
\fB\fBMSG_OOB\fR\fR
.ad
.RS 14n
.rt  
Out-of-band data was received.
.RE

.sp
.ne 2
.mk
.na
\fB\fBMSG_TRUNC\fR\fR
.ad
.RS 14n
.rt  
Normal data was truncated.
.RE

.sp
.ne 2
.mk
.na
\fB\fBMSG_CTRUNC\fR\fR
.ad
.RS 14n
.rt  
Control data was truncated.
.RE

.SH PARAMETERS
.sp
.LP
The function takes the following arguments:
.sp
.ne 2
.mk
.na
\fB\fIsocket\fR\fR
.ad
.RS 11n
.rt  
Specifies the socket file descriptor.
.RE

.sp
.ne 2
.mk
.na
\fB\fImessage\fR\fR
.ad
.RS 11n
.rt  
Points to a \fBmsghdr\fR structure, containing both the buffer to store the source address and the buffers for the incoming message. The length and format of the address depend on the address family of the socket. The \fBmsg_flags\fR member is ignored on input, but may contain meaningful values on output.
.RE

.sp
.ne 2
.mk
.na
\fB\fIflags\fR\fR
.ad
.RS 11n
.rt  
Specifies the type of message reception. Values of this argument are formed by logically OR'ing zero or more of the following values:
.sp
.ne 2
.mk
.na
\fB\fBMSG_OOB\fR\fR
.ad
.RS 15n
.rt  
Requests out-of-band data. The significance and semantics of out-of-band data are protocol-specific.
.RE

.sp
.ne 2
.mk
.na
\fB\fBMSG_PEEK\fR\fR
.ad
.RS 15n
.rt  
Peeks at the incoming message.
.RE

.sp
.ne 2
.mk
.na
\fB\fBMSG_WAITALL\fR\fR
.ad
.RS 15n
.rt  
Requests that the function block until the full amount of data requested can be returned. The function may return a smaller amount of data if a signal is caught, if the connection is terminated, if \fBMSG_PEEK\fR was specified, or if an error is pending for the socket.
.RE

.RE

.SH USAGE
.sp
.LP
The \fBselect\fR(3C) and \fBpoll\fR(2) functions can be used to determine when data is available to be received.
.SH RETURN VALUES
.sp
.LP
Upon successful completion, \fBrecvmsg()\fR returns the length of the message in bytes. If no messages are available to be received and the peer has performed an orderly shutdown, \fBrecvmsg()\fR returns \fB0\fR. Otherwise, \fB\(mi1\fR is returned and \fBerrno\fR is set to indicate the error.
.SH ERRORS
.sp
.LP
The \fBrecvmsg()\fR function will fail if:
.sp
.ne 2
.mk
.na
\fB\fBEAGAIN\fR\fR
.ad
.br
.na
\fB\fBEWOULDBLOCK\fR\fR
.ad
.RS 15n
.rt  
The socket's file descriptor is marked \fBO_NONBLOCK\fR and no data is waiting to be received; or \fBMSG_OOB\fR is set and no out-of-band data is available and either the socket's file descriptor is marked \fBO_NONBLOCK\fR or the socket does not support blocking to await out-of-band data.
.RE

.sp
.ne 2
.mk
.na
\fB\fBEBADF\fR\fR
.ad
.RS 15n
.rt  
The \fIsocket\fR argument is not a valid open file descriptor.
.RE

.sp
.ne 2
.mk
.na
\fB\fBECONNRESET\fR\fR
.ad
.RS 15n
.rt  
A connection was forcibly closed by a peer.
.RE

.sp
.ne 2
.mk
.na
\fB\fBEFAULT\fR\fR
.ad
.RS 15n
.rt  
The \fImessage\fR parameter, or storage pointed to by the \fImsg_name\fR, \fImsg_control\fR or \fImsg_iov\fR fields of the \fImessage\fR parameter, or storage pointed to by the \fBiovec\fR structures pointed to by the \fImsg_iov\fR field can not be accessed or written.
.RE

.sp
.ne 2
.mk
.na
\fB\fBEINTR\fR\fR
.ad
.RS 15n
.rt  
This function was interrupted by a signal before any data was available.
.RE

.sp
.ne 2
.mk
.na
\fB\fBEINVAL\fR\fR
.ad
.RS 15n
.rt  
The sum of the \fBiov_len\fR values overflows an \fBssize_t\fR. or the MSG_OOB flag is set and no out-of-band data is available.
.RE

.sp
.ne 2
.mk
.na
\fB\fBEMSGSIZE\fR\fR
.ad
.RS 15n
.rt  
The \fBmsg_iovlen\fR member of the \fBmsghdr\fR structure pointed to by \fImessage\fR is less than or equal to 0, or is greater than \fBIOV_MAX\fR.
.RE

.sp
.ne 2
.mk
.na
\fB\fBENOTCONN\fR\fR
.ad
.RS 15n
.rt  
A receive is attempted on a connection-mode socket that is not connected.
.RE

.sp
.ne 2
.mk
.na
\fB\fBENOTSOCK\fR\fR
.ad
.RS 15n
.rt  
The \fIsocket\fR argument does not refer to a socket.
.RE

.sp
.ne 2
.mk
.na
\fB\fBEOPNOTSUPP\fR\fR
.ad
.RS 15n
.rt  
The specified flags are not supported for this socket type.
.RE

.sp
.ne 2
.mk
.na
\fB\fBETIMEDOUT\fR\fR
.ad
.RS 15n
.rt  
The connection timed out during connection establishment, or due to a transmission timeout on active connection.
.RE

.sp
.LP
The \fBrecvmsg()\fR function may fail if:
.sp
.ne 2
.mk
.na
\fB\fBEIO\fR\fR
.ad
.RS 11n
.rt  
An \fBIO\fR error occurred while reading from or writing to the file system.
.RE

.sp
.ne 2
.mk
.na
\fB\fBENOBUFS\fR\fR
.ad
.RS 11n
.rt  
Insufficient resources were available in the system to perform the operation.
.RE

.sp
.ne 2
.mk
.na
\fB\fBENOMEM\fR\fR
.ad
.RS 11n
.rt  
Insufficient memory was available to fulfill the request.
.RE

.sp
.ne 2
.mk
.na
\fB\fBENOSR\fR\fR
.ad
.RS 11n
.rt  
There were insufficient STREAMS resources available for the operation to complete.
.RE

.SH ATTRIBUTES
.sp
.LP
See \fBattributes\fR(5) for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i) 
lw(2.75i) |lw(2.75i) 
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelMT-Safe
_
StandardSee \fBstandards\fR(5).
.TE

.SH SEE ALSO
.sp
.LP
\fBpoll\fR(2), \fBrecv\fR(3XNET), \fBrecvfrom\fR(3XNET), \fBselect\fR(3C), \fBsend\fR(3XNET), \fBsendmsg\fR(3XNET), \fBsendto\fR(3XNET), \fBsetsockopt\fR(3XNET), \fBshutdown\fR(3XNET), \fBsocket\fR(3XNET), \fBsocket.h\fR(3HEAD), \fBattributes\fR(5), \fBstandards\fR(5)
