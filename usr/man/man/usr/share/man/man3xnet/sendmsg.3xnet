'\" te
.\" Copyright (c) 1992, X/Open Company Limited.  All Rights Reserved.  Portions Copyright (c) 2003, Sun Microsystems, Inc.  All Rights Reserved.
.\"  Sun Microsystems, Inc. gratefully acknowledges The Open Group for permission to reproduce portions of its copyrighted documentation. Original documentation from The Open Group can be obtained online at  http://www.opengroup.org/bookstore/.
.\" The Institute of Electrical and Electronics Engineers and The Open Group, have given us permission to reprint portions of their documentation. In the following statement, the phrase "this text" refers to portions of the system documentation. Portions of this text are reprinted and reproduced in electronic form in the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard for Information Technology -- Portable Operating System Interface (POSIX), The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the Institute of Electrical and Electronics Engineers, Inc and The Open Group. In the event of any discrepancy between these versions and the original IEEE and The Open Group Standard, the original IEEE and The Open Group Standard is the referee document. The original Standard can be obtained online at http://www.opengroup.org/unix/online.html.  This notice shall appear on any product containing this material. 
.TH sendmsg 3XNET "1 Nov 2003" "SunOS 5.11" "X/Open Networking Services Library Functions"
.SH NAME
sendmsg \- send a message on a socket using a message structure
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [ \fIflag\fR ... ] \fIfile\fR ... \fB-lxnet\fR [ \fIlibrary\fR ... ]
#include <sys/socket.h>

\fBssize_t\fR \fBsendmsg\fR(\fBint\fR \fIsocket\fR, \fBconst struct msghdr *\fR\fImessage\fR, \fBint\fR \fIflags\fR);
.fi

.SH PARAMETERS
.sp
.LP
The function takes the following arguments:
.sp
.ne 2
.mk
.na
\fB\fIsocket\fR\fR
.ad
.RS 11n
.rt  
Specifies the socket file descriptor.
.RE

.sp
.ne 2
.mk
.na
\fB\fImessage\fR\fR
.ad
.RS 11n
.rt  
Points to a \fBmsghdr\fR structure, containing both the destination address and the buffers for the outgoing message. The length and format of the address depend on the address family of the socket.  The \fBmsg_flags\fR member is ignored.
.RE

.sp
.ne 2
.mk
.na
\fB\fIflags\fR\fR
.ad
.RS 11n
.rt  
Specifies the type of message transmission. The application may specify 0 or the following flag:
.sp
.ne 2
.mk
.na
\fBMSG_EOR\fR
.ad
.RS 11n
.rt  
Terminates a record (if supported by the protocol)
.RE

.sp
.ne 2
.mk
.na
\fBMSG_OOB\fR
.ad
.RS 11n
.rt  
Sends out-of-band data on sockets that support out-of-bound data. The significance and semantics of out-of-band data are protocol-specific.
.RE

.RE

.SH DESCRIPTION
.sp
.LP
The \fBsendmsg()\fR function sends a message through a connection-mode or connectionless-mode socket.  If the socket is connectionless-mode, the message will be sent to the address specified by \fImsghdr\fR.  If the socket is connection-mode, the destination address in \fImsghdr\fR is ignored.
.sp
.LP
The  \fImsg_iov\fR and  \fImsg_iovlen\fR fields of message specify zero or more buffers containing the data to be sent. \fImsg_iov\fR points to an array of  \fBiovec\fR structures;  \fImsg_iovlen\fR must be set to the dimension of this array. In each  \fBiovec\fR structure, the  \fIiov_base\fR field specifies  a storage area and the  \fIiov_len\fR field gives its size  in bytes. Some of these sizes can be zero. The data from each storage area indicated by  \fImsg_iov\fR is sent in turn.
.sp
.LP
Successful completion of a call to \fBsendmsg()\fR does not guarantee delivery of the message. A return value of \(mi1 indicates only locally-detected errors.
.sp
.LP
If space is not available at the sending socket to hold the message to be transmitted and the socket file descriptor does not have \fBO_NONBLOCK\fR set, \fBsendmsg()\fR function blocks until space is available.  If space is not available at the sending socket to hold the message to be transmitted and the socket file descriptor does have \fBO_NONBLOCK\fR set, \fBsendmsg()\fR function will fail.
.sp
.LP
If the socket protocol supports broadcast and the specified address is a broadcast address for the socket protocol, \fBsendmsg()\fR will fail if the \fBSO_BROADCAST\fR option is not set for the socket.
.sp
.LP
The socket in use may require the process to have appropriate privileges to use the \fBsendmsg()\fR function.
.SH USAGE
.sp
.LP
The \fBselect\fR(3C) and \fBpoll\fR(2) functions can be used to determine when it is possible to send more data.
.SH RETURN VALUES
.sp
.LP
Upon successful completion, \fBsendmsg()\fR function returns the number of bytes sent.  Otherwise, \(mi1 is returned and \fBerrno\fR is set to indicate the error.
.SH ERRORS
.sp
.LP
The \fBsendmsg()\fR function will fail if:
.sp
.ne 2
.mk
.na
\fB\fBEAGAIN\fR \fR
.ad
.br
.na
\fB\fBEWOULDBLOCK\fR\fR
.ad
.RS 16n
.rt  
The socket's file descriptor is marked O_NONBLOCK and the requested operation would block.
.RE

.sp
.ne 2
.mk
.na
\fB\fBEAFNOSUPPORT\fR\fR
.ad
.RS 16n
.rt  
Addresses in the specified address family cannot be used with this socket.
.RE

.sp
.ne 2
.mk
.na
\fB\fBEBADF\fR\fR
.ad
.RS 16n
.rt  
The \fIsocket\fR argument is not a valid file descriptor.
.RE

.sp
.ne 2
.mk
.na
\fB\fBECONNRESET\fR\fR
.ad
.RS 16n
.rt  
A connection was forcibly closed by a peer.
.RE

.sp
.ne 2
.mk
.na
\fB\fBEFAULT\fR\fR
.ad
.RS 16n
.rt  
The  \fImessage\fR parameter, or storage pointed to by the  \fImsg_name\fR, \fImsg_control\fR or  \fImsg_iov\fR fields of the  \fImessage\fR parameter, or storage pointed to by the \fBiovec\fR structures pointed to by the  \fImsg_iov\fR field can not be accessed.
.RE

.sp
.ne 2
.mk
.na
\fB\fBEINTR\fR\fR
.ad
.RS 16n
.rt  
A signal interrupted \fBsendmsg()\fR before any data was transmitted.
.RE

.sp
.ne 2
.mk
.na
\fB\fBEINVAL\fR\fR
.ad
.RS 16n
.rt  
The sum of the \fBiov_len\fR values overflows an \fBssize_t\fR.
.RE

.sp
.ne 2
.mk
.na
\fB\fBEMSGSIZE\fR\fR
.ad
.RS 16n
.rt  
The message is to large to be sent all at once (as the socket requires), or the \fBmsg_iovlen\fR member of the \fBmsghdr\fR structure pointed to by \fImessage\fR is less than or equal to 0 or is greater than \fBIOV_MAX\fR.
.RE

.sp
.ne 2
.mk
.na
\fB\fBENOTCONN\fR\fR
.ad
.RS 16n
.rt  
The socket is connection-mode but is not connected.
.RE

.sp
.ne 2
.mk
.na
\fB\fBENOTSOCK\fR\fR
.ad
.RS 16n
.rt  
The \fIsocket\fR argument does not refer a socket.
.RE

.sp
.ne 2
.mk
.na
\fB\fBEOPNOTSUPP\fR\fR
.ad
.RS 16n
.rt  
The \fIsocket\fR argument is associated with a socket that does not support one or more of the values set in \fIflags\fR.
.RE

.sp
.ne 2
.mk
.na
\fB\fBEPIPE\fR\fR
.ad
.RS 16n
.rt  
The socket is shut down for writing, or the socket is connection-mode and is no longer connected. In the latter case, and if the socket is of type SOCK_STREAM, the \fBSIGPIPE\fR signal is generated to the calling thread.
.RE

.sp
.LP
If the address family of the socket is \fBAF_UNIX\fR, then \fBsendmsg()\fR will fail if:
.sp
.ne 2
.mk
.na
\fB\fBEIO\fR\fR
.ad
.RS 16n
.rt  
An I/O error occurred while reading from or writing to the file system.
.RE

.sp
.ne 2
.mk
.na
\fB\fBELOOP\fR\fR
.ad
.RS 16n
.rt  
Too many symbolic links were encountered in translating the pathname in the socket address.
.RE

.sp
.ne 2
.mk
.na
\fB\fBENAMETOOLONG\fR\fR
.ad
.RS 16n
.rt  
A component of a pathname exceeded \fINAME_MAX\fR characters, or an entire pathname exceeded \fIPATH_MAX\fR characters.
.RE

.sp
.ne 2
.mk
.na
\fB\fBENOENT\fR\fR
.ad
.RS 16n
.rt  
A component of the pathname does not name an existing file or the pathname is an empty string.
.RE

.sp
.ne 2
.mk
.na
\fB\fBENOTDIR\fR\fR
.ad
.RS 16n
.rt  
A component of the path prefix of the pathname in the socket address is not a directory.
.RE

.sp
.LP
The \fBsendmsg()\fR function may fail if:
.sp
.ne 2
.mk
.na
\fB\fBEACCES\fR\fR
.ad
.RS 16n
.rt  
Search permission is denied for a component of the path prefix; or write access to the named socket is denied.
.RE

.sp
.ne 2
.mk
.na
\fB\fBEDESTADDRREQ\fR\fR
.ad
.RS 16n
.rt  
The socket is not connection-mode and does not have its peer address set, and no destination address was specified.
.RE

.sp
.ne 2
.mk
.na
\fB\fBEHOSTUNREACH\fR\fR
.ad
.RS 16n
.rt  
The destination host cannot be reached (probably because the host is down or a remote router cannot reach it).
.RE

.sp
.ne 2
.mk
.na
\fB\fBEIO\fR\fR
.ad
.RS 16n
.rt  
An I/O error occurred while reading from or writing to the file system.
.RE

.sp
.ne 2
.mk
.na
\fB\fBEISCONN\fR\fR
.ad
.RS 16n
.rt  
A destination address was specified and the socket is already connected.
.RE

.sp
.ne 2
.mk
.na
\fB\fBENETDOWN\fR\fR
.ad
.RS 16n
.rt  
The local interface used to reach the destination is down.
.RE

.sp
.ne 2
.mk
.na
\fB\fBENETUNREACH\fR\fR
.ad
.RS 16n
.rt  
No route to the network is present.
.RE

.sp
.ne 2
.mk
.na
\fB\fBENOBUFS\fR\fR
.ad
.RS 16n
.rt  
Insufficient resources were available in the system to perform the operation.
.RE

.sp
.ne 2
.mk
.na
\fB\fBENOMEM\fR\fR
.ad
.RS 16n
.rt  
Insufficient memory was available to fulfill the request.
.RE

.sp
.ne 2
.mk
.na
\fB\fBENOSR\fR\fR
.ad
.RS 16n
.rt  
There were insufficient STREAMS resources available for the operation to complete.
.RE

.sp
.LP
If the address family of the socket is \fBAF_UNIX\fR, then \fBsendmsg()\fR may fail if:
.sp
.ne 2
.mk
.na
\fB\fBENAMETOOLONG\fR\fR
.ad
.RS 16n
.rt  
Pathname resolution of a symbolic link produced an intermediate result whose length exceeds \fIPATH_MAX\fR.
.RE

.SH ATTRIBUTES
.sp
.LP
See \fBattributes\fR(5) for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i) 
lw(2.75i) |lw(2.75i) 
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelMT-Safe
_
StandardSee \fBstandards\fR(5).
.TE

.SH SEE ALSO
.sp
.LP
\fBpoll\fR(2) \fBgetsockopt\fR(3XNET), \fBrecv\fR(3XNET), \fBrecvfrom\fR(3XNET), \fBrecvmsg\fR(3XNET), \fBselect\fR(3C), \fBsend\fR(3XNET), \fBsendto\fR(3XNET), \fBsetsockopt\fR(3XNET), \fBshutdown\fR(3XNET), \fBsocket\fR(3XNET), \fBattributes\fR(5), \fBstandards\fR(5)
