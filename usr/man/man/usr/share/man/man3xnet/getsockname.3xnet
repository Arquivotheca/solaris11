'\" te
.\"  Copyright (c) 1992, X/Open Company Limited  All Rights Reserved  Portions Copyright (c) 1998, Sun Microsystems, Inc.  All Rights Reserved
.\"  Sun Microsystems, Inc. gratefully acknowledges The Open Group for permission to reproduce portions of its copyrighted documentation. Original documentation from The Open Group can be obtained online at  http://www.opengroup.org/bookstore/.
.\" The Institute of Electrical and Electronics Engineers and The Open Group, have given us permission to reprint portions of their documentation. In the following statement, the phrase "this text" refers to portions of the system documentation. Portions of this text are reprinted and reproduced in electronic form in the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard for Information Technology -- Portable Operating System Interface (POSIX), The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the Institute of Electrical and Electronics Engineers, Inc and The Open Group. In the event of any discrepancy between these versions and the original IEEE and The Open Group Standard, the original IEEE and The Open Group Standard is the referee document. The original Standard can be obtained online at http://www.opengroup.org/unix/online.html.  This notice shall appear on any product containing this material. 
.TH getsockname 3XNET "10 Jun 2002" "SunOS 5.11" "X/Open Networking Services Library Functions"
.SH NAME
getsockname \- get the socket name
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [ \fIflag\fR ... ] \fIfile\fR ... \fB-lxnet\fR [ \fIlibrary\fR ... ]
#include <sys/socket.h>

\fBint\fR \fBgetsockname\fR(\fBint\fR \fIsocket\fR, \fBstruct sockaddr *restrict\fR \fIaddress\fR,
     \fBsocklen_t *restrict\fR \fIaddress_len\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The \fBgetsockname()\fR function retrieves the locally-bound name of the specified socket, stores this address in the \fBsockaddr\fR structure pointed to by the \fIaddress\fR argument, and stores the length of this address in the object pointed to by the \fIaddress_len\fR argument.
.sp
.LP
If the actual length of the address is greater than the length of the supplied \fBsockaddr\fR structure, the stored address will be truncated.
.sp
.LP
If the socket has not been bound to a local name, the value stored in the object pointed to by \fIaddress\fR is unspecified.
.SH RETURN VALUES
.sp
.LP
Upon successful completion, 0 is returned, the \fIaddress\fR argument points to the address of the socket, and the \fIaddress_len\fR argument points to the length of the address.  Otherwise, \(mi1 is returned and \fBerrno\fR is set to indicate the error.
.SH ERRORS
.sp
.LP
The \fBgetsockname()\fR function will fail:
.sp
.ne 2
.mk
.na
\fB\fBEBADF\fR\fR
.ad
.RS 14n
.rt  
The \fIsocket\fR argument is not a valid file descriptor.
.RE

.sp
.ne 2
.mk
.na
\fB\fBEFAULT\fR\fR
.ad
.RS 14n
.rt  
The  \fIaddress\fR or  \fIaddress_len\fR parameter can not be accessed or written.
.RE

.sp
.ne 2
.mk
.na
\fB\fBENOTSOCK\fR\fR
.ad
.RS 14n
.rt  
The \fIsocket\fR argument does not refer to a socket.
.RE

.sp
.ne 2
.mk
.na
\fB\fBEOPNOTSUPP\fR\fR
.ad
.RS 14n
.rt  
The operation is not supported for this socket's protocol.
.RE

.sp
.LP
The \fBgetsockname()\fR function may fail if:
.sp
.ne 2
.mk
.na
\fB\fBEINVAL\fR\fR
.ad
.RS 11n
.rt  
The socket has been shut down.
.RE

.sp
.ne 2
.mk
.na
\fB\fBENOBUFS\fR\fR
.ad
.RS 11n
.rt  
Insufficient resources were available in the system to complete the call.
.RE

.sp
.ne 2
.mk
.na
\fB\fBENOSR\fR\fR
.ad
.RS 11n
.rt  
There were insufficient STREAMS resources available for the operation to complete.
.RE

.SH ATTRIBUTES
.sp
.LP
See \fBattributes\fR(5) for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i) 
lw(2.75i) |lw(2.75i) 
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelMT-Safe
_
StandardSee \fBstandards\fR(5).
.TE

.SH SEE ALSO
.sp
.LP
\fBaccept\fR(3XNET), \fBbind\fR(3XNET), \fBgetpeername\fR(3XNET), \fBsocket\fR(3XNET) \fBattributes\fR(5), \fBstandards\fR(5)
