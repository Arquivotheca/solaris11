'\" te
.\" Copyright (c) 1997, The Open Group. All Rights Reserved.
.\" Portions Copyright (c) 2003, Sun Microsystems, Inc. All Rights Reserved.
.\"  Sun Microsystems, Inc. gratefully acknowledges The Open Group for permission to reproduce portions of its copyrighted documentation. Original documentation from The Open Group can be obtained online at  http://www.opengroup.org/bookstore/.
.\" The Institute of Electrical and Electronics Engineers and The Open Group, have given us permission to reprint portions of their documentation. In the following statement, the phrase "this text" refers to portions of the system documentation. Portions of this text are reprinted and reproduced in electronic form in the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard for Information Technology -- Portable Operating System Interface (POSIX), The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the Institute of Electrical and Electronics Engineers, Inc and The Open Group. In the event of any discrepancy between these versions and the original IEEE and The Open Group Standard, the original IEEE and The Open Group Standard is the referee document. The original Standard can be obtained online at http://www.opengroup.org/unix/online.html.  This notice shall appear on any product containing this material. 
.TH bind 3XNET "20 Feb 2003" "SunOS 5.11" "X/Open Networking Services Library Functions"
.SH NAME
bind \- bind a name to a socket
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [ \fIflag\fR ... ] \fIfile\fR ... \fB-lxnet\fR [ \fIlibrary\fR ... ]
#include <sys/socket.h>

\fBint\fR \fBbind\fR(\fBint\fR \fIsocket\fR, \fBconst struct sockaddr *\fR\fIaddress\fR,
     \fBsocklen_t\fR \fIaddress_len\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The \fBbind()\fR function assigns an \fIaddress\fR to an unnamed socket.  Sockets created with \fBsocket\fR(3XNET) function are initially unnamed. They are identified only by their address family.
.sp
.LP
The function takes the following arguments:
.sp
.ne 2
.mk
.na
\fB\fIsocket\fR\fR
.ad
.RS 15n
.rt  
Specifies the file descriptor of the socket to be bound.
.RE

.sp
.ne 2
.mk
.na
\fB\fIaddress\fR\fR
.ad
.RS 15n
.rt  
Points to a \fBsockaddr\fR structure containing the address to be bound to the socket.  The length and format of the address depend on the address family of the socket.
.RE

.sp
.ne 2
.mk
.na
\fB\fIaddress_len\fR\fR
.ad
.RS 15n
.rt  
Specifies the length of the \fBsockaddr\fR structure pointed to by the \fIaddress\fR argument.
.RE

.sp
.LP
The socket in use may require the process to have appropriate privileges to use the \fBbind()\fR function.
.SH USAGE
.sp
.LP
An application program can retrieve the assigned socket name with the \fBgetsockname\fR(3XNET) function.
.SH RETURN VALUES
.sp
.LP
Upon successful completion, \fBbind()\fR returns 0.  Otherwise, \(mi1 is returned and \fBerrno\fR is set to indicate the error.
.SH ERRORS
.sp
.LP
The \fBbind()\fR function will fail if:
.sp
.ne 2
.mk
.na
\fB\fBEADDRINUSE\fR\fR
.ad
.RS 17n
.rt  
The specified address is already in use.
.RE

.sp
.ne 2
.mk
.na
\fB\fBEADDRNOTAVAIL\fR\fR
.ad
.RS 17n
.rt  
The specified address is not available from the local machine.
.RE

.sp
.ne 2
.mk
.na
\fB\fBEAFNOSUPPORT\fR\fR
.ad
.RS 17n
.rt  
The specified address is not a valid address for the address family of the specified socket.
.RE

.sp
.ne 2
.mk
.na
\fB\fBEBADF\fR\fR
.ad
.RS 17n
.rt  
The \fIsocket\fR argument is not a valid file descriptor.
.RE

.sp
.ne 2
.mk
.na
\fB\fBEFAULT\fR\fR
.ad
.RS 17n
.rt  
The  \fIaddress\fR argument can not be accessed.
.RE

.sp
.ne 2
.mk
.na
\fB\fBEINVAL\fR\fR
.ad
.RS 17n
.rt  
The socket is already bound to an address, and the protocol does not support binding to a new address; or the socket has been shut down.
.RE

.sp
.ne 2
.mk
.na
\fB\fBENOTSOCK\fR\fR
.ad
.RS 17n
.rt  
The \fIsocket\fR argument does not refer to a socket.
.RE

.sp
.ne 2
.mk
.na
\fB\fBEOPNOTSUPP\fR\fR
.ad
.RS 17n
.rt  
The socket type of the specified socket does not support binding to an address.
.RE

.sp
.LP
If the address family of the socket is AF_UNIX, then \fBbind()\fR will fail if:
.sp
.ne 2
.mk
.na
\fB\fBEACCES\fR\fR
.ad
.RS 16n
.rt  
A component of the path prefix denies search permission, or the requested name requires writing in a directory with a mode that denies write permission.
.RE

.sp
.ne 2
.mk
.na
\fB\fBEDESTADDRREQ\fR\fR
.ad
.br
.na
\fB\fBEISDIR\fR\fR
.ad
.RS 16n
.rt  
The \fIaddress\fR argument is a null pointer.
.RE

.sp
.ne 2
.mk
.na
\fB\fBEIO\fR\fR
.ad
.RS 16n
.rt  
An I/O error occurred.
.RE

.sp
.ne 2
.mk
.na
\fB\fBELOOP\fR\fR
.ad
.RS 16n
.rt  
Too many symbolic links were encountered in translating the pathname in \fIaddress.\fR
.RE

.sp
.ne 2
.mk
.na
\fB\fBENAMETOOLONG\fR\fR
.ad
.RS 16n
.rt  
A component of a pathname exceeded \fINAME_MAX\fR characters, or an entire pathname exceeded \fIPATH_MAX\fR characters.
.RE

.sp
.ne 2
.mk
.na
\fB\fBENOENT\fR\fR
.ad
.RS 16n
.rt  
A component of the pathname does not name an existing file or the pathname is an empty string.
.RE

.sp
.ne 2
.mk
.na
\fB\fBENOTDIR\fR\fR
.ad
.RS 16n
.rt  
A component of the path prefix of the pathname in \fIaddress\fR is not a directory.
.RE

.sp
.ne 2
.mk
.na
\fB\fBEROFS\fR\fR
.ad
.RS 16n
.rt  
The name would reside on a read-only filesystem.
.RE

.sp
.LP
The \fBbind()\fR function may fail if:
.sp
.ne 2
.mk
.na
\fB\fBEACCES\fR\fR
.ad
.RS 16n
.rt  
The specified address is protected, and \fB{PRIV_NET_PRIVADOR}\fR is not asserted in the effective set of the current process.
.RE

.sp
.ne 2
.mk
.na
\fB\fBEINVAL\fR\fR
.ad
.RS 16n
.rt  
The \fIaddress_len\fR argument is not a valid length for the address family.
.RE

.sp
.ne 2
.mk
.na
\fB\fBEISCONN\fR\fR
.ad
.RS 16n
.rt  
The socket is already connected.
.RE

.sp
.ne 2
.mk
.na
\fB\fBENAMETOOLONG\fR\fR
.ad
.RS 16n
.rt  
Pathname resolution of a symbolic link produced an intermediate result whose length exceeds \fIPATH_MAX\fR.
.RE

.sp
.ne 2
.mk
.na
\fB\fBENOBUFS\fR\fR
.ad
.RS 16n
.rt  
Insufficient resources were available to complete the call.
.RE

.sp
.ne 2
.mk
.na
\fB\fBENOSR\fR\fR
.ad
.RS 16n
.rt  
There were insufficient STREAMS resources for the operation to complete.
.RE

.SH ATTRIBUTES
.sp
.LP
See \fBattributes\fR(5) for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i) 
lw(2.75i) |lw(2.75i) 
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelMT-Safe
_
StandardSee \fBstandards\fR(5).
.TE

.SH SEE ALSO
.sp
.LP
\fBconnect\fR(3XNET), \fBgetsockname\fR(3XNET), \fBlisten\fR(3XNET), \fBsocket\fR(3XNET), \fBattributes\fR(5), \fBprivileges\fR(5), \fBstandards\fR(5)
