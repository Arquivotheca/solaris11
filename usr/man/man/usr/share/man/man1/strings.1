'\" te
.\" Copyright 1989 AT&T 
.\" Copyright (c) 1992, X/Open Company Limited  All Rights Reserved
.\" Portions Copyright (c) 2007, 2011, Oracle and/or its affiliates. All rights reserved,
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for permission to reproduce portions of its copyrighted documentation. Original documentation from The Open Group can be obtained online at http://www.opengroup.org/bookstore/.
.\" The Institute of Electrical and Electronics Engineers and The Open Group, have given us permission to reprint portions of their documentation. In the following statement, the phrase "this text" refers to portions of the system documentation. Portions of this text are reprinted and reproduced in electronic form in the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard for Information Technology -- Portable Operating System Interface (POSIX), The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the Institute of Electrical and Electronics Engineers, Inc and The Open Group. In the event of any discrepancy between these versions and the original IEEE and The Open Group Standard, the original IEEE and The Open Group Standard is the referee document. The original Standard can be obtained online at http://www.opengroup.org/unix/online.html. This notice shall appear on any product containing this material.
.TH strings 1 "8 Jun 2011" "SunOS 5.11" "User Commands"
.SH NAME
strings \- find printable strings in an object or binary file
.SH SYNOPSIS
.LP
.nf
\fBstrings\fR [\fB-a\fR | \fB-\fR] 
     [\fB-t\fR \fIformat\fR | \fB-o\fR] [\fB-n\fR \fInumber\fR | \fB-number\fR]  [\fB-N\fR \fIname\fR]  [\fIfile\fR]...
.fi

.SH DESCRIPTION
.sp
.LP
The \fBstrings\fR utility looks for \fBASCII\fR strings in a binary file. A string is any sequence of 4 or more printing characters ending with a NEWLINE or a \fBNULL\fR character.
.sp
.LP
\fBstrings\fR is useful for identifying random object files and many other things.
.sp
.LP
By default, strings looks at program sections that are loaded in memory. Program sections are identified by the section type \fBSHT_PROGBITS\fR. Sections that are loaded in memory are identified by the section flag \fBSHF_ALLOC\fR. Use \fBelfdump\fR(1)  to display complete section information for a file.
.sp
.LP
All sections can be inspected with the \fB-a\fR option. Individual sections can be inspected with the \fB-N\fR option.
.SH OPTIONS
.sp
.LP
The following options are supported:
.sp
.ne 2
.mk
.na
\fB\fB-a\fR | \fB\(mi\fR\fR
.ad
.RS 23n
.rt  
Look everywhere in the file for strings.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-n\fR \fInumber\fR \fB|\fR \fB-\fR\fInumber\fR\fR
.ad
.RS 23n
.rt  
Use a \fInumber\fR as the minimum  string length rather than the default, which is \fB4\fR. An invalid number results in the default string length being used.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-N\fR \fIname\fR\fR
.ad
.RS 23n
.rt  
Look only in ELF section name. See \fBelfdump\fR(1). Multiple \fB-N\fR options can be specified to inspect multiple sections. 
.sp
If the \fB-a\fR or \fB-\fRoption is specified, all \fB-N\fR options are ignored .
.RE

.sp
.ne 2
.mk
.na
\fB\fB-o\fR\fR
.ad
.RS 23n
.rt  
Equivalent to \fB\fR\fB-t\fR \fBd\fR option.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-t\fR \fBformat\fR\fR
.ad
.RS 23n
.rt  
Write each string preceded by its byte offset from the start of the file. The format is dependent on the single character used as the \fIformat\fR option-argument: 
.sp
.ne 2
.mk
.na
\fB\fBd\fR\fR
.ad
.RS 5n
.rt  
The offset is written in decimal.
.RE

.sp
.ne 2
.mk
.na
\fB\fBo\fR\fR
.ad
.RS 5n
.rt  
The offset is written in octal.
.RE

.sp
.ne 2
.mk
.na
\fB\fBx\fR\fR
.ad
.RS 5n
.rt  
The offset is written in hexadecimal.
.RE

.RE

.SH OPERANDS
.sp
.LP
The following operand is supported:
.sp
.ne 2
.mk
.na
\fB\fB\fIfile\fR\fR\fR
.ad
.RS 8n
.rt  
A path name of a regular file to be used as input. If no \fIfile\fR operand is specified, the \fBstrings\fR utility reads from the standard input.
.RE

.SH ENVIRONMENT VARIABLES
.sp
.LP
See \fBenviron\fR(5) for descriptions of the following environment variables that affect the execution of \fBstrings\fR: \fBLANG\fR, \fBLC_ALL\fR, \fBLC_CTYPE\fR, \fBLC_MESSAGES\fR, and \fBNLSPATH\fR.
.SH EXIT STATUS
.sp
.LP
The following exit values are returned:
.sp
.ne 2
.mk
.na
\fB\fB0\fR\fR
.ad
.RS 6n
.rt  
Successful completion.
.RE

.sp
.ne 2
.mk
.na
\fB\fB>0\fR\fR
.ad
.RS 6n
.rt  
An error occurred.
.RE

.SH ATTRIBUTES
.sp
.LP
See \fBattributes\fR(5) for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i) 
lw(2.75i) |lw(2.75i) 
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Availabilitysystem/core-os
_
CSIEnabled
_
Interface StabilitySee below.
.TE

.sp
.LP
The \fBstrings\fR utility, including all options except \fB-N\fR, are specified by standards. See \fBstandards\fR(5). The \fB-N\fR option is not currently specified by any standard.
.SH SEE ALSO
.sp
.LP
\fBelfdump\fR(1), \fBod\fR(1), \fBattributes\fR(5), \fBenviron\fR(5), \fBstandards\fR(5)
.SH NOTES
.sp
.LP
The algorithm for identifying strings is extremely primitive.
.sp
.LP
For backwards compatibility, the options \fB-a\fR and \fB\(mi\fR are interchangeable.
