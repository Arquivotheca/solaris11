'\" te
.\" Copyright (c) 2004, Sun Microsystems, Inc., All Rights Reserved
.TH usb_ctrl_request 9S "5 Jan 2004" "SunOS 5.11" "Data Structures for Drivers"
.SH NAME
usb_ctrl_request \- USB control pipe request structure
.SH SYNOPSIS
.LP
.nf
#include <sys/usb/usba.h> 
.fi

.SH INTERFACE LEVEL
.sp
.LP
Solaris DDI specific (Solaris DDI)
.SH DESCRIPTION
.sp
.LP
A control request is used to send device commands (or requests) and to read status. Please refer to Section\fI 5.5\fR of the \fIUSB 2.0\fR specification for information on control pipes. For information on formatting requests, see Section \fI9.3\fR of the \fIUSB 2.0\fR specification. The USB 2.0 specification is available at \fIwww.usb.org\fR.
.SH STRUCTURE MEMBERS
.sp
.LP
The fields in the usb_ctrl_req_t are used to format a control request:
.sp
.in +2
.nf
  uint8_t      ctrl_bmRequestType; /* characteristics of request */
  uint8_t      ctrl_bRequest;  /* specific request             */
  uint16_t     ctrl_wValue;    /* varies according to request  */
  uint16_t     ctrl_wIndex;    /* index or offset              */
  uint16_t     ctrl_wLength;   /* number of bytes to xfer      */
  mblk_t       *ctrl_data;     /* data for the data phase  */
                               /* IN or OUT: allocated by client */
  uint_t       ctrl_timeout;   /* time until  USBA framework */
                               /* retires req, in seconds */
                               /* If set to zero, defaults to 5 sec */
  usb_opaque_t    ctrl_client_private; /* client private info */
  usb_req_attrs_t ctrl_attributes; /* attrib. for this req */

  /* Normal callback function, called upon completion. */
  void       (*ctrl_cb)(
                 usb_pipe_handle_t ph, struct usb_ctrl_req *req);

  /* Exception callback function, for error handling. */
  void       (*ctrl_exc_cb)(
                 usb_pipe_handle_t ph, struct usb_ctrl_req *req);
  usb_cr_t   ctrl_completion_reason; /* overall success status */
                                  /* See usb_completion_reason(9S) */
  usb_cb_flags_t  ctrl_cb_flags; /* recovery done by callback hndlr */
                                /* See \fBusb_callback_flags(9S)\fR */
.fi
.in -2

.sp
.LP
Request attributes define special handling for transfers. The following attributes are valid for control requests:
.sp
.ne 2
.mk
.na
\fBUSB_ATTRS_SHORT_XFER_OK\fR
.ad
.RS 27n
.rt  
Accept transfers where less data is received than expected.
.RE

.sp
.ne 2
.mk
.na
\fBUSB_ATTRS_AUTOCLEARING\fR
.ad
.RS 27n
.rt  
Have USB framework reset pipe and clear functional stalls automatically on exception.
.RE

.sp
.ne 2
.mk
.na
\fBUSB_ATTRS_PIPE_RESET\fR
.ad
.RS 27n
.rt  
Have USB framework reset pipe automatically on exception.
.RE

.sp
.LP
Please see \fBusb_request_attributes\fR(9S) for more information.
.sp
.LP
The following definitions directly pertain to fields in the USB control request structure. (See Section \fI 9.3\fR of the \fIUSB 2.0\fR specification.)
.sp
.in +2
.nf
Direction bitmasks of a control request's ctrl_bmRequestType field
(USB 2.0 spec, section 9.3.1)

     USB_DEV_REQ_HOST_TO_DEV     | Host to device direction
     USB_DEV_REQ_DEV_TO_HOST     | Device to host direction
     USB_DEV_REQ_DIR_MASK        | Bitmask of direction bits

Request type bitmasks of a control request's ctrl_bmRequestType field
(USB 2.0 spec, section 9.3.1)

     USB_DEV_REQ_TYPE_STANDARD   | USB 2.0 defined command
                                 | for all USB devices
     USB_DEV_REQ_TYPE_CLASS      | USB 2.0 defined
                                 | class-specific command
     USB_DEV_REQ_TYPE_VENDOR     | Vendor-specific command
     USB_DEV_REQ_TYPE_MASK       | Bitmask of request type bits

Recipient bitmasks of a control request's ctrl_bmRequestType field
(USB 2.0 spec, section 9.3.1)

     USB_DEV_REQ_RCPT_DEV        | Request is for device
     USB_DEV_REQ_RCPT_IF         | Request is for interface
     USB_DEV_REQ_RCPT_EP         | Request is for endpoint
     USB_DEV_REQ_RCPT_OTHER      | Req is for other than above
     USB_DEV_REQ_RCPT_MASK       | Bitmask of request recipient bits

Standard requests (USB 2.0 spec, section 9.4)
     USB_REQ_GET_STATUS          | Get status of device, endpoint
                                 |or interface (9.4.5)
     USB_REQ_CLEAR_FEATURE       | Clear feature specified by
                                 |wValue field (9.4.1)
     USB_REQ_SET_FEATURE         | Set feature specified by
                                 |       wValue field (9.4.9)
     USB_REQ_SET_ADDRESS         | Set address specified by
                                 |       wValue field (9.4.6)
     USB_REQ_GET_DESCR           | Get descr for item/idx in
                                 |       wValue field (9.4.3)
     USB_REQ_SET_DESCR           | Set descr for item/idx in
                                 |       wValue field (9.4.8)
     USB_REQ_GET_CFG             | Get current device
                                 |        configuration (9.4.2)
     USB_REQ_SET_CFG             | Set current device
                                 |        configuration (9.4.7)
     USB_REQ_GET_IF              | Get alternate interface
                                 |       setting (9.4.4)
     USB_REQ_SET_IF              | Set alternate interface
                                 |       setting (9.4.10)
     USB_REQ_SYNC_FRAME          | Set and report an endpoint's
                                 |       sync frame (9.4.11)

Unicode language ID, used as wIndex for USB_REQ_SET/GET_DESCRIPTOR

     USB_LANG_ID                 | Unicode English Lang ID for
                                 | parsing str descr
.fi
.in -2

.SH ATTRIBUTES
.sp
.LP
See attributes(5) for descriptions of the following attributes: 
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i) 
lw(2.75i) |lw(2.75i) 
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
ArchitecturePCI-based systems
_
Interface StabilityCommitted
_
Availabilitysystem/io/usb
.TE

.SH SEE ALSO
.sp
.LP
\fBusb_alloc_request\fR(9F), \fBusb_pipe_bulk_xfer\fR(9F), \fBusb_pipe_ctrl_xfer\fR(9F), \fBusb_pipe_intr_xfer\fR(9F), \fBusb_pipe_isoc_xfer\fR(9F), \fBusb_bulk_request\fR(9S), \fBusb_callback_flags\fR(9S), \fBusb_completion_reason\fR(9S), \fBusb_intr_request\fR(9S), \fBusb_isoc_request\fR(9S), \fBusb_request_attributes\fR(9S)
