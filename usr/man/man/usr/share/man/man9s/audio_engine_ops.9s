'\" te
.\" Copyright (c) 2010, Oracle and/or its affiliates. All rights reserved.
.TH audio_engine_ops 9S "21 Apr 2010" "SunOS 5.11" "Data Structures for Drivers"
.SH NAME
audio_engine_ops \- audio engine operations vector
.SH SYNOPSIS
.LP
.nf
#include <sys/audio/audio_driver.h>
.fi

.SH INTERFACE LEVEL
.sp
.LP
Solaris DDI specific (Solaris DDI)
.SH DESCRIPTION
.sp
.LP
An \fBaudio_engine_ops\fR structure defines vectors that an audio driver exports to the Sun audio framework.
.sp
.LP
One such vector is used for each DMA or PIO engine (sometimes referred to as a "stream") supported on the device.
.sp
.LP
The audio framework provides the following synchronization guarantees for audio engines:
.RS +4
.TP
.ie t \(bu
.el o
only one thread will be executing an audio engine entry point for a given audio device at any one time
.RE
.RS +4
.TP
.ie t \(bu
.el o
no threads will be executing any audio engine entry points for a given audio device if that device is suspended. See \fBaudio_dev_suspend\fR(9F).
.RE
.sp
.LP
Each entry point receives as its first argument the driver private state that was registered with \fBaudio_engine_set_private\fR(9F).
.SH STRUCTURE MEMBERS
.sp
.in +2
.nf
int         audio_engine_version;        /* version number */
int         (*audio_engine_open)();      /* open engine */
void        (*audio_engine_close)();     /* close engine */
int         (*audio_engine_start)();     /* start engine */
void        (*audio_engine_stop)();      /* stop engine */
uint64_t    (*audio_engine_count)();     /* get frame count */
int         (*audio_engine_format)();    /* get format */
int         (*audio_engine_channels)();  /* get num channels */
int         (*audio_engine_rate)();      /* get sample rate */
void        (*audio_engine_sync)();      /* dma cache sync */
uint_t      (*audio_engine_qlen)();      /* get hw fifo len */
void        (*audio_engine_chinfo)();    /* channel cfg info */
uint_t      (*audio_engine_playahead)(); /* play ahead frames */
.fi
.in -2

.sp
.ne 2
.mk
.na
\fB\fIaudio_engine_version\fR\fR
.ad
.RS 26n
.rt  
The version of the engine interface. Drivers must supply AUDIO_ENGINE_VERSION.
.RE

.sp
.ne 2
.mk
.na
\fB\fIaudio_engine_open\fR\fR
.ad
.RS 26n
.rt  
Function entry that opens the engine and initializes hardware and resources.
.RE

.sp
.ne 2
.mk
.na
\fB\fIaudio_engine_close\fR\fR
.ad
.RS 26n
.rt  
Function entry that closes the engine and possibly releases any resources.
.RE

.sp
.ne 2
.mk
.na
\fB\fIaudio_engine_start\fR\fR
.ad
.RS 26n
.rt  
Function entry to start audio data transfer.
.RE

.sp
.ne 2
.mk
.na
\fB\fIaudio_engine_stop\fR\fR
.ad
.RS 26n
.rt  
Function entry to stop audio data transfer.
.RE

.sp
.ne 2
.mk
.na
\fB\fIaudio_engine_count\fR\fR
.ad
.RS 26n
.rt  
Function entry to return engine's frame count.
.RE

.sp
.ne 2
.mk
.na
\fB\fIaudio_engine_format\fR\fR
.ad
.RS 26n
.rt  
Function entry to get the format of the engine.
.RE

.sp
.ne 2
.mk
.na
\fB\fIaudio_engine_channels\fR\fR
.ad
.RS 26n
.rt  
Function entry to get the number of channels of the engine.
.RE

.sp
.ne 2
.mk
.na
\fB\fIaudio_engine_rate\fR\fR
.ad
.RS 26n
.rt  
Function entry to get the sample rate of the engine.
.RE

.sp
.ne 2
.mk
.na
\fB\fIaudio_engine_sync\fR\fR
.ad
.RS 26n
.rt  
Function entry to synchronize the DMA cache for the buffer associated with the engine.
.RE

.sp
.ne 2
.mk
.na
\fB\fIaudio_engine_qlen\fR\fR
.ad
.RS 26n
.rt  
Function entry to determine the on-device FIFO len for the engine.
.RE

.sp
.ne 2
.mk
.na
\fB\fIaudio_engine_chinfo\fR\fR
.ad
.RS 26n
.rt  
Function entry to determine number and layout channels for device.
.RE

.sp
.ne 2
.mk
.na
\fB\fIaudio_engine_playahead\fR\fR
.ad
.RS 26n
.rt  
Function entry to determine minimum number of frames that should be queued to the engine.
.RE

.SH ATTRIBUTES
.sp
.LP
See \fBattributes\fR(5) for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i) 
lw(2.75i) |lw(2.75i) 
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
.TE

.SH SEE ALSO
.sp
.LP
\fBattributes\fR(5), \fBaudio\fR(7D), \fBaudio_engine_channels\fR(9E), \fBaudio_engine_chinfo\fR(9E), \fBaudio_engine_count\fR(9E), \fBaudio_engine_format\fR(9E), \fBaudio_engine_open\fR(9E), \fBaudio_engine_playahead\fR(9E), \fBaudio_engine_qlen\fR(9E), \fBaudio_engine_rate\fR(9E), \fBaudio_engine_start\fR(9E), \fBaudio_engine_sync\fR(9E), \fBaudio_dev_add_engine\fR(9F), \fBaudio_dev_suspend\fR(9F), \fBaudio_engine_alloc\fR(9F), \fBaudio_engine_set_private\fR(9F)
