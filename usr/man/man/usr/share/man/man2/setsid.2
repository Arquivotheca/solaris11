'\" te
.\" Copyright (c) 2002, Sun Microsystems, Inc.  All Rights Reserved
.\" Copyright 1989 AT&T
.\" Portions Copyright (c) 1992, X/Open Company Limited  All Rights Reserved
.\"  Sun Microsystems, Inc. gratefully acknowledges The Open Group for permission to reproduce portions of its copyrighted documentation. Original documentation from The Open Group can be obtained online at  http://www.opengroup.org/bookstore/.
.\" The Institute of Electrical and Electronics Engineers and The Open Group, have given us permission to reprint portions of their documentation. In the following statement, the phrase "this text" refers to portions of the system documentation. Portions of this text are reprinted and reproduced in electronic form in the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard for Information Technology -- Portable Operating System Interface (POSIX), The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the Institute of Electrical and Electronics Engineers, Inc and The Open Group. In the event of any discrepancy between these versions and the original IEEE and The Open Group Standard, the original IEEE and The Open Group Standard is the referee document. The original Standard can be obtained online at http://www.opengroup.org/unix/online.html.  This notice shall appear on any product containing this material. 
.TH setsid 2 "21 Aug 2002" "SunOS 5.11" "System Calls"
.SH NAME
setsid \- create session and set process group ID
.SH SYNOPSIS
.LP
.nf
#include <sys/types.h>
#include <unistd.h>

\fBpid_t\fR \fBsetsid\fR(\fBvoid\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The \fBsetsid()\fR function creates a new session, if the calling process is not a process group leader. Upon return the calling process will be the session leader of this new session, will be the process group leader of a new process group, and will have no controlling terminal. The process group  \fBID\fR of the calling process will be set equal to the process \fBID\fR of the calling process. The calling process will be the only process in the new process group and the only process in the new session.
.SH RETURN VALUES
.sp
.LP
Upon successful completion, \fBsetsid()\fR returns the value of the process group  \fBID\fR of the calling process. Otherwise it returns \fB(pid_t)\(mi1\fR and sets \fBerrno\fR to indicate the error.
.SH ERRORS
.sp
.LP
The \fBsetsid()\fR function will fail if:
.sp
.ne 2
.mk
.na
\fB\fBEPERM\fR\fR
.ad
.RS 9n
.rt  
The calling process is already a process group leader, or the process group  \fBID\fR of a process other than the calling process matches the process  \fBID\fR of the calling process.
.RE

.SH ATTRIBUTES
.sp
.LP
See \fBattributes\fR(5) for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i) 
lw(2.75i) |lw(2.75i) 
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelAsync-Signal-Safe
_
StandardSee \fBstandards\fR(5).
.TE

.SH SEE ALSO
.sp
.LP
\fBgetsid\fR(2), \fBsetpgid\fR(2), \fBsetpgrp\fR(2), \fBattributes\fR(5), \fBstandards\fR(5)
.SH WARNINGS
.sp
.LP
A call to \fBsetsid()\fR by a process that is a process group leader will fail. A process can become a process group leader by being the last member of a pipeline started by a job control shell. Thus, a process that expects to be part of a pipeline, and that calls \fBsetsid()\fR, should always first fork; the parent should exit and the child should call \fBsetsid()\fR. This will ensure that the calling process will work reliably when started by both job control shells and non-job control shells.
