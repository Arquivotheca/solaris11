'\" te
.\" Copyright (c) 2007, Sun Microsystems, Inc.  All Rights Reserved.
.\" Copyright 1989 AT&T
.\" Portions Copyright (c) 1992, X/Open Company Limited  All Rights Reserved.
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for permission to reproduce portions of its copyrighted documentation. Original documentation from The Open Group can be obtained online at  http://www.opengroup.org/bookstore/.
.\" The Institute of Electrical and Electronics Engineers and The Open Group, have given us permission to reprint portions of their documentation. In the following statement, the phrase "this text" refers to portions of the system documentation. Portions of this text are reprinted and reproduced in electronic form in the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard for Information Technology -- Portable Operating System Interface (POSIX), The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the Institute of Electrical and Electronics Engineers, Inc and The Open Group. In the event of any discrepancy between these versions and the original IEEE and The Open Group Standard, the original IEEE and The Open Group Standard is the referee document. The original Standard can be obtained online at http://www.opengroup.org/unix/online.html.  This notice shall appear on any product containing this material.
.TH unlink 2 "18 May 2007" "SunOS 5.11" "System Calls"
.SH NAME
unlink, unlinkat \- remove directory entry
.SH SYNOPSIS
.LP
.nf
#include <unistd.h>

\fBint\fR \fBunlink\fR(\fBconst char *\fR\fIpath\fR);
.fi

.LP
.nf
\fBint\fR \fBunlinkat\fR(\fBint\fR \fIdirfd\fR, \fBconst char *\fR\fIpath\fR, \fBint\fR \fIflag\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The \fBunlink()\fR function removes a link to a file. If \fIpath\fR names a symbolic link, \fBunlink()\fR removes the symbolic link named by \fIpath\fR and does not affect any file or directory named by the contents of the symbolic link.  Otherwise, \fBunlink()\fR removes the link named by the pathname pointed to by \fIpath\fR and decrements the link count of the file referenced by the link.
.sp
.LP
The \fBunlinkat()\fR function also removes a link to a file. See \fBfsattr\fR(5). If the \fIflag\fR argument is 0, the behavior of \fBunlinkat()\fR is the same as \fBunlink()\fR except in the processing of its \fIpath\fR argument. If \fIpath\fR is absolute, \fBunlinkat()\fR behaves the same as \fBunlink()\fR and the \fIdirfd\fR argument is unused. If \fIpath\fR is relative and \fIdirfd\fR has the value \fBAT_FDCWD\fR, defined in <\fBfcntl.h\fR>, \fBunlinkat()\fR also behaves the same as \fBunlink()\fR. Otherwise, \fIpath\fR is resolved relative to the directory referenced by the \fIdirfd\fR argument.
.sp
.LP
If the \fIflag\fR argument is set to the value \fBAT_REMOVEDIR\fR, defined in <\fBfcntl.h\fR>, \fBunlinkat()\fR behaves the same as \fBrmdir\fR(2) except in the processing of the \fIpath\fR argument as described above.
.sp
.LP
When the file's link count becomes 0 and no process has the file open, the space occupied by the file will be freed and the file is no longer accessible. If one or more processes have the file open when the last link is removed, the link is removed before \fBunlink()\fR or \fBunlinkat()\fR returns, but the removal of the file contents is postponed until all references to the file are closed.
.sp
.LP
If the \fIpath\fR argument is a directory and the filesystem supports \fBunlink()\fR and \fBunlinkat()\fR on directories, the directory is unlinked from its parent with no cleanup being performed.  In UFS, the disconnected directory will be found the next time the filesystem is checked with \fBfsck\fR(1M). The \fBunlink()\fR and \fBunlinkat()\fR functions will not fail simply because a directory is not empty. The user with appropriate privileges can orphan a non-empty directory without generating an error message.
.sp
.LP
If the \fIpath\fR argument is a directory and the filesystem does not support \fBunlink()\fR and \fBunlink()\fR on directories (for example, ZFS), the call will fail with \fBerrno\fR set to \fBEPERM\fR.
.sp
.LP
Upon successful completion, \fBunlink()\fR and \fBunlinkat()\fR will mark for update the \fBst_ctime\fR and \fBst_mtime\fR fields of the parent directory.  If the file's link count is not 0, the \fBst_ctime\fR field of the file will be marked for update.
.SH RETURN VALUES
.sp
.LP
Upon successful completion, \fB0\fR is returned.  Otherwise, \fB\(mi1\fR is returned, \fBerrno\fR is set to indicate the error, and the file is not unlinked.
.SH ERRORS
.sp
.LP
The \fBunlink()\fR and \fBunlinkat()\fR functions will fail if:
.sp
.ne 2
.mk
.na
\fB\fBEACCES\fR\fR
.ad
.RS 16n
.rt  
Search permission is denied for a component of the \fIpath\fR prefix, or write permission is denied on the directory containing the link to be removed.
.RE

.sp
.ne 2
.mk
.na
\fB\fBEACCES\fR\fR
.ad
.RS 16n
.rt  
The parent directory has the sticky bit set and the file is not writable by the user, the user does not own the parent directory, the user does not own the file, and the user is not a privileged user.
.RE

.sp
.ne 2
.mk
.na
\fB\fBEBUSY\fR\fR
.ad
.RS 16n
.rt  
The entry to be unlinked is the mount point for a mounted file system.
.RE

.sp
.ne 2
.mk
.na
\fB\fBEFAULT\fR\fR
.ad
.RS 16n
.rt  
The \fIpath\fR argument points to an illegal address.
.RE

.sp
.ne 2
.mk
.na
\fB\fBEILSEQ\fR\fR
.ad
.RS 16n
.rt  
The path argument includes non-UTF8 characters and the file system accepts only file names where all characters are part of the UTF-8 character codeset.
.RE

.sp
.ne 2
.mk
.na
\fB\fBEINTR\fR\fR
.ad
.RS 16n
.rt  
A signal was caught during the execution of the \fBunlink()\fR function.
.RE

.sp
.ne 2
.mk
.na
\fB\fBELOOP\fR\fR
.ad
.RS 16n
.rt  
Too many symbolic links were encountered in translating \fIpath\fR.
.RE

.sp
.ne 2
.mk
.na
\fB\fBENAMETOOLONG\fR\fR
.ad
.RS 16n
.rt  
The length of the \fIpath\fR argument exceeds \fBPATH_MAX\fR, or the length of a \fIpath\fR component exceeds \fBNAME_MAX\fR while \fB_POSIX_NO_TRUNC\fR is in effect.
.RE

.sp
.ne 2
.mk
.na
\fB\fBENOENT\fR\fR
.ad
.RS 16n
.rt  
The named file does not exist or is a null pathname.
.RE

.sp
.ne 2
.mk
.na
\fB\fBENOLINK\fR\fR
.ad
.RS 16n
.rt  
The \fIpath\fR argument points to a remote machine and the link to that machine is no longer active.
.RE

.sp
.ne 2
.mk
.na
\fB\fBENOTDIR\fR\fR
.ad
.RS 16n
.rt  
A component of the \fIpath\fR prefix is not a directory or the provided directory descriptor for \fBunlinkat()\fR is not \fBAT_FDCWD\fR or does not reference a directory.
.RE

.sp
.ne 2
.mk
.na
\fB\fBEPERM\fR\fR
.ad
.RS 16n
.rt  
The named file is a directory and {\fBPRIV_SYS_LINKDIR\fR} is not asserted in the effective set of the calling process, or the filesystem implementation does not support \fBunlink()\fR or \fBunlinkat()\fR on directories.
.RE

.sp
.ne 2
.mk
.na
\fB\fBEROFS\fR\fR
.ad
.RS 16n
.rt  
The directory entry to be unlinked is part of a read-only file system.
.RE

.sp
.LP
The \fBunlink()\fR and \fBunlinkat()\fR functions may fail if:
.sp
.ne 2
.mk
.na
\fB\fBENAMETOOLONG\fR\fR
.ad
.RS 16n
.rt  
Pathname resolution of a symbolic link produced an intermediate result whose length exceeds {\fBPATH_MAX\fR}.
.RE

.sp
.ne 2
.mk
.na
\fB\fBETXTBSY\fR\fR
.ad
.RS 16n
.rt  
The entry to be unlinked is the last directory entry to a pure procedure (shared text) file that is being executed.
.RE

.SH USAGE
.sp
.LP
Applications should use \fBrmdir\fR(2) to remove a directory.
.SH ATTRIBUTES
.sp
.LP
See \fBattributes\fR(5) for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i) 
lw(2.75i) |lw(2.75i) 
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelAsync-Signal-Safe
.TE

.SH SEE ALSO
.sp
.LP
\fBrm\fR(1), \fBclose\fR(2), \fBlink\fR(2), \fBopen\fR(2), \fBrmdir\fR(2), \fBremove\fR(3C), \fBattributes\fR(5), \fBprivileges\fR(5), \fBfsattr\fR(5)
