'\" te
.\"  Copyright 1989 AT&T.  Copyright (c) 2003, Sun Microsystems, Inc.  All Rights Reserved
.TH chroot 2 "20 Jan 2003" "SunOS 5.11" "System Calls"
.SH NAME
chroot, fchroot \- change root directory
.SH SYNOPSIS
.LP
.nf
#include <unistd.h>

\fBint\fR \fBchroot\fR(\fBconst char *\fR\fIpath\fR);
.fi

.LP
.nf
\fBint\fR \fBfchroot\fR(\fBint\fR \fIfildes\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The \fBchroot()\fR and  \fBfchroot()\fR functions cause a directory to become the root directory, the starting point for path searches for path names beginning with \fB/\fR (slash). The user's working directory is unaffected by the \fBchroot()\fR and \fBfchroot()\fR functions.
.sp
.LP
The \fIpath\fR argument points to a path name naming a directory. The \fIfildes\fR argument to \fBfchroot()\fR is the open file descriptor of the directory which is to become the root.
.sp
.LP
The privilege {\fBPRIV_PROC_CHROOT\fR} must be asserted in the effective set of the process to change the root directory. While it is always possible to change to the system root using the \fBfchroot()\fR function, it is not guaranteed to succeed in any other case, even if \fIfildes\fR is valid in all respects.
.sp
.LP
The ".\|." entry in the root directory is interpreted to mean the root directory itself. Therefore, ".\|." cannot be used to access files outside the subtree rooted at the root directory. Instead, \fBfchroot()\fR can be used to reset the root to a directory that was opened before the root directory was changed.
.SH RETURN VALUES
.sp
.LP
Upon successful completion, \fB0\fR is returned. Otherwise, \fB\(mi1\fR is returned, the root directory remains unchanged, and \fBerrno\fR is set to indicate the error.
.SH ERRORS
.sp
.LP
The \fBchroot()\fR function will fail if:
.sp
.ne 2
.mk
.na
\fB\fBEACCES\fR\fR
.ad
.RS 16n
.rt  
Search permission is denied for a component of the path prefix of \fIdirname\fR, or search permission is denied for the directory referred to by \fIdirname\fR.
.RE

.sp
.ne 2
.mk
.na
\fB\fBEBADF\fR\fR
.ad
.RS 16n
.rt  
The descriptor is not valid.
.RE

.sp
.ne 2
.mk
.na
\fB\fBEFAULT\fR\fR
.ad
.RS 16n
.rt  
The \fIpath\fR argument points to an illegal address.
.RE

.sp
.ne 2
.mk
.na
\fB\fBEINVAL\fR\fR
.ad
.RS 16n
.rt  
The \fBfchroot()\fR function attempted to change to a directory the is not the system root and external circumstances do not allow this.
.RE

.sp
.ne 2
.mk
.na
\fB\fBEINTR\fR\fR
.ad
.RS 16n
.rt  
A signal was caught during the execution of the \fBchroot()\fR function.
.RE

.sp
.ne 2
.mk
.na
\fB\fBEIO\fR\fR
.ad
.RS 16n
.rt  
An I/O error occurred while reading from or writing to the file system.
.RE

.sp
.ne 2
.mk
.na
\fB\fBELOOP\fR\fR
.ad
.RS 16n
.rt  
Too many symbolic links were encountered in translating \fIpath\fR.
.RE

.sp
.ne 2
.mk
.na
\fB\fBENAMETOOLONG\fR\fR
.ad
.RS 16n
.rt  
The length of the \fIpath\fR argument exceeds \fBPATH_MAX\fR, or the length of a \fIpath\fR component exceeds \fB\fR\fBNAME_MAX\fR while \fB_POSIX_NO_TRUNC\fR is in effect.
.RE

.sp
.ne 2
.mk
.na
\fB\fBENOENT\fR\fR
.ad
.RS 16n
.rt  
The named directory does not exist or is a null pathname.
.RE

.sp
.ne 2
.mk
.na
\fB\fBENOLINK\fR\fR
.ad
.RS 16n
.rt  
The \fIpath\fR argument points to a remote machine and the link to that machine is no longer active.
.RE

.sp
.ne 2
.mk
.na
\fB\fBENOTDIR\fR\fR
.ad
.RS 16n
.rt  
Any component of the path name is not a directory.
.RE

.sp
.ne 2
.mk
.na
\fB\fBEPERM\fR\fR
.ad
.RS 16n
.rt  
The {\fBPRIV_PROC_CHROOT\fR} privilege is not asserted in the effective set of the calling process.
.RE

.SH SEE ALSO
.sp
.LP
\fBchroot\fR(1M), \fBchdir\fR(2), \fBprivileges\fR(5)
.SH WARNINGS
.sp
.LP
The only use of \fBfchroot()\fR that is appropriate is to change back to the system root.
