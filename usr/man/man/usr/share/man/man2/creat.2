'\" te
.\" Copyright (c) 1997, The Open Group. All Rights Reserved.
.\" Copyright 1989 AT&T
.\" Portions Copyright (c) 2001, Sun Microsystems, Inc.  All Rights Reserved.
.\"  Sun Microsystems, Inc. gratefully acknowledges The Open Group for permission to reproduce portions of its copyrighted documentation. Original documentation from The Open Group can be obtained online at  http://www.opengroup.org/bookstore/.
.\" The Institute of Electrical and Electronics Engineers and The Open Group, have given us permission to reprint portions of their documentation. In the following statement, the phrase "this text" refers to portions of the system documentation. Portions of this text are reprinted and reproduced in electronic form in the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard for Information Technology -- Portable Operating System Interface (POSIX), The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the Institute of Electrical and Electronics Engineers, Inc and The Open Group. In the event of any discrepancy between these versions and the original IEEE and The Open Group Standard, the original IEEE and The Open Group Standard is the referee document. The original Standard can be obtained online at http://www.opengroup.org/unix/online.html.  This notice shall appear on any product containing this material. 
.TH creat 2 "25 Mar 2002" "SunOS 5.11" "System Calls"
.SH NAME
creat \- create a new file or rewrite an existing one
.SH SYNOPSIS
.LP
.nf
#include <sys/stat.h>
#include <fcntl.h>

\fBint\fR \fBcreat\fR(\fBconst char *\fR\fIpath\fR, \fBmode_t\fR \fImode\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The function call
.sp
.LP
creat(path, mode)
.sp
.LP
is equivalent to:
.sp
.LP
\fBopen(path, O_WRONLY | O_CREAT | O_TRUNC, mode)\fR
.SH RETURN VALUES
.sp
.LP
Refer to \fBopen\fR(2).
.SH ERRORS
.sp
.LP
Refer to \fBopen\fR(2).
.SH EXAMPLES
.LP
\fBExample 1 \fRCreating a File
.sp
.LP
The following example creates the file \fB/tmp/file\fR with read and write permissions for the file owner and read permission for group and others. The resulting file descriptor is assigned to the \fIfd\fR variable.

.sp
.in +2
.nf
#include <fcntl.h>
\&...
int fd;
mode_t mode = S_IRUSR | S_IWUSR | S_IRGRP | S_IROTH;
char *filename = "/tmp/file";
\&...
fd = creat(filename, mode);
\&...
.fi
.in -2

.SH USAGE
.sp
.LP
The \fBcreat()\fR function has a transitional interface for 64-bit file offsets.  See \fBlf64\fR(5).
.SH ATTRIBUTES
.sp
.LP
See \fBattributes\fR(5) for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i) 
lw(2.75i) |lw(2.75i) 
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelAsync-Signal-Safe
_
StandardSee \fBstandards\fR(5).
.TE

.SH SEE ALSO
.sp
.LP
\fBopen\fR(2), \fBattributes\fR(5), \fBlargefile\fR(5), \fBlf64\fR(5), \fBstandards\fR(5)
