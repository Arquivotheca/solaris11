'\" te
.\"  Copyright (c) 2009, Sun Microsystems, Inc. All Rights Reserved
.TH ddi_periodic_add 9F "13 Apr 2009" "SunOS 5.11" "Kernel Functions for Drivers"
.SH NAME
ddi_periodic_add \- issue nanosecond periodic timeout requests
.SH SYNOPSIS
.LP
.nf
#include <sys/dditypes.h> 
#include <sys/sunddi.h>

\fBddi_periodic_t\fR \fBddi_periodic_add\fR(\fBvoid (*\fR\fIfunc\fR)(\fBvoid *)\fR, \fBvoid\fR \fIarg\fR, 
     \fBhrtime_t\fR \fIinterval\fR, \fBint\fR \fIlevel\fR);
.fi

.SH INTERFACE LEVEL
.sp
.LP
Solaris DDI specific (Solaris DDI)
.SH PARAMETERS
.sp
.ne 2
.mk
.na
\fB\fIfunc\fR\fR
.ad
.RS 12n
.rt  
The callback function is invoked periodically in the specified interval. If the argument level is zero, the function is invoked in kernel context. Otherwise, it's invoked in interrupt context at the specified level.
.RE

.sp
.ne 2
.mk
.na
\fB\fIarg\fR\fR
.ad
.RS 12n
.rt  
The argument passed to the callback function.
.RE

.sp
.ne 2
.mk
.na
\fB\fIinterval\fR\fR
.ad
.RS 12n
.rt  
Interval time in nanoseconds.
.RE

.sp
.ne 2
.mk
.na
\fB\fIlevel\fR\fR
.ad
.RS 12n
.rt  
Callback interrupt level. If the value is zero, the callback function is invoked in kernel context. If the value is more than zero, but less than or equal to ten, the callback function is invoked in interrupt context at the specified interrupt level, which may be used for real time applications.
.sp
This value must be in range of 0-10, which can be either a numeric number, a pre-defined macro (\fBDDI_IPL_0\fR, ... , \fBDDI_IPL_10\fR), or the \fBDDI_INTR_PRI\fR macro with the interrupt priority.
.RE

.SH DESCRIPTION
.sp
.LP
The \fBddi_periodic_add()\fR function schedules the specified function to be periodically invoked in the nanosecond interval time.
.sp
.LP
As with \fBtimeout\fR(9F), the exact time interval over which the function takes effect cannot be guaranteed, but the value given is a close approximation.
.SH RETURN VALUES
.sp
.LP
\fBddi_periodic_add()\fRreturns the non-zero opaque value (\fBddi_periodic_t\fR), which might be used for \fBddi_periodic_delete\fR(9F) to specify the request.
.SH CONTEXT
.sp
.LP
The \fBddi_periodic_add()\fR function may be called from user or kernel context.
.SH EXAMPLES
.LP
\fBExample 1 \fRUsing \fBddi_periodic_add()\fR for a periodic callback function
.sp
.LP
In the following example, the device driver registers a periodic callback function invoked in kernel context.

.sp
.in +2
.nf
static void
my_periodic_func(void *arg)
{
         /*
          * This handler is invoked periodically.
          */
         struct my_state *statep = (struct my_state *)arg;

         mutex_enter(&statep->lock);
         if (load_unbalanced(statep)) {
             balance_tasks(statep);
         }
         mutex_exit(&statep->lock);
}

static void
start_periodic_timer(struct my_state *statep)
{
         hrtime_t interval = CHECK_INTERVAL;

         mutex_init(&statep->lock, NULL, MUTEX_DRIVER,
             (void *)DDI_IPL_0);

         /*
          * Register my_callback which is invoked periodically
          * in CHECK_INTERVAL in kernel context.
          */
          statep->periodic_id = ddi_periodic_add(my_periodic_func,
              statep, interval, DDI_IPL_0);
.fi
.in -2

.sp
.LP
In the following example, the device driver registers a callback function invoked in interrupt context at level 7.
.sp
.in +2
.nf
/*
 * This handler is invoked periodically in interrupt context.
 */
 static void
 my_periodic_int7_func(void *arg)
 {
          struct my_state *statep = (struct my_state *)arg;
          mutex_enter(&statep->lock);
          monitor_device(statep);
          mutex_exit(&statep->lock);
  }

  static void
  start_monitor_device(struct my_state *statep)
  {
          hrtime_t interval = MONITOR_INTERVAL;

          mutex_init(&statep->lock, NULL, MUTEX_DRIVER,
              (void *)DDI_IPL_7);

          /*
           * Register the callback function invoked periodically
           * at interrupt level 7.             
           */
          statep->periodic_id = ddi_periodic_add(my_periodic_int7_func,
              statep, interval, DDI_IPL_7);
    }
.fi
.in -2

.SH SEE ALSO
.sp
.LP
\fBcv_timedwait\fR(9F), \fBddi_intr_get_pri\fR(9F), \fBddi_periodic_delete\fR(9F), \fBddi_intr_get_softint_pri\fR(9F), \fBdelay\fR(9F), \fBdrv_usectohz\fR(9F), \fBqtimeout\fR(9F), \fBquntimeout\fR(9F), \fBtimeout\fR(9F), \fBuntimeout\fR(9F)
.SH NOTES
.sp
.LP
A caller can only specify an interval in an integral multiple of 10ms. No other values are supported at this time. The interval specified is a lower bound on the interval on which the callback occurs.
