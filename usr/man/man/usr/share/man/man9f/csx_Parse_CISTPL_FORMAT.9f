'\" te
.\"  Copyright (c) 1997, Sun Microsystems, Inc.  All Rights Reserved
.TH csx_Parse_CISTPL_FORMAT 9F "24 Jan 1997" "SunOS 5.11" "Kernel Functions for Drivers"
.SH NAME
csx_Parse_CISTPL_FORMAT \- parse the Data Recording Format tuple
.SH SYNOPSIS
.LP
.nf
#include <sys/pccard.h> 



\fBint32_t\fR \fBcsx_Parse_CISTPL_FORMAT\fR(\fBclient_handle_t\fR \fIch\fR, \fBtuple_t *\fR\fItu\fR, 
     \fBcistpl_format_t *\fR\fIpt\fR);
.fi

.SH INTERFACE LEVEL
.sp
.LP
Solaris \fBDDI \fRSpecific (Solaris \fBDDI) \fR
.SH PARAMETERS
.sp
.ne 2
.mk
.na
\fB\fIch\fR\fR
.ad
.RS 6n
.rt  
Client handle returned from \fBcsx_RegisterClient\fR(9F). 
.RE

.sp
.ne 2
.mk
.na
\fB\fItu\fR\fR
.ad
.RS 6n
.rt  
Pointer to a \fBtuple_t\fR structure (see \fBtuple\fR(9S)) returned by a call to \fBcsx_GetFirstTuple\fR(9F) or \fBcsx_GetNextTuple\fR(9F). 
.RE

.sp
.ne 2
.mk
.na
\fB\fIpt\fR\fR
.ad
.RS 6n
.rt  
Pointer to a \fBcistpl_format_t\fR structure which contains the parsed \fBCISTPL_FORMAT\fR tuple information upon return from this function.
.RE

.SH DESCRIPTION
.sp
.LP
This function parses the Data Recording Format tuple, \fBCISTPL_FORMAT,\fR into a form usable by \fBPC \fRCard drivers.
.sp
.LP
The \fBCISTPL_FORMAT\fR tuple indicates the data recording format for a device partition.
.SH STRUCTURE MEMBERS
.sp
.LP
The structure members of \fBcistpl_format_t\fR are:
.sp
.in +2
.nf
uint32_t     type;
uint32_t     edc_length;
uint32_t     edc_type;
uint32_t     offset;
uint32_t     nbytes;
uint32_t     dev.disk.bksize;
uint32_t     dev.disk.nblocks;
uint32_t     dev.disk.edcloc;
uint32_t     dev.mem.flags;
uint32_t     dev.mem.reserved;
caddr_t      dev.mem.address;
uint32_t     dev.mem.edcloc;
.fi
.in -2

.sp
.LP
The fields are defined as follows:
.sp
.ne 2
.mk
.na
\fB\fBtype\fR\fR
.ad
.RS 20n
.rt  
This field indicates the type of device:
.sp
.ne 2
.mk
.na
\fBTPLFMTTYPE_DISK\fR
.ad
.RS 19n
.rt  
disk-like device
.RE

.sp
.ne 2
.mk
.na
\fBTPLFMTTYPE_MEM\fR
.ad
.RS 19n
.rt  
memory-like device
.RE

.sp
.ne 2
.mk
.na
\fBTPLFMTTYPE_VS\fR
.ad
.RS 19n
.rt  
vendor-specific device
.RE

.RE

.sp
.ne 2
.mk
.na
\fB\fBedc_length\fR\fR
.ad
.RS 20n
.rt  
This field indicates the error detection code length.
.RE

.sp
.ne 2
.mk
.na
\fB\fBedc_type\fR\fR
.ad
.RS 20n
.rt  
This field indicates the error detection code type.
.RE

.sp
.ne 2
.mk
.na
\fB\fBoffset\fR\fR
.ad
.RS 20n
.rt  
This field indicates the offset of the first byte of data in this partition.
.RE

.sp
.ne 2
.mk
.na
\fB\fBnbytes\fR\fR
.ad
.RS 20n
.rt  
This field indicates the number of bytes of data in this partition
.RE

.sp
.ne 2
.mk
.na
\fB\fBdev.disk.bksize\fR\fR
.ad
.RS 20n
.rt  
This field indicates the block size, for disk devices.
.RE

.sp
.ne 2
.mk
.na
\fB\fBdev.disk.nblocks\fR\fR
.ad
.RS 20n
.rt  
This field indicates the number of blocks, for disk devices.
.RE

.sp
.ne 2
.mk
.na
\fB\fBdev.disk.edcloc\fR\fR
.ad
.RS 20n
.rt  
This field indicates the location of the error detection code, for disk devices.
.RE

.sp
.ne 2
.mk
.na
\fB\fBdev.mem.flags\fR\fR
.ad
.RS 20n
.rt  
This field provides flags, for memory devices.  Valid flags are:
.sp
.ne 2
.mk
.na
\fBTPLFMTFLAGS_ADDR\fR
.ad
.RS 20n
.rt  
address is valid
.RE

.sp
.ne 2
.mk
.na
\fBTPLFMTFLAGS_AUTO\fR
.ad
.RS 20n
.rt  
automatically map memory region
.RE

.RE

.sp
.ne 2
.mk
.na
\fB\fBdev.mem.reserved\fR\fR
.ad
.RS 20n
.rt  
This field is reserved.
.RE

.sp
.ne 2
.mk
.na
\fB\fBdev.mem.address\fR\fR
.ad
.RS 20n
.rt  
This field indicates the physical address, for memory devices.
.RE

.sp
.ne 2
.mk
.na
\fB\fBdev.mem.edcloc\fR\fR
.ad
.RS 20n
.rt  
This field indicates the location of the error detection code, for memory devices.
.RE

.SH RETURN VALUES
.sp
.ne 2
.mk
.na
\fB\fBCS_SUCCESS\fR\fR
.ad
.RS 27n
.rt  
Successful operation.
.RE

.sp
.ne 2
.mk
.na
\fB\fBCS_BAD_HANDLE\fR\fR
.ad
.RS 27n
.rt  
Client handle is invalid.
.RE

.sp
.ne 2
.mk
.na
\fB\fBCS_UNKNOWN_TUPLE\fR\fR
.ad
.RS 27n
.rt  
Parser does not know how to parse tuple.
.RE

.sp
.ne 2
.mk
.na
\fB\fBCS_NO_CARD\fR\fR
.ad
.RS 27n
.rt  
No \fBPC \fRCard in socket.
.RE

.sp
.ne 2
.mk
.na
\fB\fBCS_NO_CIS\fR\fR
.ad
.RS 27n
.rt  
No Card Information Structure (CIS) on \fBPC \fRCard.
.RE

.sp
.ne 2
.mk
.na
\fB\fBCS_UNSUPPORTED_FUNCTION\fR\fR
.ad
.RS 27n
.rt  
No \fBPCMCIA \fRhardware installed.
.RE

.SH CONTEXT
.sp
.LP
This function may be called from user or kernel context.
.SH SEE ALSO
.sp
.LP
\fBcsx_GetFirstTuple\fR(9F), \fBcsx_GetTupleData\fR(9F), \fBcsx_RegisterClient\fR(9F), \fBcsx_ValidateCIS\fR(9F), \fBtuple\fR(9S) 
.sp
.LP
\fIPC Card 95 Standard, PCMCIA/JEIDA\fR
