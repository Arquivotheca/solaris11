'\" te
.\" Copyright (c) 2004-2006 Storage Networking Industry Association. All Rights Reserved.
.\" Portions Copyright (c) 2006, Sun Microsystems, Inc. All Rights Reserved.
.TH MP_SetTPGAccess 3MPAPI "15 Feb 2006" "SunOS 5.11" "Common Multipath Management Library Functions"
.SH NAME
MP_SetTPGAccess \- set a target port group access state
.SH SYNOPSIS
.LP
.nf
cc [ \fIflag\fR\&.\|.\|. ] \fIfile\fR\&.\|.\|. \fB-lMPAPI\fR [ \fIlibrary\fR\&.\|.\|. ]
#include <mpapi.h>

\fBMP_STATUS\fR \fBMP_SetTPGAccess\fR(\fBMP_OID\fR \fIluOid\fR, \fBMP_UINT32\fR \fIcount\fR,
     \fBMP_TPG_STATE_PAIR\fR \fI*pTpgStateList\fR);
.fi

.SH PARAMETERS
.sp
.ne 2
.mk
.na
\fB\fIluOid\fR\fR
.ad
.RS 17n
.rt  
An object ID that has type \fBMP_MULTIPATH_LOGICAL_UNIT\fR.
.RE

.sp
.ne 2
.mk
.na
\fB\fIcount\fR\fR
.ad
.RS 17n
.rt  
The number of valid items in the \fIpTpgStateList\fR.
.RE

.sp
.ne 2
.mk
.na
\fB\fIpTpgStateList\fR\fR
.ad
.RS 17n
.rt  
A pointer to an array of data structure \fBMP_TPG_STATE_PAIR\fR. This array must contain the same number of elements as \fIcount\fR.
.RE

.SH DESCRIPTION
.sp
.LP
The \fBMP_SetTPGAccess()\fR function sets the access state for a list of target port groups. This allows a client to force a failover or failback to a desired set of target port groups. This is only valid for devices that support explicit access state manipulation (i.e., the field \fIexplicitFailover\fR of data structure \fBMP_TARGET_PORT_GROUP_PROPERTIES\fR must be true).
.sp
.LP
This API provides the information needed to set up a  \fBSCSI SET TARGET PORT GROUPS\fR command.
.sp
.LP
The plugin should not implement this API by directly calling the \fBSCSI SET TARGET PORT GROUPS\fR command. The plugin should use the MP drivers API (for example, \fBioctl\fR) if available.
.sp
.LP
There are two reasons why this API is restricted to devices supporting explicit failover commands. Without an explicit command, the behavior of failback tends to be device-specific.
.sp
.LP
When the caller is finished using the list it must free the memory used by the list by calling         \fBMP_FreeOidList\fR.
.SH RETURN VALUES
.sp
.ne 2
.mk
.na
\fB\fBMP_STATUS_ACCESS_STATE_INVALID\fR\fR
.ad
.sp .6
.RS 4n
The target device returns a status indicating the caller is attempting to establish an illegal combination of access states.
.RE

.sp
.ne 2
.mk
.na
\fB\fBMP_STATUS_FAILED\fR\fR
.ad
.sp .6
.RS 4n
The underlying interface failed the command for some reason other than \fBMP_STATUS_ACCESS_STATE_INVALID\fR.
.RE

.sp
.ne 2
.mk
.na
\fB\fBMP_STATUS_INVALID_OBJECT_TYPE\fR\fR
.ad
.sp .6
.RS 4n
The \fIluOid\fR does not specify any valid object type. This is most likely to happen if an uninitialized object ID is passed to the API.
.RE

.sp
.ne 2
.mk
.na
\fB\fBMP_STATUS_OBJECT_NOT_FOUND\fR\fR
.ad
.sp .6
.RS 4n
The \fIluOid\fR owner ID or object sequence number is invalid.
.RE

.sp
.ne 2
.mk
.na
\fB\fBMP_STATUS_INVALID_PARAMETER\fR\fR
.ad
.sp .6
.RS 4n
The \fIpTpgStateList\fR is null, or when one of the TPGs referenced in the list is not associated with the specified MP logical unit, or the \fIluOid\fR has a type subfield other than \fBMP_OBJECT_TYPE_MULTIPATH_LU\fR.
.RE

.sp
.ne 2
.mk
.na
\fB\fBMP_STATUS_SUCCESS\fR\fR
.ad
.sp .6
.RS 4n
The operation is successful.
.RE

.sp
.ne 2
.mk
.na
\fB\fBMP_STATUS_UNSUPPORTED\fR\fR
.ad
.sp .6
.RS 4n
The API is not supported.
.RE

.SH ATTRIBUTES
.sp
.LP
See \fBattributes\fR(5) for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i) 
lw(2.75i) |lw(2.75i) 
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelSafe
_
StandardANSI INCITS 412 Multipath Management API
.TE

.SH SEE ALSO
.sp
.LP
\fBlibMPAPI\fR(3LIB), \fBattributes\fR(5)
.sp
.LP
\fIMultipath Management API Version 1.0\fR
