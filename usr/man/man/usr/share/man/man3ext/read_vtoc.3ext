'\" te
.\" Copyright (c) 2008, Sun Microsystems, Inc. All Rights Reserved.
.TH read_vtoc 3EXT "7 Oct 2008" "SunOS 5.11" "Extended Library Functions"
.SH NAME
read_vtoc, write_vtoc \- read and write a disk's VTOC
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [ \fIflag\fR ... ] \fIfile\fR ... \fB-ladm\fR [ \fIlibrary\fR ... ]
#include <sys/vtoc.h>

\fBint\fR \fBread_vtoc\fR(\fBint\fR \fIfd\fR, \fBstruct vtoc *\fR\fIvtoc\fR);
.fi

.LP
.nf
\fBint\fR \fBwrite_vtoc\fR(\fBint\fR \fIfd\fR, \fBstruct vtoc *\fR\fIvtoc\fR);
.fi

.LP
.nf
\fBint\fR \fBread_extvtoc\fR(\fBint\fR \fIfd\fR, \fBstruct extvtoc *\fR\fIextvtoc\fR);
.fi

.LP
.nf
\fBint\fR \fBwrite_extvtoc\fR(\fBint\fR \fIfd\fR, \fBstruct extvtoc *\fR\fIextvtoc\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The \fBread_vtoc()\fR and \fBread_extvtoc()\fR functions return the VTOC (volume  table  of contents)  structure  that is stored on  the disk associated with the open file descriptor \fIfd\fR. On disks larger than 1 TB \fBread_extvtoc()\fR must be used.
.sp
.LP
The \fBwrite_vtoc()\fR and \fBwrite_extvtoc()\fR function stores the VTOC structure on the disk associated with the open file descriptor \fIfd\fR. On disks larger then 1TB \fBwrite_extvtoc()\fR function must be used.
.sp
.LP
The \fIfd\fR argument refers to any slice on a raw disk.
.SH RETURN VALUES
.sp
.LP
Upon successful completion, \fBread_vtoc()\fR and \fBread_extvtoc()\fR return a positive integer indicating the slice index associated with the open file descriptor. Otherwise, they return a negative integer indicating one of the following errors:
.sp
.ne 2
.mk
.na
\fB\fBVT_EIO\fR\fR
.ad
.RS 15n
.rt  
An I/O error occurred.
.RE

.sp
.ne 2
.mk
.na
\fB\fBVT_ENOTSUP\fR\fR
.ad
.RS 15n
.rt  
This operation is not supported on this disk.
.RE

.sp
.ne 2
.mk
.na
\fB\fBVT_ERROR\fR\fR
.ad
.RS 15n
.rt  
An unknown error occurred.
.RE

.sp
.ne 2
.mk
.na
\fB\fBVT_OVERFLOW\fR\fR
.ad
.RS 15n
.rt  
The caller attempted an operation that is illegal on the disk and may overflow the fields in the data structure.
.RE

.sp
.LP
Upon successful completion, \fBwrite_vtoc()\fR and \fBwrite_extvtoc()\fR return 0. Otherwise, they return a negative integer indicating one of the following errors:
.sp
.ne 2
.mk
.na
\fB\fBVT_EINVAL\fR\fR
.ad
.RS 15n
.rt  
The VTOC contains an incorrect field.
.RE

.sp
.ne 2
.mk
.na
\fB\fBVT_EIO\fR\fR
.ad
.RS 15n
.rt  
An I/O error occurred.
.RE

.sp
.ne 2
.mk
.na
\fB\fBVT_ENOTSUP\fR\fR
.ad
.RS 15n
.rt  
This operation is not supported on this disk.
.RE

.sp
.ne 2
.mk
.na
\fB\fBVT_ERROR\fR\fR
.ad
.RS 15n
.rt  
An unknown error occurred.
.RE

.sp
.ne 2
.mk
.na
\fB\fBVT_OVERFLOW\fR\fR
.ad
.RS 15n
.rt  
The caller attempted an operation that is illegal on the disk and may overflow the fields in the data structure.
.RE

.SH ATTRIBUTES
.sp
.LP
See \fBattributes\fR(5) for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i) 
lw(2.75i) |lw(2.75i) 
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
MT-LevelUnsafe
.TE

.SH SEE ALSO
.sp
.LP
\fBfmthard\fR(1M), \fBformat\fR(1M), \fBprtvtoc\fR(1M), \fBioctl\fR(2), \fBefi_alloc_and_init\fR(3EXT), \fBattributes\fR(5), \fBdkio\fR(7I)
.SH BUGS
.sp
.LP
The \fBwrite_vtoc()\fR function cannot write a  \fBVTOC\fR on an unlabeled disk. Use \fBformat\fR(1M) for this purpose.
