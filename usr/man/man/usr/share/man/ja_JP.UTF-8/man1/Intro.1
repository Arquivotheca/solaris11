'\" te
.\" Copyright 1989 AT&T
.\" Copyright (c) 2008, 2010, Oracle and/or its affiliates. All rights reserved.
.TH Intro 1 "2010 年 7 月 12 日" "SunOS 5.11" "ユーザーコマンド"
.SH 名前
Intro, intro \- コマンドおよびアプリケーションプログラムの序章
.SH 機能説明
.sp
.LP
このセクションでは、このオペレーティングシステムで使用できるコマンドをアルファベット順に説明しています。
.sp
.LP
特別な範疇に収まるコマンドについては、次のように区別しています。
.sp
.ne 2
.mk
.na
\fB1B\fR
.ad
.RS 6n
.rt  
SunOS/BSD 互換性パッケージにだけ存在するコマンド。詳細は、『\fISunOS/BSD CompatibilityPackage\fR』を参照してください。 
.RE

.sp
.ne 2
.mk
.na
\fB1C\fR
.ad
.RS 6n
.rt  
ほかのシステムと通信するためのコマンド
.RE

.sp
.ne 2
.mk
.na
\fB1S\fR
.ad
.RS 6n
.rt  
SunOS システムにだけ存在するコマンド
.RE

.SS "その他のセクションについて"
.sp
.LP
詳細は、SunOS リファレンスマニュアルの各セクションを参照してください。
.RS +4
.TP
.ie t \(bu
.el o
システム管理のコマンドについては、セクション 1M を参照してください。
.RE
.RS +4
.TP
.ie t \(bu
.el o
ファイルの形式については、セクション 4 を参照してください。
.RE
.RS +4
.TP
.ie t \(bu
.el o
公式に使用できるファイルやそのほかのさまざまな情報については、セクション 5 を参照してください。
.RE
.sp
.LP
前述のコマンドや使用方法については、\fI『Solaris Advanced User\&'s Guide』\fR を参照してください。
.SS "マニュアルページのコマンドの構文"
.sp
.LP
特に説明しないかぎり、マニュアルページの「形式」の項で記述されるコマンドは、次の構文に従って、オプションやその他の引数を受け入れます。そして、次のように解釈されなければなりません。
.sp
.LP
\fIname\fR [\fB-\fR\fIoption\fR...] [\fIcmdarg\fR...] where:
.sp
.ne 2
.mk
.na
\fB[ ]\fR
.ad
.RS 15n
.rt  
必須でない \fIoption\fR (オプション) や \fIcmdarg\fR (引数) を囲みます。
.RE

.sp
.ne 2
.mk
.na
\fB\fI\&...\fR\fR
.ad
.RS 15n
.rt  
\fIoption\fR (オプション) や \fIcmdarg\fR (引数) が複数回発生することを意味します。
.RE

.sp
.ne 2
.mk
.na
\fB\fIname\fR\fR
.ad
.RS 15n
.rt  
実行可能ファイルの名前です。
.RE

.sp
.ne 2
.mk
.na
\fB{ }\fR
.ad
.RS 15n
.rt  
中括弧で囲まれたオプション・引数は相互に依存しており、1 つの組として取り扱う必要があります。
.RE

.sp
.ne 2
.mk
.na
\fB\fIoption\fR\fR
.ad
.RS 15n
.rt  
(常に "\(mi" が先行します。)\fInoargletter\fR... または、\fIargletter\fR \fIoptarg\fR[\fB,\fR...] 
.RE

.sp
.ne 2
.mk
.na
\fB\fInoargletter\fR\fR
.ad
.RS 15n
.rt  
引数が必要ないオプション 1 文字を表します。複数の \fInoargletter\fR を指定する場合、1 つの "\(mi" の後にまとめて指定できます (後述のガイドライン 5)。
.RE

.sp
.ne 2
.mk
.na
\fB\fIargletter\fR\fR
.ad
.RS 15n
.rt  
引数が必要なオプション 1 文字を表します。
.RE

.sp
.ne 2
.mk
.na
\fB\fIoptarg\fR\fR
.ad
.RS 15n
.rt  
\fIargletter\fR に必要なオプション引数 (文字列) です。複数の \fIoptargs\fR を \fIargletter\fR に指定する場合、コンマで区切る、または、タブかスペース文字で区切って引用符で囲まなければなりません (後述のガイドライン 8)。
.RE

.sp
.ne 2
.mk
.na
\fB\fIcmdarg\fR\fR
.ad
.RS 15n
.rt  
"\(mi" で始まらないパス名 (またはほかのコマンドの引数)。"\(mi" だけを指定すると標準入力を表します。\fI\fR
.RE

.sp
.LP
特に指定しないかぎり、オペランドまたはオプション引数が数値である (つまり、数値を含む) 場合、次のように処理されます。
.RS +4
.TP
.ie t \(bu
.el o
数字は 10 進数の整数として認識されます。
.RE
.RS +4
.TP
.ie t \(bu
.el o
0 から 2147483647 までの数字は、構文上、数値であると認識されます。
.RE
.RS +4
.TP
.ie t \(bu
.el o
ユーティリティーの機能説明において、負の数をオペランドまたはオプション引数として受け入れると記述されている場合、-2147483647 から 2147483647 までの数字は、構文上、数値であると認識されます。
.RE
.RS +4
.TP
.ie t \(bu
.el o
ここに示す範囲よりも大きな範囲は許可されます。
.RE
.SS "コマンド構文規格：ガイドライン"
.sp
.LP
ここで説明するコマンド構文のガイドラインは、既存のコマンドすべてに適用されているわけではありません。しかし、新規のコマンドはすべてこのガイドラインに従う予定です。すべてのシェルプロシージャーはパラメータの構文解析に \fBgetopts\fR(1) を使って、前後関係に依存するオプションが正しいかどうかチェックしなければなりません。これは、次に説明するガイドライン 3 から 10 までをサポートします。その他の規則については、コマンド自身がチェックしなければなりません。
.RS +4
.TP
1.
コマンド名 (前述の \fIname\fR) は、2 文字から 9 文字までの長さでなければなりません。
.RE
.RS +4
.TP
2.
コマンド名は、小文字と数字だけで構成されなければなりません。
.RE
.RS +4
.TP
3.
オプション名 (前述の \fIoption\fR) は、1 文字でなければなりません。
.RE
.RS +4
.TP
4.
オプションには "\(mi" が先行しなければなりません。
.RE
.RS +4
.TP
5.
引数なしのオプションは、1 つの "\(mi" の後に複数個まとめて指定できます。
.RE
.RS +4
.TP
6.
オプションとオプションの最初の引数 (前述の \fIoptarg\fR) の間は、タブかスペース文字で区切らなければなりません。
.RE
.RS +4
.TP
7.
オプションの引数は、必ず指定しなければなりません。
.RE
.RS +4
.TP
8.
オプションに複数のオプションの引数が続く場合、それぞれをコンマで区切る、または、タブかスペース文字で区切って 引用符で囲まなければなりません (たとえば、\fB-o\fR xxx,z,yy や \fB-o\fR"xxx z yy" など)。
.RE
.RS +4
.TP
9.
コマンド行上では、オプションはオペランド (前述の \fIcmdarg\fR) より前に指定しなければなりません。
.RE
.RS +4
.TP
10.
"\(mi\|\(mi" を使って、オプションの終わりを示すことができます。
.RE
.RS +4
.TP
11.
オプションの相対的な順番は問題になりません。
.RE
.RS +4
.TP
12.
オペランド (前述の \fIcmdarg\fR) の相対的な順番は、その位置によって、コマンドが決めた意味に影響します。
.RE
.RS +4
.TP
13.
"\(mi" の前後にスペース文字を指定した場合 ("\(mi" 'だけを指定した場合)、標準入力を表します。
.RE
.sp
.LP
Solaris を初めとする Sun 製品のために、前述のガイドラインを拡張する CLIP (コマンド行インタフェースパラダイム) という拡張セットが開発されました。この拡張セットの目的は、Sun のコマンド行構文を Linux システムで採用されている GNU コマンド行構文に近づけることです。これは、既存のユーティリティーを変更するわけではなく、また、この拡張セットをすべての新しいユーティリティーに適用するわけでもありません。つまり、必要に応じて、開発中のユーティリティーに適用するというだけのことです。
.sp
.LP
CLIP は、前述のガイドラインの完全な上位集合であり、IEEE 標準 1003.1-2001 (SUSv3) により近づいています。したがって、すべての GNU 構文を含むわけではありません。GNU 構文には、前述の IEEE 規則と衝突したり、あいまいな構造もあります。このような構造は許されません。
.sp
.LP
拡張 CLIP コマンド行構文は、次のようになります。
.sp
.in +2
.nf
utility_name -a --longopt1 -c option_argument \e
   -f option_argument --longopt2=option_argument \e
   --longopt3 option_argument operand
.fi
.in -2
.sp

.sp
.LP
この例では、ユーティリティーの名前は \fButility_name\fR です。ユーティリティーの名前の後には、オプション、オプション引数、およびオペランドが続きます。これらをまとめて「引数」と呼びます。1 つのハイフンの後に 1 つの文字または数字が続く引数 (たとえば、\fB-a\fR) のことを「短いオプション」と呼びます。2 つのハイフンの後に複数の文字、数字、またはハイフンが続く引数 (たとえば、\fB--longopt1\fR) のことを「長いオプション」と呼びます。短いオプションと長いオプションをまとめて「オプション」と呼びます (古くは「フラグ」とも)。オプションには、オプション引数をとるものもあります (前述の例では、\fB-c\fR option_argument)。最後のオプション (および、オプション引数) の後に続く引数のことを「オペランド」と呼びます。ある引数が最初のオペランドであると認識されると、それ以降の引数はすべて、オペラントであると認識されます。
.sp
.LP
短いオプションとオプション引数の間には、空白が入っているものと、空白が入っていないものがあります。つまり、短いオプションとオプション引数が隣接していて、本当は 2 つの引数なのだが、1 つの引数になっている場合があります。CLIP の仕様では、短いオプションとそのオプション引数の間には空白が入っていて、別々の引数である必要があります。しかし、昔のアプリケーションをサポートするために、いくつかの例外があります。
.RS +4
.TP
.ie t \(bu
.el o
ユーティリティーの「\fB形式\fR」節において、短いオプションとオプション引数の間にスペースが入っている場合 (前述の例では、\fB-c\fR option_argument)、アプリケーションは、短いオプションとオプション引数に、別々の引数を使用します。
.RE
.RS +4
.TP
.ie t \(bu
.el o
スペースが入っていない場合 (前述の例では、\fB-f\fRoption_argument)、アプリケーションは、短いオプションとオプション引数が直接 (つまり、スペースなしに) 隣接していて、1 つの引数であることを期待します。
.RE
.RS +4
.TP
.ie t \(bu
.el o
前述の要件にもかかわらず、アプリケーションは、「形式」節でスペースが入っている場合も、そうでない場合も、さらには、短いオプションとオプション引数が 1 つの引数となっている場合も、別々の引数になっている場合も、その短いオプションとオプション引数を受け入れる必要があります。
.RE
.RS +4
.TP
.ie t \(bu
.el o
長いオプションにオプション引数が付く場合、長いオプションとオプション引数の間には、必ず、等号記号 (=) を入れる必要があると定義されています。しかし、ユーティリティーの「\fBオプション\fR」節において、長いオプションとそのオプション引数の間に等号記号 (\fB=\fR) が入っている場合でも (前述の例では、\fB--longopt2= option_argument\fR)、アプリケーションは、長いオプションとそのオプション引数の間に、空白を入れる方法も受け入れる必要があります (前述の例では、\fB--longopt1 option_argument\fR)。 
.RE
.sp
.LP
CLIP は前述のガイドラインを拡張して、次のようなガイドラインを定義しています。
.sp
.ne 2
.mk
.na
\fB14.\fR
.ad
.RS 7n
.rt  
同じような操作をグループにまとめるには、\fBcommand subcommand [options][operands]\fR という形式が適切です。サブコマンド名はコマンド名と同じ規約 (ガイドライン 1 と 2) に従います。
.RE

.sp
.ne 2
.mk
.na
\fB15.\fR
.ad
.RS 7n
.rt  
長いオプションには「\fB--\fR」を前に付けて、適切な文字セットの英数字とハイフンだけを使用します。長いオプションの名前には、通常、1 つから 3 つまでの単語を使用して、それぞれをハイフンで区切ります。
.RE

.sp
.ne 2
.mk
.na
\fB16.\fR
.ad
.RS 7n
.rt  
長いオプションにオプション引数を指定するには、\fB--name=argument\fR の形式を使用する必要があります。ただし、\fB--name argument\fR の形式も受け入れます。 
.RE

.sp
.ne 2
.mk
.na
\fB17.\fR
.ad
.RS 7n
.rt  
すべてのユーティリティーは、次の 2 つの標準の長いオプションをサポートする必要があります。 \fB--version\fR (短いオプションの同義語は \fB-V\fR) と \fB--help\fR (短いオプションの同義語は \fB-?\fR) です。\fB--\fRversion の場合、短いオプションの同義語と同じオプションがすでに使用されている場合は、短いオプションの同義語を変更してもかまいません。ただし、短いオプションの同義語は、必ず、用意しておく必要があります。これらのオプションに遭遇した時点で、引数の処理は停止され、適切な出力が表示され、ユーティリティーは正常に終了します。 
.RE

.sp
.ne 2
.mk
.na
\fB18.\fR
.ad
.RS 7n
.rt  
短いオプションは 1 つの長いオプションとのみ対応し、同様に、長いオプションは 1 つの短いオプションとのみ対応する必要があります。昔の習慣や、コミュニティーで使用する同等のユーティリティーとの互換性を保つために、同等なオプションを用意できます。
.RE

.sp
.ne 2
.mk
.na
\fB19.\fR
.ad
.RS 7n
.rt  
短いオプションの名前は、次の規則に従って、長いオプションの名前から決定される必要があります。
.RS +4
.TP
1.
短いオプションの名前には、長いオプションの名前の最初の 1 文字を選択します。 
.RE
.RS +4
.TP
2.
最初の 1 文字がほかの短いオプションの名前と衝突する場合は、目立つ子音を選択します。
.RE
.RS +4
.TP
3.
最初の 1 文字も目立つ子音もほかの短いオプションの名前と衝突する場合は、目立つ母音を選択します。
.RE
.RS +4
.TP
4.
長いオプションの名前のどの文字も使用できない場合は、任意の文字を選択します。
.RE
.RE

.sp
.ne 2
.mk
.na
\fB20.\fR
.ad
.RS 7n
.rt  
長いオプションの名前が 1 文字だけの場合、短いオプションの名前にも同じ文字を使用する必要があります。1 文字だけの長いオプションは避けるべきです。1 文字だけの長いオプションを使用するのは、その文字がオプションの意味をもっとも端的に表すという、ごくまれな場合だけです。
.RE

.sp
.ne 2
.mk
.na
\fB21.\fR
.ad
.RS 7n
.rt  
サブコマンドの形式は、通常、拡張 CLIP ガイドラインのガイドライン 1 で説明した形式である必要があります。サブコマンドを省略する場合、コマンドにオペランドを指定してはいけません。この場合、遭遇したときに引数の処理を停止させるオプションだけを指定できます。この形式のコマンドを呼び出すときに、サブコマンドも引数も省略すると、エラーになります。このガイドラインは、コマンドとサブコマンドの構成として、<コマンド> \fB--help\fR、<コマンド> \fB-?\fR、<コマンド> \fB--version\fR、および <コマンド> \fB-V\fR という共通な形式を受け入れるために提供されます。
.RE

.sp
.LP
これらのガイドラインのいくつかは、ユーティリティーの作者にしか関係のないものです。これらのガイドラインをここで紹介したのは、この構文に従ってユーティリティーを作成したいユーザーのためです。
.SH 謝辞
.sp
.LP
Oracle America, Inc. gratefully acknowledges The Open Group for permission to reproduce portions of its copyrighted documentation. Original documentation from The Open Group can be obtained online at http://www.opengroup.org/bookstore/\&.
.sp
.LP
The Institute of Electrical and Electronics Engineers and The Open Group, have given us permission to reprint portions of their documentation.
.sp
.LP
In the following statement, the phrase ``this text'' refers to portions of the system documentation.
.sp
.LP
Portions of this text are reprinted and reproduced in electronic form in the SunOS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard for Information Technology -- Portable Operating System Interface (POSIX), The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the Institute of Electrical and Electronics Engineers, Inc and The Open Group. In the event of any discrepancy between these versions and the original IEEE and The Open Group Standard, the original IEEE and The Open Group Standard is the referee document. The original Standard can be obtained online at http://www.opengroup.org/unix/online.html\&.
.sp
.LP
This notice shall appear on any product containing this material. 
.SH 関連項目
.sp
.LP
\fBgetopts\fR(1), \fBwait\fR(1), \fBexit\fR(2), \fBgetopt\fR(3C)
.SH 診断
.sp
.LP
終了時、すべてのコマンドはステータスを表す 2 バイトを返します。1 つは、システムから提供され、終了の原因を示します。もう 1 つ (正常な終了において) は、プログラムから提供されます (\fBexit\fR(2) を参照)。前のバイトが \fB0\fR の場合、正常な終了を表します。後のバイトが \fB0\fR の場合、正常な実行を表します。後のバイトがゼロでない場合、間違った引数を指定した、または不良で受け入れることができないデータを指定したなどの障害を示します。このバイトは、「終了コード」、「終了ステータス」、「リターンコード」などさまざまな呼ばれ方をします。そして、特別な使い方がある場合に限って説明されます。
.SH 警告
.sp
.LP
NULL文字を含むファイルを処理しているときに、予測していなかった結果を出すコマンドがあります。通常このようなコマンドはテキスト入力行を文字列として扱っているので、行中のNULL文字 (つまり文字列の終端) に出合うと混乱してしまうからです。
