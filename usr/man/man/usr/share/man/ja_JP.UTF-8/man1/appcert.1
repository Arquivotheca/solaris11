'\" te
.\" Copyright (c) 2007, 2011, Oracle and/or its affiliates. All rights reserved.
.TH appcert 1 "2011 年 5 月 20 日" "SunOS 5.11" "ユーザーコマンド"
.SH 名前
appcert \- アプリケーションレベルの製品検査による Solaris インタフェースの不安定な使用の確認
.SH 形式
.LP
.nf
\fBappcert\fR [\fB-h\fR] [\fB-n\fR] [\fB-f\fR \fIinfile\fR] [\fB-w\fR \fIworking_dir\fR] [\fB-B\fR] [\fB-L\fR] 
     [\fB-S\fR] {\fIobj\fR | \fIdir\fR}...
.fi

.SH 機能説明
.sp
.LP
\fBappcert\fR ユーティリティーは、Solaris アプリケーションバイナリインタフェース (\fBABI\fR) へのアプリケーションの準拠を検査します。Solaris \fBABI\fR は、アプリケーションが安全かつ安定して使用できる Solaris の実行時ライブラリインタフェースを定義します。具体的には、\fBappcert\fR は不安定な実行時インタフェースへの依存、および Solaris の将来のリリースで製品の動作に障害を発生させる可能性があるそのほかの危険を特定します。
.sp
.LP
\fBappcert\fR は次の内容をチェックします。
.RS +4
.TP
.ie t \(bu
.el o
\fISolaris ライブラリ内での非公開シンボルの使用。\fRこれらは、開発者による使用が意図されていない非公開シンボル (つまり、関数またはデータ) で、Solaris ライブラリが相互の呼び出しに使用するインタフェースです。これらのシンボルにより、セマンティック動作が変更されるだけでなく、完全に削除されてしまう可能性もあるため (いわゆる\fB降格\fRシンボル)、アプリケーションがこれらのいずれにも依存していないことを確認することをお勧めします。
.RE
.RS +4
.TP
.ie t \(bu
.el o
\fI静的リンク。\fR具体的には、対応する共有オブジェクト \fB\&.so\fR の動的なリンクではなく、アーカイブ \fBlibc.a\fR、\fBlibsocket.a\fR、および \fBlibnsl.a\fR の静的リンクを指します。ある Solaris ライブラリから別のライブラリへの非公開シンボルによる呼び出しのセマンティクスはリリースによって変わる可能性があるため、ライブラリコードをバイナリオブジェクトに組み込むことはお勧めしません。
.RE
.RS +4
.TP
.ie t \(bu
.el o
\fI非結合シンボル。\fRこれらは、\fBappcert\fR の実行時に動的リンカーが解決できなかったライブラリシンボル (つまり、関数またはデータ) です。この問題は、環境の問題 (\fBLD_LIBRARY_PATH\fR など) または構築の問題 (コンパイル時に \fB-l\fR\fIlib\fR や \fB-z\fR \fBdefs\fR を指定しないなど) である可能性があります。このような問題を指摘したり、より深刻な問題を示したりする場合に、これらのシンボルにフラグが付けられます。
.RE
.sp
.LP
\fBappcert\fR によって、製品全体を簡単に検査できます (製品が多数のプログラムの集合体で、共有オブジェクトをサポートしている場合)。具体的には、\fBappcert\fR で製品のインストール先ディレクトリを調べます。
.sp
.LP
このタスクを実行するため、\fBappcert\fR は、製品内部のオブジェクトファイル (実行可能オブジェクトまたは共有オブジェクト) ごとにインタフェースの依存関係のプロファイルを作成し、依存関係にあるすべての Solaris システムインタフェースを特定します。(\fBappcert\fR は、この特定のために Solaris 実行時リンカーを使用します。)次に、これらの依存関係プロファイルを Solaris \fBABI\fR の定義と比較して、非公開の (アプリケーションレベルで使用する場合に安全でなく不安定な) インタフェースを識別します。
.sp
.LP
\fBappcert\fR は単純なロールアップレポートを生成し、製品のコンポーネントに問題があった場合は、そのコンポーネントと問題の内容を示します。開発者は、このレポートを使用することで、製品の安定性を複数のリリースにわたって検査できます。
.sp
.LP
\fBappcert\fR は、公開 (安全かつ安定した) Solaris インタフェースと非公開 (非 ABI) インタフェースの両方について、完全なインタフェース依存関係情報を生成します。必要に応じて、この情報を製品コンポーネントごとに確認することもできます。
.sp
.LP
重要: \fBappcert\fR は、チェック対象のアプリケーションを実行する環境と同じ環境で実行する必要があります。「注意事項」を参照してください。
.SH オプション
.sp
.LP
次のオプションがサポートされています。
.sp
.ne 2
.mk
.na
\fB\fB-B\fR\fR
.ad
.RS 18n
.rt  
\fBappcert\fR をバッチモードで実行すると、出力レポートはバイナリごとに 1 行ずつ表示されます。行の先頭の \fBPASS\fR はバイナリに問題が見つからなかったこと、\fBFAIL\fR は何らかの問題が見つかったこと、\fBINC\fR はバイナリを完全にはチェックできなかったことを意味します。ただし、これらのラベルを単純に文字どおりに解釈することは避けてください。たとえば、\fBPASS\fR は \fBappcert\fR で警告が発せられなかったことを意味しているにすぎません。これらの文字列は左寄せされるため、\fBgrep\fR \fB^FAIL\fR \fB ...\fR などを使用して選択できます。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-f\fR \fIinfile\fR\fR
.ad
.RS 18n
.rt  
確認するファイルの一覧 (各行に 1 ファイル) を含む \fIinfile\fR ファイルを指定します。この一覧は、コマンド行オペランドで処理された一覧に追加されます (下記の「オペランド」の項を参照)。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-h\fR\fR
.ad
.RS 18n
.rt  
使用法についての情報を出力します。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-L\fR\fR
.ad
.RS 18n
.rt  
\fBappcert\fR は、製品を検査して共有オブジェクトの存在を確認します。共有オブジェクトが見つかった場合、そのオブジェクトが存在するディレクトリを \fBLD_LIBRARY_PATH\fR に追加します。このフラグを使用すると、\fBappcert\fR によるこの動作は無効になります。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-n\fR\fR
.ad
.RS 18n
.rt  
このオプションを指定すると、ディレクトリを検索してチェックするバイナリを探すときに、シンボリックリンクをたどらなくなります。\fBfind\fR(1) を参照してください。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-S\fR\fR
.ad
.RS 18n
.rt  
Solaris ライブラリディレクトリ (\fB/usr/openwin/lib:/usr/dt/lib\fR) を \fBLD_LIBRARY_PATH\fR に追加します。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-w\fR \fIworking_dir\fR\fR
.ad
.RS 18n
.rt  
ライブラリコンポーネントを実行するディレクトリを特定して、一時ファイルを作成します (デフォルトは \fB/tmp\fR)。
.RE

.SH オペランド
.sp
.LP
次のオペランドがサポートされています。
.sp
.ne 2
.mk
.na
\fB{\fIobj\fR | \fIdir\fR} ...\fR
.ad
.RS 19n
.rt  
チェック対象の製品を構成するオブジェクトや、そのオブジェクトを含むディレクトリの完全な一覧。\fBappcert\fR はディレクトリを再帰的に検索して、オブジェクトファイルを探します。オブジェクトでないファイルは無視されます。
.RE

.SH 終了ステータス
.sp
.LP
次の終了値が返されます。
.sp
.ne 2
.mk
.na
\fB\fB0\fR\fR
.ad
.RS 5n
.rt  
\fBappcert\fR の実行に成功し、バイナリ安定性問題は見つかりませんでした。
.RE

.sp
.ne 2
.mk
.na
\fB\fB1\fR\fR
.ad
.RS 5n
.rt  
\fBappcert\fR の実行に失敗しました。
.RE

.sp
.ne 2
.mk
.na
\fB\fB2\fR\fR
.ad
.RS 5n
.rt  
確認した一部のオブジェクトに、バイナリ安定性問題が見つかりました。
.RE

.sp
.ne 2
.mk
.na
\fB\fB3\fR\fR
.ad
.RS 5n
.rt  
チェック可能なバイナリオブジェクトが見つかりませんでした。
.RE

.SH 制限事項
.sp
.LP
検査対象のオブジェクトファイルがライブラリに依存している場合、その依存関係を (コンパイラの \fB-l\fR スイッチを使用して) 内部に記録する必要があります。
.sp
.LP
検査対象のオブジェクトファイルがほかの共有ライブラリに依存している場合、\fBappcert\fR の実行時に、\fBLD_LIBRARY_PATH\fR または \fBRUNPATH\fR を使用してそれらのライブラリへのアクセスが可能になっている必要があります。
.sp
.LP
64 ビットアプリケーションをチェックするには、64 ビット Solaris カーネルがマシンで実行されている必要があります。\fBisalist\fR(1) を参照してください。また、現在、64 ビットアプリケーションでは静的リンクのチェックは実行されません。
.sp
.LP
\fBappcert\fR は、次を検査できません。
.RS +4
.TP
.ie t \(bu
.el o
完全または部分的に静的にリンクされているオブジェクトファイル。
.br
.in +2
完全に静的にリンクされたオブジェクトは、不安定と報告されます。
.in -2
.RE
.RS +4
.TP
.ie t \(bu
.el o
実行権が設定されていない実行可能ファイル。
.br
.in +2
これらのファイルはスキップされます。実行権のない共有オブジェクトはスキップされません。
.in -2
.RE
.RS +4
.TP
.ie t \(bu
.el o
setuid root であるオブジェクトファイル。
.br
.in +2
これらのファイルは、\fBldd\fR(1) の制限のためにスキップされます。チェックするにはアクセス権のコピーや変更を行なってください。
.in -2
.RE
.RS +4
.TP
.ie t \(bu
.el o
\fBELF\fR でない実行可能ファイル (シェルスクリプトなど)。
.RE
.RS +4
.TP
.ie t \(bu
.el o
C 言語以外の Solaris インタフェース (C++、Java など)。
.br
.in +2
Solaris ライブラリの呼び出しが C であれば、コード自体が C である必要はありません。
.in -2
.RE
.SH 出力ファイル
.sp
.LP
\fBappcert\fR は、検索結果を作業ディレクトリ内の次のファイルに記録します (デフォルトの作業ディレクトリは \fB/tmp/appcert.\fI?????\fR\fR)。
.sp
.ne 2
.mk
.na
\fB\fBIndex\fR\fR
.ad
.RS 11n
.rt  
チェック済みバイナリと、そのバイナリに固有の出力が存在する作業ディレクトリ内のサブディレクトリ間のマッピング。
.RE

.sp
.ne 2
.mk
.na
\fB\fBReport\fR\fR
.ad
.RS 11n
.rt  
\fBappcert\fR の実行時に標準出力に表示されたロールアップレポートのコピー。
.RE

.sp
.ne 2
.mk
.na
\fB\fBSkipped\fR\fR
.ad
.RS 11n
.rt  
\fBappcert\fR がチェックを求められたがスキップせざるをえなかったバイナリの一覧、および各バイナリをスキップした簡単な理由。
.RE

.sp
.LP
また、\fBappcert.\fI?????\fR/objects/\fR のサブディレクトリ内にある次のファイルには、オブジェクトごとの情報が含まれます。
.sp
.ne 2
.mk
.na
\fB\fBcheck.demoted_symbols\fR\fR
.ad
.RS 25n
.rt  
降格された Solaris シンボルと思われるシンボルの一覧
.RE

.sp
.ne 2
.mk
.na
\fB\fBcheck.dynamic.private\fR\fR
.ad
.RS 25n
.rt  
オブジェクトにより直接結合が行われる非公開の Solaris シンボルの一覧。
.RE

.sp
.ne 2
.mk
.na
\fB\fBcheck.dynamic.public\fR\fR
.ad
.RS 25n
.rt  
オブジェクトにより直接結合が行われる公開 Solaris シンボルの一覧。
.RE

.sp
.ne 2
.mk
.na
\fB\fBcheck.dynamic.unbound\fR\fR
.ad
.RS 25n
.rt  
\fBldd\fR \fB-r\fR を実行したときに、動的リンカーによりバインドされなかったシンボルの一覧。利便性を高めるため、\fBfile not found\fR という記載のある \fBldd\fR 出力行も含まれます。
.RE

.sp
.ne 2
.mk
.na
\fB\fBsummary.dynamic\fR\fR
.ad
.RS 25n
.rt  
プリンタ形式で書き込まれた、検査済みオブジェクトの動的バインドの要約 (各 Solaris ライブラリから使用される公開シンボルと非公開シンボルのテーブルも含まれる)。
.RE

.sp
.LP
ほかのファイルは、\fBappcert\fR によって内部的に使用される一時ファイルです。
.SH 出力メッセージ
.SS "非公開シンボルの使用"
.sp
.LP
非公開シンボルは、開発者や外部での使用が意図されていない Solaris ライブラリの関数またはデータ変数です。これらのシンボルは、Solaris ライブラリが相互の呼び出しや通信に使用するインタフェースです。これらのシンボルには、\fBpvs\fR(1) の出力内でシンボルのバージョン名 \fBSUNWprivate\fR が付けられます。
.sp
.LP
非公開シンボルにより、セマンティック動作が変更されるだけでなく、完全に削除されてしまう可能性もあるため (「降格」または「非推奨」のシンボル)、アプリケーションがどの非公開シンボルにも依存しないようにしてください。\fB\fR\fB\fR
.SS "降格シンボル"
.sp
.LP
降格シンボルとは、Solaris ライブラリの関数またはデータ変数のうち、かつてはそのライブラリに対して非公開で、その後の Solaris リリースで削除された (または、適用範囲がそのライブラリに対してローカルになった可能性のある) 関数またはデータ変数です。アプリケーションがこれらの降格シンボルのいずれかへの呼び出しを直接行なった場合、シンボルが削除されたリリースまたはそれ以降のリリースでは呼び出しに失敗します (再配置エラー)。
.sp
.LP
まれに、降格シンボルが以降のリリースで復帰することがありますが、それでもなお、アプリケーションが動作しないリリースが存在することに変わりはありません。
.sp
.LP
Sun Microsystems Inc. では、バイナリの安定性を高めるため、ライブラリの適用範囲設定の大半は Solaris 2.5.1 から 2.6 への移行時に実施しました。これらの内部インタフェースを完全に見えなくする (つまり、動的にリンクできなくする) ことで、開発者が不注意または故意にこれらのインタフェースを呼び出すことがなくなります。詳細は、\fI『Linker and Libraries Guide』\fRのバージョン管理の章を参照してください。
.SS "非結合シンボル"
.sp
.LP
非結合シンボルとは、アプリケーションにより参照され、\fBappcert\fR の実行時に動的リンカーが解決できなかったライブラリシンボル (つまり関数またはデータ) のことです。\fB注:\fR \fBappcert\fR はアプリケーションを実際に実行するわけではないため、動的リンクに影響を及ぼす一部の環境特性が適切に設定されない場合があります。
.sp
.LP
非結合シンボルは、バイナリ安定性問題があることを必ずしも示すわけではありません。\fBappcert\fR の実行時に、実行時動的リンカーがそれらのシンボルを解決できなかったことを示すだけです。
.sp
.LP
非結合シンボルが生成される原因として、\fBLD_LIBRARY_PATH\fR が正しく設定されていない場合があります。これが正しく設定されていることを確認し、すべてのバイナリオブジェクトが依存関係にあるすべてのライブラリ (製品固有のライブラリ、Solaris ライブラリ、または他社製のライブラリ) を検索できるようにしてください。その後、\fBappcert\fR を再度実行します。
.sp
.LP
シェルスクリプトを記述して環境を正しく設定してから、チェックするバイナリ上で \fBappcert\fR を実行する際に役立つ場合があります。
.sp
.LP
非結合シンボルが生成される別のよくある原因として、構築時にコンパイラおよび \fB\fR\fBld\fR(1) に \fB-l\fR スイッチが指定されなかったために、テスト対象の共有オブジェクトで動的依存関係が記録されなかった場合があります。このため、共有オブジェクトでは、リンク対象の\fB実行可能ファイル\fRに適切な依存関係が記録されている必要があります。
.sp
.LP
このような共有オブジェクトでは、標準的な方法でリンクを設定する (実行可能ファイルの構築時に指定する) か、または動的に開く (実行可能ファイルが、実行中のある時点で共有オブジェクトに対して \fBdlopen\fR(3C) を呼び出すなど) ことができます。どちらの場合でも、\fBappcert\fR の実行時に非結合シンボルが生成される可能性があります。前者の場合は、通常、\fBappcert\fR の実行前に \fBLD_LIBRARY_PATH\fR を適切に設定することによって解決できます。後者の場合 (\fBdlopen\fR) は、解決が困難になるのが普通です。状況によっては、\fBLD_PRELOAD\fR を適切に設定して必要なライブラリを事前に読み込むことができますが、この方法が常にうまくいくとは限りません。
.sp
.LP
環境が正しく設定され、非結合シンボルが生成されないようになっていることを確認するにはどうすればよいでしょうか。バイナリ上で \fBldd\fR \fB-r\fR を実行しても、「\fBfile not found\fR」エラーや「\fBsymbol not found\fR」エラーが出力されないように設定する必要があります。動的リンクの詳細については、\fBld.so.1\fR(1) および \fBldd\fR(1) を参照してください。
.sp
.LP
いずれの場合でも、\fBappcert\fR は、非結合シンボルがより深刻な問題を示していると考えられる場合に警告フラグを設定します。非結合シンボルは、降格シンボル (ライブラリから削除されたか、適用範囲がローカルに設定されたシンボル) への依存関係を示す場合があります。降格シンボルへの依存関係は、深刻なバイナリ安定性問題につながります。
.sp
.LP
ただし、環境を適切に設定すれば、ほとんどの非結合シンボルは取り除かれます。通常、可能な場合には常に、構築時にライブラリの依存関係を記録しておくことをお勧めします。これは、バイナリオブジェクトがより明確に定義され、自己完結されるようにするためです。また、共有オブジェクトを構築する際に \fB-z\fR \fB defs\fR フラグを使用して、コンパイル時にすべてのシンボル解決を強制することをお勧めします。詳細については、\fBld\fR(1) を参照してください。
.SS "結合が見つからない"
.sp
.LP
\fBappcert\fR は、テスト対象のバイナリオブジェクトごとに \fB/bin/ldd\fR \fB-r\fR を実行します。これにより、環境変数 \fBLD_DEBUG\fR="\fBfiles,bindings\fR" が設定されます。(詳細については、\fBldd\fR(1) および \fBld.so.1\fR(1) を参照してください)。何らかの理由でこのコマンドが失敗すると、\fBappcert\fR は動的シンボル結合情報を保持せず、「\fBno bindings\fR」が検出されます。
.sp
.LP
次のいずれかが真の場合、\fBappcert\fR の実行に失敗する可能性があります。
.RS +4
.TP
.ie t \(bu
.el o
バイナリオブジェクトに読み取り権がありません。
.RE
.RS +4
.TP
.ie t \(bu
.el o
バイナリオブジェクトが SUID または SGID で、かつユーザーが十分な特権を備えていません。
.RE
.RS +4
.TP
.ie t \(bu
.el o
バイナリオブジェクトが、実行権ビットの設定されていない実行可能ファイルです。
.RE
.RS +4
.TP
.ie t \(bu
.el o
バイナリオブジェクトが完全に静的にリンクされています。
.RE
.RS +4
.TP
.ie t \(bu
.el o
バイナリオブジェクトにライブラリ依存関係の情報が記録されていません。
.RE
.sp
.LP
そのほかにも理由は考えられます (メモリー不足など)。一般に、このフラグは、アクセス権または環境のために \fBappcert\fR がオブジェクトを完全には検査できなかったことを意味します。動的結合が記録可できるようにするため、アクセス権または環境の変更を試みてください。
.SS "廃止ライブラリ"
.sp
.LP
廃止ライブラリとは、使用が推奨されておらず、将来のリリースで Solaris から完全に削除される可能性のあるライブラリのことです。これらに依存するアプリケーションは将来の Solaris リリースで動作しなくなる可能性があるため、\fBappcert\fR はこれらにフラグを設定します。廃止ライブラリのインタフェース (非公開インタフェースを含む) はすべて凍結されており、変更されることはありません。
.SS "sys_errlist/sys_nerr の使用"
.sp
.LP
\fBsys_errlist\fR シンボルまたは \fBsys_nerr\fR シンボルを直接使用すると、参照が \fBsys_errlist\fR 配列の末尾を越えてしまう危険があります。これらのシンボルは、32 ビットバージョンの Solaris では非推奨であり、64 ビットバージョンにはまったく存在しません。代わりに \fBstrerror\fR(3C) を使用してください。
.SS "強いシンボルの使用と弱いシンボルの使用"
.sp
.LP
「弱い」シンボル (\fBsocket\fR など) に関連付けられている「強い」シンボル (\fB_socket\fR など) は、非公開 (将来動作が変更される可能性のあるもの) として予約されています。アプリケーションから直接参照するシンボルは、弱いシンボルだけにしてください (通常、強いシンボルは「\fB_\fR」で始まります)。
.sp
.LP
\fB注:\fR 特定の構築環境では、ソースコードが非公開シンボルを参照していないように思える場合でも、弱い (公開) シンボルの依存関係ではなく、強い (非公開) シンボルの依存関係がバイナリ内に記録されます。その場合でも、この発生原因を突き止めて、依存関係を修正するようにしてください。
.SH 注意事項
.sp
.LP
\fBappcert\fR は、チェック対象のアプリケーションを実行するのと同じ環境で実行する必要があります。そうでない場合は、Solaris ライブラリ内のインタフェースへの参照を正しく解決できない場合があります。次の手順を実行します。
.RS +4
.TP
1.
\fBLD_LIBRARY_PATH\fR およびその他のすべての環境特性が、アプリケーション実行時の設定になっていることを確認します。また、製品の一部である非 Solaris 共有オブジェクトの存在するディレクトリが含まれていて、参照時に検出できるようになっていることを確認します。
.RE
.RS +4
.TP
2.
チェック対象のすべてのバイナリが、次のようになっていることを確認します。
.RS +4
.TP
.ie t \(bu
.el o
動的にリンクされた \fBELF\fR オブジェクトである
.RE
.RS +4
.TP
.ie t \(bu
.el o
実行可能ファイルに実行権が設定されている (共有オブジェクトの場合は不要)
.RE
.RS +4
.TP
.ie t \(bu
.el o
\fBSUID\fR root ではない (それ以外の場合、チェックを行うには自分が root である必要があるため、必要に応じて \fBSUID\fR ではないコピーを作成してチェックする必要があります)。
.RE
.RE
.sp
.LP
シェルスクリプトを記述して環境を正しく設定してから \fBappcert\fR を実行する際に役立つ場合があります。
.sp
.LP
発生する可能性のある問題は、次のとおりです。
.RS +4
.TP
.ie t \(bu
.el o
\fBappcert\fR が、Solaris ライブラリの一部であると思われる非結合シンボルを報告します。
.sp
これは、Solaris 依存関係が記録されていない共有オブジェクトにアクセスするためにアプリケーションが \fBdlopen\fR(3C) を使用することが原因と思われます。動的リンカーが共有オブジェクト上呼び出されることはなく、Solaris シンボル結合の解決に使用できる依存関係情報がほかに存在しないため、この場合には \fBappcert\fR はシンボルの使用を解決できません。これは、Solaris 以外のシンボルでも発生することがあります。
.sp
この問題を回避するには、共有オブジェクトの構築時に、コンパイル行で \fB-l\fR\fIlib\fR オプションを使用して Solaris ライブラリへの依存関係が明示的に記録されていることを確認します (\fBcc\fR(1) および \fBld\fR(1) を参照)。
.RE
.RS +4
.TP
.ie t \(bu
.el o
\fBappcert\fR が、アプリケーションのソースコード内で参照されていない Solaris 非公開シンボルがアプリケーションで使用されていることを報告します。
.sp
ほとんどの場合、この問題は、そのシンボルを参照する Solaris ライブラリの静的リンクが原因です。\fBappcert\fR は動的リンカーを使用してシンボルを解決するため、\fBappcert\fR は、静的にリンクされたライブラリをアプリケーションコードの一部とみなします (ある意味では事実ですが)。これは、Solaris ヘッダーファイルでマクロ置換を実行した結果として発生することもあります。
.sp
この問題を回避するには、可能なかぎり、Solaris ライブラリアーカイブをアプリケーション内に静的にリンクしないようにします。
.RE
.RS +4
.TP
.ie t \(bu
.el o
\fBappcert\fR がライブラリを Solaris の一部として認識しません。
.sp
廃止された Solaris ライブラリの中には、シンボルのバージョン管理前に廃止された非常に古いライブラリがあります。このため、\fBappcert\fR はそのようなライブラリを Solaris の一部として認識できません。
.RE
.SH 使用上の留意点
.sp
.LP
「公開」および「非公開」という用語を「安定」および「不安定」と同等の意味で使用することは、混乱を招く可能性があります。\fB\fR\fB\fR\fB\fR\fB\fR特に、実験的なインタフェースや開発中のインタフェースは、ドキュメント化され、使用が推奨されているという意味では公開されていると言えます。ただし、そのようなインタフェースを使用して構築されたアプリケーションは、以降のリリースでは動作しない可能性があるという意味で不安定です。したがって、\fBappcert\fR の目的から、これらのインタフェースは開発が終了するまで非公開と分類されます。逆に、廃止されたインタフェースは、過去に公開されて安定しており、\fBappcert\fR では引き続き公開として扱われている場合でも、最終的には消滅するという意味で不安定です。さいわいなことに、このどちらかの状況が存在することはめったにありません。
.SH 属性
.sp
.LP
属性についての詳細は、\fBattributes\fR(5) を参照してください。
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i) 
lw(2.75i) |lw(2.75i) 
.
属性タイプ属性値
_
使用条件developer/appcert
_
インタフェースの安定性確実
.TE

.SH 関連項目
.sp
.LP
\fBcc\fR(1), \fBfind\fR(1), \fBisalist\fR(1), \fBld\fR(1), \fBldd\fR(1), \fBld.so.1\fR(1), \fBpvs\fR(1), \fBdlopen\fR(3C), \fBstrerror\fR(3C), \fBIntro\fR(4), \fBattributes\fR(5)
