'\" te
.\"  Copyright (c) 2008, 2011, Oracle and/or its affiliates. All rights reserved.
.TH pvs 1 "2011 年 6 月 8 日" "SunOS 5.11" "ユーザーコマンド"
.SH 名前
pvs \- 動的オブジェクトの内部バージョン情報の表示
.SH 形式
.LP
.nf
\fBpvs\fR [\fB-Cdlnorsv\fR] [\fB-I\fR \fIindex-expr\fR] [\fB-N\fR \fIname\fR] \fIfile\fR...
.fi

.SH 機能説明
.sp
.LP
\fBpvs\fR ユーティリティーは、\fBELF\fR ファイル内に含まれている内部バージョン情報を表示します。一般に、これらのファイルは動的な実行可能ファイル、共有オブジェクト、および場合によっては再配置可能なオブジェクトです。このバージョン情報は、2 つのカテゴリのいずれかに分類できます。
.RS +4
.TP
.ie t \(bu
.el o
バージョン定義
.RE
.RS +4
.TP
.ie t \(bu
.el o
バージョン依存関係
.RE
.sp
.LP
バージョン\fI定義\fRは、\fBELF\fR ファイルによって使用可能になるインタフェースについて記述します。各バージョン定義は、このファイルによって提供される一連の大域シンボルに関連付けられています。バージョン定義は、リンカーで \fB-M\fR オプションと関連付けられた \fImapfile\fR 指令を使用することによって、作成時にファイルに割り当てることができます。詳細は、\fI『Linker and Libraries Guide』\fR を参照してください。
.sp
.LP
バージョン\fI依存関係\fRは、共有オブジェクトの依存関係があるバージョン定義での、動的オブジェクトのバインディングの要件について記述します。動的オブジェクトが共有オブジェクトとともに作成される場合、リンカーは共有オブジェクトが依存関係にあることを示す情報を動的オブジェクト内に記録します。この依存関係は実行時に満たされている必要があります。共有オブジェクトにバージョン\fI定義\fRも含まれている場合は、動的オブジェクトの大域シンボル要件を満たすそれらのバージョン定義も、作成される動的オブジェクトに記録されます。プロセスの初期化時に、プロセスを作成するために使用される動的オブジェクトのインタフェース要件を検証する手段として、実行時リンカーはバージョン\fI依存関係\fRを使用します。
.SH オプション
.sp
.LP
次のオプションがサポートされています。\fB-d\fR オプションまたは \fB-r\fR オプションのいずれも指定されていない場合は、両方が有効になります。
.sp
.ne 2
.mk
.na
\fB\fB-C\fR\fR
.ad
.RS 17n
.rt  
DemanglesC++ シンボル名を復号化します。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-d\fR\fR
.ad
.RS 17n
.rt  
バージョン定義情報を出力します。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-I\fR \fIindex-expr\fR\fR
.ad
.RS 17n
.rt  
特定のバージョンインデックスまたはインデックスの範囲で検査するバージョンを限定します。たとえば、オブジェクト内のインデックス 3 のバージョンを表示するには、次のように指定します。
.sp
.in +2
.nf
example% \fBpvs -I 3 \fIfilename\fR\fR
.fi
.in -2
.sp

\fIindex-expr\fR には、上記の例に示したように、特定のバージョンを指定する負でない単一の整数値を指定できます。または、\fIindex-expr\fR は、バージョンの範囲を示すコロン (:) で区切られらた 2 つの負でない単一の整数値で構成することもできます。次の例では、ファイル内のバージョン 3、4、および 5 を表示します。
.sp
.in +2
.nf
example% \fBpvs -I 3:5 \fIfilename\fR\fR
.fi
.in -2
.sp

インデックスの範囲を指定する場合、2 番目の値を省略すると、ファイル内の最後の項目を意味することができます。たとえば、次の文は 10 番目から最後までのすべてのバージョンを一覧表示します。
.sp
.in +2
.nf
example% \fBpvs -I 10: \fIfilename\fR\fR
.fi
.in -2
.sp

マッチングオプション (\fB-I\fR、\fB-N\fR) の詳細な情報については、「マッチングオプション」を参照してください。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-l\fR\fR
.ad
.RS 17n
.rt  
バージョン管理のためにバインディングが大域からローカルに縮小された、すべてのシンボルを出力します。規約上、これらのシンボルエントリは、\fI\&.symtab\fR セクションに配置され、出力ファイルを表す \fIFILE\fR シンボルと、出力ファイルを生成するために使用される最初の入力ファイルを表す \fIFILE\fR シンボルの間に置かれます。これらの縮小されたシンボルエントリには、加工されたバージョン定義 \fB_LOCAL_\fR が割り当てられます。ファイルが取り除かれている (\fBstrip\fR(1) を参照) 場合、またはシンボルエントリの規約が判別できない場合、縮小されたシンボルは出力されません。
.sp
\fB-l\fR オプションを使用すると、\fB-s\fR オプションが暗黙的に有効になります。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-n\fR\fR
.ad
.RS 17n
.rt  
バージョン定義情報を正規化します。デフォルトでは、オブジェクト内のすべてのバージョン定義が表示されます。ただし、バージョン定義は別のバージョン定義を継承することがあります。正規化すると、各継承リストの先頭のみが表示されます。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-N\fR \fIname\fR\fR
.ad
.RS 17n
.rt  
\fB-d\fR オプションとともに \fB-N\fR を使用すると、指定されたバージョン定義 \fIname\fR とそれを継承したバージョン定義の情報のみが出力されます。
.sp
\fB-r\fR オプションとともに \fB-N\fR を使用すると、指定された依存関係ファイル \fIname\fR の情報のみが出力されます。ファイル名の後ろでバージョンを括弧で囲んで指定することで、依存関係ファイルを特定のバージョンに限定できます。
.sp
.in +2
.nf
example% \fBpvs -N 'dependency (version)' \fIfilename\fR\fR
.fi
.in -2
.sp

マッチングオプション (\fB-I\fR、\fB-N\fR) の詳細な情報については、「マッチングオプション」を参照してください。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-o\fR\fR
.ad
.RS 17n
.rt  
バージョン定義を 1 行単位で出力します。デフォルトでは、ファイル、バージョン定義、およびシンボルの出力は、人間による検査を容易にするためにインデントされます。このオプションを使用すると、各出力行の前にファイル名とバージョン定義名が付けられ、自動化ツールで分析する場合、より便利になることがあります。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-r\fR\fR
.ad
.RS 17n
.rt  
バージョン依存関係 (要件) 情報を出力します。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-s\fR\fR
.ad
.RS 17n
.rt  
各バージョン定義に関連付けられているシンボルを出力します。オブジェクトによって定義されているバージョンのデータシンボルには、データ項目のサイズ (バイト単位) が一緒に出力されます。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-v\fR\fR
.ad
.RS 17n
.rt  
詳細情報を出力します。弱いバージョン定義とバージョン定義の継承を示します。\fB-N\fR オプションおよび \fB-d\fR オプションとともに使用すると、基本バージョン定義の継承も表示されます。\fB-s\fR オプションとともに使用すると、バージョンシンボル定義も表示されます。
.RE

.SH オペランド
.sp
.LP
次のオペランドがサポートされています。
.sp
.ne 2
.mk
.na
\fB\fIfile\fR\fR
.ad
.RS 8n
.rt  
内部バージョン情報を表示する \fBELF\fR ファイル。
.RE

.SH 使用法
.SS "マッチングオプション"
.sp
.LP
\fB-I\fR オプションと \fB-N\fR オプションは、まとめて\fBマッチングオプション\fRと呼ばれます。これらのオプションは、インデックスまたは名前によって、検査するバージョンの範囲を絞り込むために使用されます。
.sp
.LP
任意の数およびタイプのマッチングオプションを組み合わせて、対象となる \fBpvs\fR の呼び出しで使用できます。この場合、\fBpvs\fR は使用されたすべてのマッチングオプションと一致する、すべてのバージョンの上位集合を表示します。この機能を使用すると、各項目の指定にもっとも簡単な形式を使用し、複雑な項目のグループを選択できます。
.SH 使用例
.LP
\fB例 1 \fRバージョン定義の表示
.sp
.LP
次の例では、\fBlibelf.so.1\fR のバージョン定義を表示します。

.sp
.in +2
.nf
% \fBpvs -d /lib/libelf.so.1\fR
	libelf.so.1;
	SUNW_1.1
.fi
.in -2
.sp

.LP
\fB例 2 \fR1 行単位の出力の作成
.sp
.LP
\fImapfile\fR バージョン管理指令を作成するのに適した、正規化された 1 行単位の出力は、\fB-n\fR オプションと \fB- o\fR オプションを使用して作成できます。

.sp
.in +2
.nf
% \fBpvs -don /lib/libelf.so.1\fR
/lib/libelf.so.1 -	SUNW_1.1;
.fi
.in -2
.sp

.LP
\fB例 3 \fRバージョン要件の表示
.sp
.LP
次の例では、\fBldd\fR と \fBpvs\fR のバージョン要件を表示します。

.sp
.in +2
.nf
% \fBpvs -r /usr/bin/ldd /usr/bin/pvs\fR
/usr/bin/ldd:
	libelf.so.1 (SUNW_1.1);
	libc.so.1 (SUNW_1.1);
/usr/bin/pvs:
	libelf.so.1 (SUNW_1.1);
	libc.so.1 (SUNW_1.1);
.fi
.in -2
.sp

.LP
\fB例 4 \fR依存関係シンボルのバージョンの判別
.sp
.LP
次の例では、\fBldd\fR コマンドによって実行時に printf 関数を見つけることが予期されている共有オブジェクトと、それが属するバージョンを表示します。

.sp
.in +2
.nf
% \fBpvs -ors /usr/bin/ldd | grep ' printf'\fR
/usr/bin/ldd -  libc.so.1 (SYSVABI_1.3): printf;
.fi
.in -2
.sp

.LP
\fB例 5 \fR特定バージョンのすべての依存関係シンボルの判別
.sp
.LP
\fB-N\fR オプションを使用すると、特定バージョンに属する依存関係のすべてのシンボルのリストを取得できます。\fBldd\fR が \fBlibc.so.1\fR のバージョン \fBSYSVABI_1.3\fR から見つけるシンボルを判別するには、次のコマンドを実行します。

.sp
.in +2
.nf
% \fBpvs -s -N 'libc.so.1 (SYSVABI_1.3)' /usr/bin/ldd\fR

       libc.so.1 (SYSVABI_1.3):
               _exit;
               strstr;
               printf;
               __fpstart;
               strncmp;
               lseek;
               strcmp;
               getopt;
               execl;
               close;
               fflush;
               wait;
               strerror;
               putenv;
               sprintf;
               getenv;
               open;
               perror;
               fork;
               strlen;
               geteuid;
               access;
               setlocale;
               atexit;
               fprintf;
               exit;
               read;
               malloc;
.fi
.in -2
.sp

.sp
.LP
\fBldd\fR によって使用される具体的なシンボルのリストは、Solaris のリリースによって異なる場合があります。

.LP
\fB例 6 \fR基本として定義されているバージョンの、インデックスによる表示
.sp
.LP
規約上、オブジェクトによって定義されている基本大域バージョンは、そのオブジェクトの名前を持ちます。たとえば、\fBpvs\fR の基本バージョンには、\fB\&'pvs'\fR という名前が付けられます。オブジェクトの基本バージョンは、常にバージョンインデックス 1 です。したがって、\fB-I\fR オプションを使用すると、名前を指定することなく、オブジェクトの基本バージョンを表示できます。

.sp
.in +2
.nf
% \fBpvs -v -I 1 /usr/bin/pvs\fR
       pvs [BASE];
.fi
.in -2
.sp

.SH 終了ステータス
.sp
.LP
要求されたバージョン情報が見つからなかった場合は、ゼロ以外の値が返されます。それ以外の場合は、値 \fB0\fR が返されます。
.sp
.LP
次のいずれかが真である場合は、バージョン情報が見つからなかったと判定されます。
.RS +4
.TP
.ie t \(bu
.el o
\fB-d\fR オプションが指定され、バージョン定義が見つからない。
.RE
.RS +4
.TP
.ie t \(bu
.el o
\fB-r\fR オプションが指定され、バージョン要件が見つからない。
.RE
.RS +4
.TP
.ie t \(bu
.el o
\fB-d\fR オプションと \fB-r\fR オプションのいずれもが指定されず、バージョン定義またはバージョン要件が見つからない。
.RE
.SH 属性
.sp
.LP
属性についての詳細は、\fBattributes\fR(5) を参照してください。
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i) 
lw(2.75i) |lw(2.75i) 
.
属性タイプ属性値
_
使用条件developer/base-developer-utilities
.TE

.SH 関連項目
.sp
.LP
\fBelfdump\fR(1), \fBld\fR(1), \fBldd\fR(1), \fBstrip\fR(1), \fBelf\fR(3ELF), \fBattributes\fR(5)
.sp
.LP
\fI『Linker and Libraries Guide』\fR
