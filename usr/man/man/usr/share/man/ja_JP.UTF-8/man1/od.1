'\" te
.\" Copyright 1989 AT&T
.\" Copyright (c) 1992, X/Open Company Limited All Rights Reserved
.\" Portions Copyright (c) 2005, 2011, Oracle and/or its affiliates. All rights reserved.
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for permission to reproduce portions of its copyrighted documentation. Original documentation from The Open Group can be obtained online at http://www.opengroup.org/bookstore/.
.\" The Institute of Electrical and Electronics Engineers and The Open Group, have given us permission to reprint portions of their documentation. In the following statement, the phrase "this text" refers to portions of the system documentation. Portions of this text are reprinted and reproduced in electronic form in the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard for Information Technology -- Portable Operating System Interface (POSIX), The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the Institute of Electrical and Electronics Engineers, Inc and The Open Group. In the event of any discrepancy between these versions and the original IEEE and The Open Group Standard, the original IEEE and The Open Group Standard is the referee document. The original Standard can be obtained online at http://www.opengroup.org/unix/online.html. This notice shall appear on any product containing this material.
.TH od 1 "2011 年 6 月 7 日" "SunOS 5.11" "ユーザーコマンド"
.SH 名前
od \- 8 進ダンプ
.SH 形式
.LP
.nf
\fB/usr/bin/od\fR [\fB-bcCDdFfOoSsvXx\fR] [\fB-\fR] [\fIfile\fR] [\fIoffset_string\fR]
.fi

.LP
.nf
\fB/usr/bin/od\fR [\fB-bcCDdFfOoSsvXx\fR] [\fB-A\fR \fIaddress_base\fR] [\fB-j\fR \fIskip\fR] 
     [\fB-N\fR \fIcount\fR] [\fB-t\fR \fItype_string\fR]... [\fB-\fR] [\fIfile\fR]...
.fi

.LP
.nf
\fB/usr/xpg4/bin/od\fR [\fB-bcCDdFfOoSsvXx\fR] [\fIfile\fR] [\fIoffset_string\fR]
.fi

.LP
.nf
\fB/usr/xpg4/bin/od\fR [\fB-bcCDdFfOoSsvXx\fR] [\fB-A\fR \fIaddress_base\fR] 
     [\fB-j\fR \fIskip\fR] [\fB-N\fR \fIcount\fR] [\fB-t\fR \fItype_string\fR]... [\fIfile\fR]...
.fi

.SH 機能説明
.sp
.LP
\fBod\fR コマンドは、指定された入力ファイルを順番に標準出力にコピーします。このとき、\fB-t\fR または \fB-bcCDdFfOoSsvXx\fR オプションで指定された出力タイプに従って入力データを変換します。出力タイプ指定が省略された場合には、\fB-t\fR \fBo2\fR が指定されたものと見なします。\fB-bcCDdFfOoSstvXx\fR オプションを複数回記述して、複数のタイプを指定することも可能です。その場合、記述した順序に従って出力行がタイプごとに書き込まれます。\fIfile\fR の指定がない場合は、標準入力を使用します。[\fIoffset_string\fR] オペランドと \fB-A\fR、\fB-j\fR、\fB-N\fR、\fB-t\fR の各オプションは、互いに排他の関係にあります。こでは、次の用語を使用しています。
.sp
.ne 2
.mk
.na
\fBワード\fR
.ad
.sp .6
.RS 4n
16 ビットのユニットを表します。マシンのワードサイズとは無関係です。
.RE

.sp
.ne 2
.mk
.na
\fBロングワード\fR
.ad
.sp .6
.RS 4n
32 ビットのユニットを表します。
.RE

.sp
.ne 2
.mk
.na
\fBダブルロングワード\fR
.ad
.sp .6
.RS 4n
64 ビットのユニットを表します。
.RE

.SH オプション
.sp
.LP
次のオプションがサポートされています。
.sp
.ne 2
.mk
.na
\fB\fB-A\fR \fIaddress_base\fR \fR
.ad
.RS 20n
.rt  
入力オフセット値の基数を指定します。\fIaddress_base\fR 引数は次に述べる文字のいずれかでなければなりません。文字 \fBd\fR、\fBo\fR、 \fBx\fR は、それぞれ 10 進、8 進、16 進を表します。文字 \fBn\fR は、オフセットは出力しない旨を表します。\fB-A\fR \fBn\fR を指定しないかぎり、出力行の先頭には、次に書き込まれるバイトの入力オフセット値 (入力ファイルでの累積値) が付加されます。また、入力データがすべて処理されたあとは、最後に出力されたバイトの次のバイトのオフセット値が表示されます。\fB-A\fR\fIaddress_base\fR オプションも [\fIoffset_string\fR] オペランドも指定されない場合、入力オフセット値は 8 進数で表示されます。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-b\fR \fR
.ad
.RS 20n
.rt  
バイトを 8 進数で解釈します。この指定は \fB-t\fR \fBo1\fR と同等の意味です。
.RE

.SS "/usr/bin/od"
.sp
.ne 2
.mk
.na
\fB\fB-c\fR \fR
.ad
.RS 7n
.rt  
シングルバイト文字を表示します。非図形文字のなかには、C 言語のエスケープで表示されるものもあります。 
.sp
.in +2
.nf
null	        \fB\e0\fR
backspace	   \fB\eb\fR
form-feed	   \fB\ef\fR
new-line	   \fB\en\fR
return	   \fB\er\fR
tab	        \fB\et\fR
.fi
.in -2
.sp

その他の文字は、3 桁の 8 進数で表示されます。例:  
.sp
.in +2
.nf
\fBecho "hello world" | od \(mic\fR
0000000   h   e   l   l   o       w   o   r   l   d  \en
0000014
.fi
.in -2
.sp

.RE

.SS "/usr/xpg4/bin/od"
.sp
.ne 2
.mk
.na
\fB\fB-c\fR \fR
.ad
.RS 19n
.rt  
\fBLC_CTYPE\fR ロケール カテゴリの現在の設定に基づき、バイトをシングルバイト文字または複数バイト文字で解釈します。印刷可能な複数バイト文字は、文字の最初のバイトに対応する領域に書き込まれます。残りのバイトに対応する領域には、文字が継続することを示す \fB**\fR が書き込まれます。非図形文字は、\fB-C\fR オプションを使用したときと同じように解釈されます。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-C\fR \fR
.ad
.RS 19n
.rt  
\fBLC_CTYPE\fR ロケール カテゴリの現在の設定に基づき、バイトをシングルバイト文字または複数バイト文字で解釈します。印刷可能な複数バイト文字は、文字の最初のバイトに対応する領域に書き込まれます。残りのバイトに対応する領域には、文字が継続することを示す ** が書き込まれます。非図形文字のなかには、C 言語のエスケープで表示されるものもあります。 
.sp
.in +2
.nf
null	        \fB\e0\fR
backspace	   \fB\eb\fR
form-feed	   \fB\ef\fR
new-line	   \fB\en\fR
return	   \fB\er\fR
tab	        \fB\et\fR
.fi
.in -2
.sp

その他の非図形文字に関しては、各バイトにつき 3 桁の 8 進数が表示されます。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-d\fR \fR
.ad
.RS 19n
.rt  
ワードを符号なし 10 進数で解釈します。この指定は \fB-t\fR \fBu2\fR と同等の意味です。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-D\fR \fR
.ad
.RS 19n
.rt  
ロングワードを符号なし 10 進数で解釈します。この指定は \fB-t\fR \fBu4\fR と同等の意味です。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-f\fR \fR
.ad
.RS 19n
.rt  
ロングワードを浮動小数点で解釈します。この指定は \fB-t\fR \fBf4\fR と同等の意味です。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-F\fR \fR
.ad
.RS 19n
.rt  
ダブルロングワードを拡張精度で解釈します。この指定は \fB-t\fR \fBf8\fR と同等の意味です。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-j\fR \fIskip\fR \fR
.ad
.RS 19n
.rt  
入力データの先頭の \fIskip\fR 個のバイトをスキップします。\fBod\fR コマンドによる読み取りまたはシークは、連結された入力ファイルにおいて \fIskip\fR バイトを超えた地点から行われます。入力データの合計長が \fIskip\fR バイトに満たない場合、\fBod\fR コマンドは標準エラー出力に診断メッセージを書き出し、ゼロ以外の終了ステータスコードで処理を終了します。
.sp
デフォルトでは \fIskip\fR 引数は 10 進数と解釈されます。先頭に \fB0x\fR または \fB0X\fR が付加されていれば、オフセット値は 16 進数と解釈されます。また先頭が \fB0\fR のときは、8 進数と解釈されます。また数値の後に文字 \fBb\fR、\fBk\fR、または \fBm\fR を付加すると、それぞれ \fB512\fR、\fB1024\fR、または \fB1\|048\|576\fR バイトの倍数と見なされます。\fIskip\fR 値が 16 進数のとき、最後に \fBb\fR が付加されていてもそれは 16 進の数字と見なされます。アドレス表示は \fB0000000\fR から始まります。その基数が \fIskip\fR 引数の基数によって示されることはありません。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-N\fR \fIcount\fR \fR
.ad
.RS 19n
.rt  
\fIcount\fR が示すバイト数を超えない範囲で入力データをフォーマットします。デフォルトでは \fIcount\fR は 10 進数と解釈されます。先頭に \fB0x\fR または \fB0X\fR が付加されていれば、\fIcount\fR は 16 進数と解釈されます。また先頭が \fB0\fR のときは、8 進数と解釈されます。入力データが (\fB-j\fR\fIskip\fR 指定時はスキップ完了後) \fIcount\fR バイト分存在しない場合でも、エラーとは見なされません。\fBod\fR コマンドは、存在している分の入力データをフォーマットします。表示されるアドレスの基数が \fIcount\fR 引数の基数によって表されることはありません。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-o\fR \fR
.ad
.RS 19n
.rt  
ワードを 8 進数で解釈します。この指定は \fB-t\fR \fBo2\fR と同等の意味です。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-O\fR \fR
.ad
.RS 19n
.rt  
ロングワードを符号なし 8 進数で解釈します。この指定は \fB-t\fR \fBo4\fR と同等の意味です。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-s\fR \fR
.ad
.RS 19n
.rt  
ワードを符号付き 10 進数で解釈します。この指定は \fB-t\fR \fBd2\fR と同等の意味です。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-S\fR \fR
.ad
.RS 19n
.rt  
ロングワードを符号付き 10 進数で解釈します。この指定は \fB-t\fR \fBd4\fR と同等の意味です。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-t\fR \fItype_string\fR \fR
.ad
.RS 19n
.rt  
出力タイプを指定します。\fItype_string\fR オプション引数は、入力データを書き出す際に用いる出力タイプを表す文字列でなければなりません。文字列は、出力タイプを表す次の文字で構成されていなければいけません。 
.sp
.ne 2
.mk
.na
\fB\fBa\fR \fR
.ad
.RS 6n
.rt  
「名前を与えられた文字」\fI\fRバイトを名前を与えられた文字として解釈します。このタイプ指定では、各バイトのうち最下位の 7 ビットだけが用いられます。次の表に示す値を持つバイトが、文字に対応した名前を使って出力されます。 
.sp
\fBod\fR における名前を与えられた文字
.sp
.in +2
.nf
Value   Name  
    
\000    nul
\001    soh
\002    stx
\003    etx
\004    eot
\005    enq
\006    ack
\007    bel
\010    bs
\011    ht
\012    lf
\013    vt
\014    ff
\015    cr
\016    so
\017    si
\020    dle
\021    dc1
\022    dc2
\023    dc3
\024    dc4
\025    nak
\026    syn
\027    etb
\030    can
\031    em
\032    sub
\033    esc
\034    fs
\035    gs
\036    rs
\037    us
\040    sp
\177    del
.fi
.in -2
.sp

.RE

.sp
.ne 2
.mk
.na
\fB\fBc\fR \fR
.ad
.RS 6n
.rt  
「文字」を表します。\fI\fR\fBLC_CTYPE\fR ロケール カテゴリの現在の設定に基づき、バイトをシングルバイト文字または複数バイト文字で解釈します。印刷可能な複数バイト文字は、文字の最初のバイトに対応する領域に書き込まれます。残りのバイトに対応する領域には、文字が継続することを示す \fB**\fR が書き込まれます。次の非図形文字は、C 言語のエスケープで表示されます。\fB\e0\fR、\fB\ea\fR、\fB\eb\fR、\fB\ef\fR、\fB\en\fR、\fB\er\fR、\fB\et\fR、\fB\ev\fR。その他の非図形文字に関しては、各バイトにつき 3 桁の 8 進数が表示されます。
.RE

タイプ指定文字である \fBd\fR、\fBf\fR、\fBo\fR、\fBu\fR、\fBx\fR の後には、出力タイプが発生するたびに変換するバイト数を示す符号なし 10 進数を記述することもできます 
.sp
.ne 2
.mk
.na
\fB\fBf\fR \fR
.ad
.RS 17n
.rt  
「浮動小数点数」を表します。\fI\fR後に文字 \fBF\fR、 \fBD\fR、または \fBL\fR を付加して、タイプが \fBfloat\fR、\fBdouble\fR、\fBlong double\fR の項目に対して変換を行う旨を表すこともできます。
.RE

.sp
.ne 2
.mk
.na
\fB\fBd\fR、\fBo\fR、\fBu\fR、\fBx\fR\fR
.ad
.RS 17n
.rt  
それぞれ符号付き 10 進数、8 進数、符号なし 10 進数、16 進数を表します。\fI\fR\fI\fR\fI\fR\fI\fR後に文字 \fBC\fR、\fBS\fR、\fBI\fR、または \fBL\fR を付加して、タイプが \fBchar\fR、\fBshort\fR、\fBint\fR、または \fBlong\fR の項目に対して変更を行う旨を表すこともできます。
.RE

1 つの \fItype_string\fR 中に複数のタイプを続けて指定できます。また \fB-t\fR オプションを複数個指定することが可能です。その場合、タイプ指定文字を記述した順序に従って、出力行がタイプごとに書き込まれます。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-v\fR \fR
.ad
.RS 19n
.rt  
すべてのデータを表示します (冗長) 。\fB-v\fR オプションを省略すると、直前の出力行に等しい (バイトオフセットを除く) 行は、すべてアスタリスク (*) だけから成る行に置き換えられます。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-x\fR \fR
.ad
.RS 19n
.rt  
ワードを 16 進数で解釈します。この指定は \fB-t\fR \fBx2\fR と同等の意味です。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-X\fR \fR
.ad
.RS 19n
.rt  
ロングワードを 16 進数で解釈します。この指定は \fB-t\fR \fBx4\fR と同等の意味です。
.RE

.SH オペランド
.SS "/usr/bin/od"
.sp
.LP
次のオペランドは、\fB/usr/bin/od\fR でのみ指定されます。
.sp
.ne 2
.mk
.na
\fB\fB\(mi\fR \fR
.ad
.RS 26n
.rt  
指定されたすべてのファイルに加えて、標準入力を使用します。このオペランドを省略すると、\fIfile\fR オペランドを指定しなかった場合だけ、標準入力が使用されます。
.RE

.sp
.ne 2
.mk
.na
\fB\fIfile\fR \fR
.ad
.RS 26n
.rt  
読み出すファイルのパス名。\fIfile\fR を指定しないと、標準入力が読み込まれます。オペランドの数が 2 以内であり、\fB-A\fR、\fB-j\fR、\fB-N\fR、\fB-t\fR オプションがすべて省略され、さらに次の項目のいずれかが真である場合には、\fI\fR 
.RS +4
.TP
1.
最後のオペランドの最初の文字が正の記号 (+) である。
.RE
.RS +4
.TP
2.
2 番目のオペランドの最初の文字が数値である。
.RE
.RS +4
.TP
3.
2 番目のオペランドの最初の文字が \fBx\fR であり、2 番目のオペランドの 2 番目の文字が小文字の 16 進数文字または数字である。
.RE
.RS +4
.TP
4.
2 番目のオペランドが "\fBx\fR" である。
.RE
.RS +4
.TP
5.
2 番目のオペランドが "\fB\&." である。\fR
.RE
対応するオペランドはファイルのオペランドではなく、オフセット値指定と見なされます。
.sp
\fB-N\fR count オプションを省略した場合、表示はファイルの終わりに到達するまで続けられます。
.RE

.sp
.ne 2
.mk
.na
\fB\fB[+][0]\fR \fIoffset\fR \fB[.][b|B]\fR\fR
.ad
.br
.na
\fB\fB[+][0][\fR\fIoffset\fR] \fB[.]\fR\fR
.ad
.br
.na
\fB\fB[+][0x|x]\fR[\fIoffset\fR]\fR
.ad
.br
.na
\fB\fB [+][0x|x]\fR \fIoffset\fR\fB[B]\fR\fR
.ad
.RS 26n
.rt  
\fIoffset_string\fR オペランドは、ファイル中のダンプを始める位置のバイトオフセット値を指定します。デフォルトでは、オフセット値は 8 進数のバイトで解釈され表示されます。\fIoffset\fR が \fB"0"\fR で始まる場合には、オフセット値は 8 進数で解釈されます。\fIoffset\fR が \fB"x"\fR または \fB"0x"\fR で始まる場合には、オフセット値は 16 進数で解釈され、\fB"b"\fR を付加した場合には、16 進数の数字であるとみなされます。\fB"."\fR を付加すると、オフセット値は 10 進数で解釈されます。 \fB"b"\fR または \fB"B"\fR を付加すると、オフセット値は \fB512\fR バイト単位で解釈されます。\fIfile\fR 引数を省略する場合には、オフセット値の先頭に (\fB+\fR) を付加しなければなりません。\fB\fRアドレスの表示は、指定されたオフセットから始まります。アドレスの基数は、指定してあれば オフセットの基数と同じになります。指定していない場合は 8 進数になります。10 進数は 8 進数を上書きし、同じオフセットオペランドに 16 進数と 10 進数の両方の変換を指定するとエラーになります。
.RE

.SS "/usr/xpg4/bin/od"
.sp
.LP
次のオペランドは、\fB/usr/xpg4/bin/od\fR でのみ指定できます。
.sp
.ne 2
.mk
.na
\fB\fIfile\fR \fR
.ad
.RS 29n
.rt  
始めの 2 つの項目のどちらかが真でなければならないことを除いては、\fB/usr/bin/od\fR と同じ。
.RE

.sp
.ne 2
.mk
.na
\fB\fB[+] [0] \fR\fIoffset\fR \fB[.]\|[b|B]\fR\fR
.ad
.br
.na
\fB\fB+ [\fR\fIoffset\fR] \fB[.]\fR\fR
.ad
.br
.na
\fB\fB[+][0x]\fR[\fIoffset\fR]\fR
.ad
.br
.na
\fB\fB [+][0x]\fR \fIoffset\fR\fB\|[B]\fR\fR
.ad
.br
.na
\fB\fB+x [\fR\fIoffset\fR\fB]\fR\fR
.ad
.br
.na
\fB\fB+x\fR\fIoffset \fR\fB[B]\fR\fR
.ad
.RS 29n
.rt  
\fI\fRオフセット値の記述は \fB/usr/bin/od\fR と同じです。
.RE

.SH 環境
.sp
.LP
\fBod\fR の実行に影響を与える次の環境変数についての詳細は、\fBenviron\fR(5) を参照してください。\fBLANG\fR、\fBLC_ALL\fR、\fBLC_CTYPE\fR、\fBLC_MESSAGES\fR、\fBLC_NUMERIC\fR、および \fBNLSPATH\fR。
.SH 終了ステータス
.sp
.LP
次の終了値が返されます。
.sp
.ne 2
.mk
.na
\fB\fB0\fR \fR
.ad
.RS 7n
.rt  
正常終了。
.RE

.sp
.ne 2
.mk
.na
\fB\fB>0\fR \fR
.ad
.RS 7n
.rt  
エラーが発生しました。
.RE

.SH 属性
.sp
.LP
属性についての詳細は、\fBattributes\fR(5) を参照してください。
.SS "/usr/bin/od"
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i) 
lw(2.75i) |lw(2.75i) 
.
属性タイプ属性値
_
使用条件system/core-os
_
CSI有効
.TE

.SS "/usr/xpg4/bin/od"
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i) 
lw(2.75i) |lw(2.75i) 
.
属性タイプ属性値
_
使用条件system/xopen/xcu4
_
CSI有効
_
インタフェースの安定性確実
_
標準T{
\fBstandards\fR(5) を参照してください。
T}
.TE

.SH 関連項目
.sp
.LP
\fBsed\fR(1), \fBattributes\fR(5), \fBenviron\fR(5), \fBstandards\fR(5)
