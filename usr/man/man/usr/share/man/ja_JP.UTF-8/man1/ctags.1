'\" te
.\" Copyright 1989 AT&T
.\" Copyright (c) 1980 Regents of the University of California
.\" Copyright (c) 2001, 2011, Oracle and/or its affiliates. All rights reserved.
.\" Portions Copyright (c) 1992, X/Open Company Limited All Rights Reserved
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for permission to reproduce portions of its copyrighted documentation. Original documentation from The Open Group can be obtained online at http://www.opengroup.org/bookstore/.
.\" The Institute of Electrical and Electronics Engineers and The Open Group, have given us permission to reprint portions of their documentation. In the following statement, the phrase "this text" refers to portions of the system documentation. Portions of this text are reprinted and reproduced in electronic form in the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard for Information Technology -- Portable Operating System Interface (POSIX), The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the Institute of Electrical and Electronics Engineers, Inc and The Open Group. In the event of any discrepancy between these versions and the original IEEE and The Open Group Standard, the original IEEE and The Open Group Standard is the referee document. The original Standard can be obtained online at http://www.opengroup.org/unix/online.html. This notice shall appear on any product containing this material.
.TH ctags 1 "2011 年 6 月 8 日" "SunOS 5.11" "ユーザーコマンド"
.SH 名前
ctags \- ex および vi で使用するタグファイルの作成
.SH 形式
.LP
.nf
\fB/usr/bin/ctags\fR [\fB-aBFtuvwx\fR] [\fB-f\fR \fItagsfile\fR] \fIfile\fR...
.fi

.LP
.nf
\fB/usr/xpg4/bin/ctags\fR [\fB-aBFuvwx\fR] [\fB-f\fR \fItagsfile\fR] \fIfile\fR...
.fi

.SH 機能説明
.sp
.LP
\fBctags\fR ユーティリティは、C、C++、Pascal、FORTRAN、\fByacc\fR(1)、\fBlex\fR(1) の指定されたソースから \fBex\fR(1) 用のタグファイルを作成します。タグファイルは、ファイルのグループにおける指定されたオブジェクト (この場合は関数と型定義) の位置を示します。タグファイルの各行には、オブジェクト名、それが定義されているファイル、およびオブジェクト定義のアドレス指定が含まれます。関数はパターンによって検索され、型定義は行番号によって検索されます。指定子は、行の個別のフィールドに指定され、スペースまたは TAB 文字で区切られます。タグファイルを使用すると、\fBex\fR はこれらのオブジェクト定義を簡単に検索できます。
.sp
.LP
通常 \fBctags\fR は、\fBtags\fR というファイルにタグの記述を入れます。これは、\fB-f\fR オプションによって変更にできます。
.sp
.LP
名前が \fB\&.c\fR または \fB\&.h\fR で終わるファイルは、C または C++ のソースファイルとみなされ、C または C++ ルーチンとマクロ定義が含まれていないか調べられます。名前が \fB\&.cc\fR、\fB\&.C\fR、または \fB\&.cxx\fR で終わるファイルは、C++ ソースファイルとみなされます。名前が \fB\&.y\fR で終わるファイルは、\fByacc\fR ソースファイルとみなされます。名前が \fB\&.l\fR で終わるファイルは、\fBlex\fR ファイルとみなされます。これ以外のファイルは、まず Pascal または \fBFORTRAN\fR のルーチン定義が含まれていないか調べられます。これらの定義が含まれていないファイルは、再度 C 定義について検索されます。
.sp
.LP
タグ \fBmain\fR は、C または C++ プログラムでは特別に処理されます。タグ \fBformed\fR は、\fIfile\fR の先頭に \fBM\fR を付け、最後に \fB\&.c \fR、\fB\&.cc\fR、\fB\&.C\fR、または .cxx があれば削除し、先頭のパス名コンポーネントも削除して、書式が作成されます。これにより、複数のプログラムが置かれているディレクトリでも \fBctags\fR を利用できます。
.SH オプション
.sp
.LP
出力に関するオプションの優先順位は、\fB-x\fR、\fB-v\fR、そして残りのオプションという順になります。次のオプションがサポートされています。
.sp
.ne 2
.mk
.na
\fB\fB-a\fR\fR
.ad
.RS 15n
.rt  
既存の \fBtags\fR ファイルに出力を追加します。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-B\fR\fR
.ad
.RS 15n
.rt  
後方検索パターン (\fB?\fR. \|.\|.\|\fB?\fR).
.RE

.sp
.ne 2
.mk
.na
\fB\fB-f\fR \fItagsfile\fR\fR
.ad
.RS 15n
.rt  
\fBtags\fR ではなく、ファイル \fItagsfile\fR にタグ記述を入れます。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-F\fR\fR
.ad
.RS 15n
.rt  
前方検索パターン (\fB/\fR. \|.\|.\|\fB/\fR) を使用します (デフォルト)。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-t\fR\fR
.ad
.RS 15n
.rt  
型定義のタグを作成します。\fB/usr/xpg4/bin/ctags\fR は、デフォルトで、型定義のタグを作成します。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-u\fR\fR
.ad
.RS 15n
.rt  
タグ内の指定したファイルを更新します。つまり、これらのファイルへの参照はすべて削除されて、ファイルに新しい値が追加されます。注意:  このオプションを指定すると実行速度が遅くなります。通常、単に \fBtags\fR ファイルを作成し直す方が、速く実行できます。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-v\fR\fR
.ad
.RS 15n
.rt  
標準出力上に関数名、ファイル名、およびページ番号をリストする索引を出力します (64 行のページを想定)。出力は、辞書編集方式の順にソートされるため、出力を \fBsort\fR \fB-f\fR に通しておくのがよいでしょう。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-w\fR\fR
.ad
.RS 15n
.rt  
警告診断を抑制します。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-x\fR\fR
.ad
.RS 15n
.rt  
オブジェクト名、各オブジェクトが定義されている行番号とファイル名、およびその行のテキストを作成して、標準出力に出力します。これは、オフラインで読み取ることのできる関数索引として出力可能な単純な索引です。
.RE

.SH オペランド
.sp
.LP
次の \fIfile\fR オペランドがサポートされています。
.sp
.ne 2
.mk
.na
\fB\fIfile\fR\fB\&.c\fR\fR
.ad
.RS 12n
.rt  
\fB\&.c\fR 接尾辞で終了するベース名を持つファイルは、C 言語のソースコードとみなされます。
.RE

.sp
.ne 2
.mk
.na
\fB\fIfile\fR\fB\&.h\fR\fR
.ad
.RS 12n
.rt  
\fB\&.h\fR 接尾辞で終了するベース名を持つファイルは、C++ 言語のソースコードとみなされます。
.RE

.sp
.ne 2
.mk
.na
\fB\fIfile\fR\fB\&.f\fR\fR
.ad
.RS 12n
.rt  
\fB\&.f\fR 接尾辞で終了するベース名を持つファイルは、FORTRAN 言語のソースコードとみなされます。
.RE

.SH 使用法
.sp
.LP
\fB-v\fR オプションは、オプションとして提供される \fBBSD\fR 互換性パッケージに含まれている \fBvgrind\fR で主に使用されます。
.SH 使用例
.LP
\fB例 1 \fRアルファベット順にエントリを生成する
.sp
.LP
\fB-v\fR オプションを付けて \fBctags\fR を使用すると、\fBvgrind\fR に対して必ずしも適切とはいえない順序でエントリが作成されます。結果をアルファベット順で生成するには、出力を \fBsort\fR \fB-f\fR に送るようにします。

.sp
.in +2
.nf
example% \fBctags -v filename.c filename.h | sort -f \|>\| index\fR
example% \fBvgrind -x index\fR
.fi
.in -2
.sp

.LP
\fB例 2 \fRタグファイルを作成する
.sp
.LP
\fIsourcedir\fR をルートとするディレクトリ階層に C ソースのタグファイルを作成するには、まず空のタグファイルを作成してから、\fBfind\fR(1) を実行します。

.sp
.in +2
.nf
example% \fBcd \fIsourcedir\fR ; rm -f tags ; touch tags\fR
example% \fBfind . \e( -name SCCS -prune -name \e\e
       '*.c' -o -name '*.h' \e) -exec ctags -u {} \e;\fR
.fi
.in -2
.sp

.sp
.LP
スペースは、ここで示されたとおりに正確に入力してください。

.SH 環境
.sp
.LP
\fBctags\fR の実行に影響を与える次の環境変数については、\fBenviron\fR(5) のマニュアルページを参照してください。\fBLANG\fR、\fB LC_ALL\fR、\fBLC_COLLATE\fR、\fBLC_CTYPE\fR、\fBLC_MESSAGES\fR、および \fBNLSPATH\fR
.SH 終了ステータス
.sp
.LP
次の終了値が返されます。
.sp
.ne 2
.mk
.na
\fB\fB0\fR\fR
.ad
.RS 6n
.rt  
正常終了。
.RE

.sp
.ne 2
.mk
.na
\fB\fB>0\fR\fR
.ad
.RS 6n
.rt  
エラーが発生しました。
.RE

.SH ファイル
.sp
.ne 2
.mk
.na
\fB\fBtags\fR\fR
.ad
.RS 8n
.rt  
出力タグファイル
.RE

.SH 属性
.sp
.LP
属性についての詳細は、\fBattributes\fR(5) を参照してください。
.SS "/usr/bin/ctags"
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i) 
lw(2.75i) |lw(2.75i) 
.
属性タイプ属性値
_
使用条件developer/base-developer-utilities
.TE

.SS "/usr/xpg4/bin/ctags"
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i) 
lw(2.75i) |lw(2.75i) 
.
属性タイプ属性値
_
使用条件system/xopen/xcu4
_
インタフェースの安定性確実
_
標準T{
\fBstandards\fR(5) を参照してください。
T}
.TE

.SH 関連項目
.sp
.LP
\fBex\fR(1), \fBlex\fR(1), \fBvgrind\fR(1), \fBvi\fR(1), \fByacc\fR(1), \fBattributes\fR(5), \fBenviron\fR(5), \fBstandards\fR(5)
.SH 注意事項
.sp
.LP
\fBFORTRAN\fR と Pascal の 関数、サブルーチン、およびプロシージャは、非常に単純な方法で認識されます。\fB\fR\fB\fR\fB\fRブロック構造とみなして処理されることはありません。異なるブロックに同じ名前の 2 つの Pascal プロシージャがある場合、一方しか判別されません。
.sp
.LP
C または Pasca 関数l、および \fBFORTRAN\fR 関数を検索するかどうかを決定する手法は、あまり出来の良いものではありません。
.sp
.LP
\fBctags\fR ユーティリティは、\fB#ifdefs\fR を認識しません。
.sp
.LP
\fBctags\fR ユーティリティは、Pascal の型を把握している必要があります。型定義の検出は、入力の形式が適切かどうかによります。\fB-tx\fR を使用すると、型定義の最後の行だけが示されます。
