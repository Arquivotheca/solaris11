'\" te
.\" Copyright 1989 AT&T All Rights Reserved
.\" Copyright (c) 1998, 2011, Oracle and/or its affiliates. All rights reserved.
.TH ldd 1 "2011 年 5 月 2 日" "SunOS 5.11" "ユーザーコマンド"
.SH 名前
ldd \- 実行可能ファイルまたは共有オブジェクトの動的依存関係の表示
.SH 形式
.LP
.nf
\fBldd\fR [\fB-d\fR | \fB-r\fR] [\fB-c\fR] [\fB-D\fR]  [\fB-e\fR \fIenvar\fR] [\fB-f\fR] [\fB-i\fR] [\fB-L\fR] [\fB-l\fR] [\fB-p\fR]
    [\fB-s\fR] [\fB-U\fR | \fB-u\fR] [\fB-v\fR] [\fB-w\fR] \fIfilename\fR...
.fi

.SH 機能説明
.sp
.LP
\fBldd\fR ユーティリティーは、実行可能ファイルまたは共有オブジェクトの動的依存関係を表示します。\fBldd\fR は実行時リンカー \fBld.so.1\fR を使用して診断情報を生成します。実行時リンカーは検査対象のオブジェクトを取得して、実行中のプロセスで使用されるのと同様に処理します。デフォルトでは、\fBldd\fR は、すべてのレイジーな依存関係、および遅延依存関係の読み込みをトリガーします。
.sp
.LP
\fBldd\fR は \fIfilename\fR の読み込み時に読み込まれるすべての共有オブジェクトのパス名を表示します。\fBldd\fR は、検査対象の共有オブジェクトに実行権が与えられているものとみなします。実行権が与えられていない場合、\fBldd\fR は警告を出力してからファイルを処理します。
.sp
.LP
\fBldd\fR はファイルを 1 つずつ入力処理します。入力ファイルごとに、\fBldd\fR は次のいずれかを実行します。
.RS +4
.TP
.ie t \(bu
.el o
オブジェクトの依存関係が存在する場合はその依存関係を表示する
.RE
.RS +4
.TP
.ie t \(bu
.el o
依存関係が存在しない場合はそのまま続行する
.RE
.RS +4
.TP
.ie t \(bu
.el o
正常に処理できなかった場合はエラーメッセージを出力する
.RE
.sp
.LP
\fBldd\fR により検査される動的オブジェクトは実行されません。このため、\fBldd\fR を実行しても、\fBdlopen\fR(3C) を使って明示的に追加された共有オブジェクトは一切表示されません。プロセスまたはコアファイルにより使用されているオブジェクトをすべて表示するには、\fBpldd\fR(1) を使用します。
.SH オプション
.sp
.LP
\fBldd\fR は、\fIfilename\fR とそこで使用される共有オブジェクト間の互換性を調べることもできます。\fI\fR次のオプションを指定すると、\fBldd\fR は \fIfilename\fR の実行時に発生する未解決のシンボル参照について、警告を出力します。
.sp
.ne 2
.mk
.na
\fB\fB-d\fR\fR
.ad
.RS 6n
.rt  
\fB即時\fR参照をチェックします。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-r\fR\fR
.ad
.RS 6n
.rt  
\fB即時\fR参照および\fBレイジー\fR参照の両方をチェックします。
.RE

.sp
.LP
1 回の \fBldd\fR 呼び出しでは、前述のオプションのいずれか一方だけしか指定できません。\fB-\fR\fB-\fR
.sp
.LP
\fB即時\fR参照の対象は通常、実行可能ファイルまたは共有オブジェクトコードが使用するデータ項目です。関数へのポインタ、そして、位置に\fB依存\fRする共有オブジェクトからの関数呼び出しです。\fB\fR\fBレイジー\fR参照は通常、位置に\fB依存しない\fR共有オブジェクトからのグローバル関数の呼び出し、または実行可能ファイルからの外部関数呼び出しです。各参照タイプの詳細は、\fI『Linker and Libraries Guide』\fR の「再配置処理の実行に関する説明」を参照してください。オブジェクトの読み込みは、再配置処理の影響も受けます。詳細は、「使用法」の「\fBレイジー読み込み\fR」を参照してください。
.sp
.LP
デフォルトでは、一部の未解決のシンボル参照は報告されません。次のオプションを使用すると、未解決の参照を報告できます。これらのオプションは、\fB-d\fR オプションまたは \fB-r\fR オプションと組み合わせてはじめて効果を発揮します。
.sp
.ne 2
.mk
.na
\fB\fB-p\fR\fR
.ad
.RS 6n
.rt  
明示的な\fB親\fR参照および\fB外部\fR参照に対する未解決のシンボルエラーを公開します。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-w\fR\fR
.ad
.RS 6n
.rt  
未解決の\fB弱い\fRシンボル参照を公開します。
.RE

.sp
.LP
共有オブジェクトでは、共有オブジェクトの呼び出し元によって指定されるシンボルを参照できます。これらの参照は、共有オブジェクトの作成時に、\fB親\fRから使用可能、または単純に\fB外部\fRであることを明示的に分類できます。\fBld\fR(1) の \fB-M\fR \fBmapfile\fR オプションと、\fBPARENT\fR および \fBEXTERN\fR シンボル定義キーワードを参照してください。動的実行可能ファイルの検査時に、解決できない\fB親\fR参照または\fB外部\fR参照には、エラーとしてフラグが設定されます。ただし、デフォルトでは、共有オブジェクトの検査時に、解決できない\fB親\fR参照または\fB外部\fR参照には、エラーとしてフラグが設定されません。\fB-p\fR オプションを \fB-d\fR オプションまたは \fB-r\fR オプションと組み合わせて使用すると、未解決の\fB親\fR参照または\fB外部\fR参照に、再配置エラーとしてフラグが設定されます。
.sp
.LP
再配置で使用されるシンボルを\fB弱い\fR参照として定義できます。デフォルトでは、弱いシンボル参照が解決できない場合、再配置は無視され、再配置オフセットにゼロが書き込まれます。\fB-w\fR オプションを \fB-d\fR オプションまたは \fB-r\fR オプションと組み合わせて使用すると、弱いシンボル参照に対する未解決の再配置に、再配置エラーとしてフラグが設定されます。
.sp
.LP
\fBldd\fR は依存関係についても確認できます。次に示す各オプションを使用すると、\fBldd\fR は、\fIfilename\fR が読み込まれたときに、未参照または未使用の依存関係が読み込まれた場合に、それらに対する警告を出力します。1 つのシンボル参照が 1 つの依存関係にバインドされているときのみ、その依存関係が使用されていると考えられます。したがって、これらのオプションはシンボル参照が検査されているときにのみ有用です。\fB-r\fR オプションが有効でない場合、\fB-d\fR が有効になります。
.sp
.LP
オブジェクトにより定義されているが、オブジェクトからバインドされていない依存関係は、未参照の依存関係です。\fIfilename\fR が読み込まれたときにその他のオブジェクトによりバインドされていない依存関係は、未使用のオブジェクトです。
.sp
.LP
依存関係は、デフォルトのシステム上の場所か、検索パスで指定された場所で検出できます。検索パスは、環境変数 \fBLD_LIBRARY_PATH\fR などで、グローバルに指定できます。検索パスは、動的オブジェクトで実行パスとして定義することもできます。\fBld\fR(1) の \fB-R\fR オプションを参照してください。依存関係を満たすために使用されない検索パスは、不要なファイルシステム処理を発生させる原因となります。
.sp
.ne 2
.mk
.na
\fB\fB-U\fR\fR
.ad
.RS 6n
.rt  
未参照または未使用の依存関係を表示します。未参照の依存関係が、\fIfilename\fR で読み込まれたほかのオブジェクトによりバインドされていない場合、その依存関係は未使用としても設定されます。巡回の外部にあるオブジェクトにバインドされていない巡回依存関係は、未参照ともみなされます。
.sp
このオプションは、未使用の検索パスも表示します。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-u\fR\fR
.ad
.RS 6n
.rt  
未使用のオブジェクトを表示します。
.RE

.sp
.LP
\fB-U\fR は \fB-u\fR の機能をすべて含んでいますが、\fB-U\fR または \fB-u\fR オプションのどちらか 1 つだけを \fBldd\fR の 1 回の呼び出しの間に指定できます。\fB-r\fR オプションを使用するとき未参照または未使用であると判明したオブジェクトは、依存関係として削除する必要があります。これらのオブジェクトは参照を提供しませんが、\fIfilename\fR が読み込まれるとき、不必要なオーバーヘッドを生みます。\fB-d\fR オプションを使用する場合、未参照または未使用と判明したオブジェクトは \fIfilename\fR が読み込まれるときにすぐには要求されません。これらのオブジェクトはレイジー読み込みの候補です。詳細は、「使用法」の「\fBレイジー読み込み\fR」を参照してください。
.sp
.LP
未使用の依存関係を削除すると、実行時リンクのオーバーヘッドを下げることができます。未参照の依存関係を削除すると、実行時リンクのオーバーヘッドを下げることができますが、その効果はより少なくなります。ただし、未参照の依存関係の削除は、異なるオブジェクトと組み合わされたときや、その他のオブジェクトの依存関係が変化するに伴って、依存関係が使用されなくなることを防ぐ役割を果たします。
.sp
.LP
未使用の検索パスを削除することで、依存関係の検出に必要な処理を削減できます。これは、ネットワーク経由でファイルサーバーのファイルにアクセスする場合に有効です。検索パスは \fBdlopen\fR(3C) の要件を満たすために、オブジェクト内に符号化されている場合があります。この検索パスは、このオブジェクトの依存関係を取得するためには必要がない場合があるため、\fBldd\fR では未使用とみなされます。
.sp
.LP
次のオプションを使用できます。
.sp
.ne 2
.mk
.na
\fB\fB-c\fR\fR
.ad
.RS 12n
.rt  
一切の構成ファイルの使用を禁止します。構成ファイルは、デフォルトの検索パスの変更、ディレクトリキャッシュの提供、および代替オブジェクト依存関係の提供に利用できます。\fBcrle\fR(1) を参照してください。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-D\fR\fR
.ad
.RS 12n
.rt  
遅延依存関係の読み込みをスキップします。デフォルトでは、\fBldd\fR は、レイジーな依存関係と遅延依存関係の両方の処理を強制します。\fB-L\fR オプションも参照してください。通常のプロセス実行時は、遅延依存関係が読み込まれるのは、レイジー参照への最初の実行時結合が行われるときだけです。\fB-D\fR オプションを使用すると、\fB-d\fR オプションまたは \fB-r\fR オプションを使用しても、遅延依存関係の読み込みはトリガーされません。\fBld\fR(1) の \fB-z\fR \fBdeferred\fR オプションを参照してください。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-e\fR \fIenvar\fR\fR
.ad
.RS 12n
.rt  
環境変数 \fIenvar\fR を設定します。 
.sp
このオプションは、\fBLD_PRELOAD\fR などの、\fBldd\fR そのものに悪影響を与える可能性のある実行時リンカー環境変数を試す場合に便利です。  
.sp
このオプションは、\fBLD_DEBUG\fR などの追加情報だけを検査中のオブジェクトから抽出する場合にも役立ちます。\fBld.so.1\fR(1) と \fBlari\fR(1) を参照してください。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-f\fR\fR
.ad
.RS 12n
.rt  
安全でない実行可能ファイルの検査を強制します。\fB\fRスーパーユーザーが呼び出した場合、\fBldd\fR はデフォルトで、安全でないことが判明した実行可能ファイルを一切処理しません。\fB\fR実行可能ファイルは、指定されたインタプリタが \fB/lib\fR または \fB/usr/lib\fR にない場合、安全でないとみなされます。インタプリタが判別できない場合にも、実行可能ファイルは安全でないとみなされます。「使用法」の「\fBセキュリティー\fR」を参照してください。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-i\fR\fR
.ad
.RS 12n
.rt  
初期化セクションの実行順序を表示します。表示される順序は、\fB-d\fR または \fB-r\fR オプションの使用によって変わります。「使用法」の「\fB初期化順序\fR」を参照してください。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-L\fR\fR
.ad
.RS 12n
.rt  
レイジー読み込みを有効にします。デフォルトでは、\fBldd\fR は、レイジーな依存関係と遅延依存関係の両方の処理を強制します。\fB-D\fR オプションも参照してください。通常のプロセス実行時は、レイジー読み込みがデフォルトの動作モードです。この場合、レイジーオブジェクト内で定義されているシンボルが参照されたときに、レイジーな依存関係またはフィルタだけがプロセスに読み込まれます。\fB-L\fR オプションとともに \fB-d\fR または \fB-r\fR オプションを使用すると、実行プロセスで発生する依存関係および読み込み順序を調べることができます。\fBld\fR(1) の \fB-z\fR \fBlazyload\fR オプションを参照してください。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-l\fR\fR
.ad
.RS 12n
.rt  
あらゆるフィルタを強制的に即時処理します (すべてのフィルタとその依存関係を表示するため)。フィルタの即時処理は現在、\fBldd\fR のデフォルトの動作モードです。ただし、このデフォルトモードでは、検出されなかった外部フィルタはそのまま無視されます。\fB-l\fR オプションを使用すると、検出されなかった外部フィルタに起因するエラーメッセージが生成されます。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-s\fR\fR
.ad
.RS 12n
.rt  
共有オブジェクトの依存関係を調べるのに使用した検索パスを表示します。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-v\fR\fR
.ad
.RS 12n
.rt  
\fIfilename\fR の処理中に発生したすべての依存関係を表示します。このオプションを指定すると、依存関係が要求するバージョン情報も表示します。\fBpvs\fR(1) を参照してください。
.RE

.SH 使用法
.SS "セキュリティー"
.sp
.LP
スーパーユーザーは、検査対象の実行可能ファイルが信頼できると判明している場合に限り、\fB-f\fR オプションを使用します。信頼できない実行可能ファイルに \fB-f\fR オプションを使用すると、システムのセキュリティーが損なわれる可能性があります。検査対象の実行ファイルが信頼できるものかどうかが不明な場合、スーパーユーザーは一時的に一般ユーザーになり、一般ユーザーとして \fBldd\fR を呼び出す必要があります。
.sp
.LP
\fB:r\fR サブコマンドを使用しないかぎり、\fBdump\fR(1)、\fBelfdump\fR(1)、\fBelfedit\fR(1)、および \fBmdb\fR(1) を使用して、信頼できないオブジェクトを安全に検査できます。また、スーパーユーザー以外のユーザーは \fBadb\fR1 の \fB:r\fR サブコマンドまたは \fBtruss\fR(1) を使用することによって、それほどリスクを冒さずに信頼できない実行可能ファイルを検査できます。信頼できない実行可能ファイルで \fBldd\fR、\fBmdb :r\fR、または \fBtruss\fR を使用する場合は、リスクを最小限に抑えるために\fBUID\fR \fB"nobody"\fR を使用してください。
.SS "レイジー読み込み"
.sp
.LP
レイジー読み込みを直接的に適用するには、レイジーな依存関係を指定します。\fBld\fR(1) の \fB-z\fR \fBlazyload\fR オプションを参照してください。レイジー読み込みを間接的に適用するには、フィルタを指定します。\fBld\fR(1) の \fB-f\fR オプションと \fB-F\fR オプションを参照してください。レイジー読み込み技法をオブジェクトに適用する場合、使用するオプションによっては、\fBldd\fR の出力が異なることがあります。すべての依存関係がレイジーであるとされたオブジェクトの場合、\fBldd\fR のデフォルトの動作により、すべての依存関係はそのオブジェクトで記録される順に出力されます。
.sp
.in +2
.nf
example% \fBldd main\fR 
        libelf.so.1 =>   /lib/libelf.so.1
        libnsl.so.1 =>   /lib/libnsl.so.1
        libc.so.1 =>     /lib/libc.so.1
.fi
.in -2
.sp

.sp
.LP
実行時にこのオブジェクトを使用した場合のレイジー読み込み動作は、\fB-L\fR オプションを使用することによって有効にできます。このモードの場合、遅延依存関係が読み込まれるのは、レイジーオブジェクト内で定義されているシンボルが参照されたときです。したがって、\fB-L\fR オプションを \fB-d\fR および \fB-r\fR オプションと組み合わせて使用すると、即時参照とレイジー参照のそれぞれを満たすのに必要な依存関係を調べることができます。
.sp
.in +2
.nf
example% \fBldd\fR \fB-L\fR \fBmain\fR 
example% \fBldd\fR \fB-d\fR \fBmain\fR 
        libc.so.1 =>    /lib/libc.so.1 
example% \fBldd\fR \fB-r\fR \fBmain\fR 
        libc.so.1 =>    /lib/libc.so.1
        libelf.so.1 =>  /lib/libelf.so.1
.fi
.in -2
.sp

.sp
.LP
この例の場合、出力される依存関係の順序は、オプションなしで実行した \fBldd\fR の場合と異なります。また、\fB-r\fR オプションを使用した場合とも異なります。レイジー依存関係に対する参照は、実行中のプログラムと同じ順序では発生しません。
.sp
.LP
レイジー読み込みを調べると、参照を満たす必要のないオブジェクトも明らかになります。このようなオブジェクト (前述の例では \fBlibnsl.so.1\fR) は、検査対象のオブジェクトを作成するために使用したリンク行から削除可能な候補です。
.SS "初期化順序"
.sp
.LP
必要な依存関係が明示的に定義されていないオブジェクトでは、使用するオプションによって、\fBldd\fR によって表示される初期化セクションの順序が異なる場合があります。次に、簡単な適用例を示します。
.sp
.in +2
.nf
example% \fBldd -i main\fR 
        libA.so.1 =>   ./libA.so.1
        libc.so.1 =>   /lib/libc.so.1
        libB.so.1 =>   ./libB.so.1

    init object=./libB.so.1
    init object=./libA.so.1
    init object=/lib/libc.so.1
.fi
.in -2
.sp

.sp
.LP
再配置が適用されると、初期化セクションの順序は次のようになります。
.sp
.in +2
.nf
example% \fBldd -ir main\fR 
        .........

    init object=/lib/libc.so.1
    init object=./libB.so.1
    init object=./libA.so.1
.fi
.in -2
.sp

.sp
.LP
この場合、\fBlibB.so.1\fR は \fB/usr/lib/libc.so.1\fR の関数を参照します。ただし、このライブラリに明示的な依存関係はありません。\fB\fR再配置が検出されてはじめて、依存関係が確立され、その結果、この暗黙的な依存関係により初期化セクションのソート順序が影響を受けます。
.sp
.LP
通常、アプリケーションの実行時に設定される初期化セクションのソート順序は、\fBldd\fR に \fB-d\fR オプションを指定した場合と同等です。最適な順序が得られるのは、すべてのオブジェクトでそれぞれの依存関係が完全に定義されている場合です。動的オブジェクトの作成が望ましい場合は、\fBld\fR(1) でオプション \fB-z\|defs\fR および \fB-z\|ignore\fR を使用します。
.sp
.LP
1 つ以上の動的オブジェクトが相互に参照する場合には、循環型依存関係が生じる可能性があります。循環型依存関係は、各依存関係固有のソート順序を確立できないので、避けなければなりません。
.sp
.LP
オブジェクトファイルを静的に分析する方が望ましい場合は、\fBdump\fR(1) や \fBelfdump\fR(1) などのツールを使用して依存関係を調べることができます。
.SH ファイル
.sp
.ne 2
.mk
.na
\fB\fB/usr/lib/lddstub\fR\fR
.ad
.RS 23n
.rt  
共有オブジェクトの依存関係を検査するために読み込まれた 32 ビット擬似実行可能ファイル
.RE

.sp
.ne 2
.mk
.na
\fB\fB/usr/lib/64/lddstub\fR\fR
.ad
.RS 23n
.rt  
共有オブジェクトの依存関係を検査するために読み込まれた 64 ビット擬似実行可能ファイル
.RE

.SH 属性
.sp
.LP
属性についての詳細は、\fBattributes\fR(5) を参照してください。
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i) 
lw(2.75i) |lw(2.75i) 
.
属性タイプ属性値
_
使用条件system/linker
.TE

.SH 関連項目
.sp
.LP
\fBcrle\fR(1), \fBdump\fR(1), \fBelfdump\fR(1), \fBelfedit\fR(1), \fBlari\fR(1), \fBld\fR(1), \fBld.so.1\fR(1), \fBmdb\fR(1), \fBpldd\fR(1), \fBpvs\fR(1), \fBtruss\fR(1), \fBdlopen\fR(3C), \fBattributes\fR(5)
.sp
.LP
\fI『Linker and Libraries Guide』\fR
.SH 診断
.sp
.LP
\fBldd\fR は共有オブジェクトのパス名の記録を\fB標準出力\fRに書き込みます。シンボルの解決問題に関する任意選択のリストは、\fB標準エラー出力\fRに書き込まれます。\fIfilename\fR が実行可能ファイルまたは共有オブジェクトではない場合、あるいは、読み取り用にオープンできない場合、ゼロ以外の終了ステータスが返されます。\fI\fR
.SH 注意事項
.sp
.LP
共有オブジェクトで \fB-d\fR または \fB-r\fR オプションを使用すると、誤解を生じるような結果が出力される場合があります。\fBldd\fR は共有オブジェクトにおける最悪の場合を解析します。しかし実際には、未解決として報告されたシンボルでも、その一部または全部が共有オブジェクトを参照する実行可能ファイルによって解決されることがあります。実行時リンカーのプリロードメカニズムを使用すると、検査対象のオブジェクトに依存関係を追加できます。\fBLD_PRELOAD\fR を参照してください。
.sp
.LP
\fBldd\fR は実行時リンカーと同じアルゴリズムを使用して、共有オブジェクトを見つけます。
