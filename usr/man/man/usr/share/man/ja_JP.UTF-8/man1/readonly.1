'\" te
.\" Copyright (c) 2007, 2011, Oracle and/or its affiliates. All rights reserved.
.\" Copyright 1989 AT&T
.\" Portions Copyright (c) 1982-2007 AT&T Knowledge Ventures
.TH readonly 1 "2011 年 7 月 12 日" "SunOS 5.11" "ユーザーコマンド"
.SH 名前
readonly \- 変数の値の再設定による書き換えを防ぐシェル組み込み関数
.SH 形式
.SS "sh"
.LP
.nf
\fBreadonly\fR [\fIname\fR]...
.fi

.SS "ksh88"
.LP
.nf
\fB**readonly\fR [\fIname\fR [= \fIvalue\fR]]...
.fi

.LP
.nf
\fB**readonly\fR \fB-p\fR
.fi

.SS "ksh"
.LP
.nf
\fB++readonly\fR [\fB-p\fR] [\fIname\fR [= \fIvalue\fR]]...
.fi

.SH 機能説明
.SS "sh"
.sp
.LP
指定された各 \fIname\fR に「読み取り専用」のマークを付け、これらの名前が後続の割り当てでは変更できないようにします。\fB\fR\fI\fR引数を省略すると、読み取り専用と指定された名前がすべて一覧表示されます。\fB\fR
.SS "ksh88"
.sp
.LP
指定された \fIname\fR を読み取り専用にします。あとの代入でこれらの名前を変更できないようにします。\fB\fR
.sp
.LP
\fB-p\fR を指定したとき、\fBreadonly\fR は、すべての読み取り専用変数の名前と値を、以下の形式で標準出力に書き出します。
.sp
.in +2
.nf
"readonly %s=%s\en", \fIname\fR, \fIvalue\fR
.fi
.in -2
.sp

.sp
.LP
これは、\fIname\fR が設定されている場合です。
.sp
.in +2
.nf
"readonly $s\en", \fIname\fR
.fi
.in -2
.sp

.sp
.LP
これは、\fIname\fR が設定されていない場合です。
.sp
.LP
コマンドとしてシェルに再入力できる形式で書き込まれるため、同じ読み取り専用の属性と値をシェル実行環境で再現するときに便利です。保存しておいた出力をシェルに再入力するときには、次のような制限があります。\fB\fR
.RS +4
.TP
1.
出力時に値が設定されていた変数には、読み取り専用の属性は設定されません。\fB\fR
.RE
.RS +4
.TP
2.
出力時に設定されていなかった変数には、保存しておいた出力をシェルに再入力するときには、値は設定されません。
.RE
.sp
.LP
このマニュアルページでは、1 つまたは 2 つのアスタリスク (\fB**\fR) が先頭に付加されている \fBksh88\fR(1) コマンドは、次のような特殊な処理を受けます。
.RS +4
.TP
1.
コマンドが完了しても、コマンドの直前の変数代入リストは依然として有効です。
.RE
.RS +4
.TP
2.
入出力のリダイレクトは変数代入後に行われます。
.RE
.RS +4
.TP
3.
エラーが発生すると、それを含むスクリプトは中止されます。
.RE
.RS +4
.TP
4.
変数代入形式で、\fB**\fR を先頭に持つコマンドに続くワードは、変数代入と同一の規則で展開されます。つまり、チルド置換は \fB=\fR 符号のあとに実行され、ワード分割とファイル名生成は実行されません。
.RE
.SS "ksh"
.sp
.LP
\fBreadonly\fR は、名前で指定された各変数に読み取り専用の属性を設定します。これにより、値を変更できなくなります。\fB\fR\fB=\fR\fIvalue\fR が指定されている場合は、変数が読み取り専用になる前に変数名が \fIvalue\fR に設定されます。\fB\fR 
.sp
.LP
名前を指定しない場合は、すべての読み取り専用変数の名前と値が標準出力に書き込まれます。\fB\fR 
.sp
.LP
引数でフィールド分割やパス名展開が実行されないように、\fBreadonly\fR は宣言コマンドとしてシェルに組み込まれています。チルド展開は値に対して行われます。
.sp
.ne 2
.mk
.na
\fB\fB-p\fR\fR
.ad
.RS 6n
.rt  
現在の読み取り専用変数を再作成するために、シェルへの入力として使用可能な \fBreadonly\fR コマンドの形式で出力されます。\fB\fR
.RE

.sp
.LP
このマニュアルページでは、1 つまたは 2 つの \fB+\fR (プラス符号) が先頭に付加されている \fBksh\fR(1) コマンドは、次のような特殊な処理を受けます。
.RS +4
.TP
1.
コマンドが完了しても、コマンドの直前の変数代入リストは依然として有効です。
.RE
.RS +4
.TP
2.
入出力のリダイレクトは変数代入後に行われます。
.RE
.RS +4
.TP
3.
エラーが発生すると、それを含むスクリプトは中止されます。
.RE
.RS +4
.TP
4.
これらは有効な関数名ではありません。
.RE
.RS +4
.TP
5.
変数代入形式で、\fB++\fR を先頭に持つコマンドに続くワードは、変数代入と同一の規則で展開されます。つまり、チルド置換は \fB=\fR 符号のあとに実行され、フィールド分割とファイル名生成は実行されません。
.RE
.SH 終了ステータス
.SS "ksh"
.sp
.LP
次の終了値が返されます。
.sp
.ne 2
.mk
.na
\fB\fB0\fR\fR
.ad
.RS 6n
.rt  
正常終了。
.RE

.sp
.ne 2
.mk
.na
\fB\fB>0\fR\fR
.ad
.RS 6n
.rt  
エラーが発生しました。
.RE

.SH 属性
.sp
.LP
属性についての詳細は、\fBattributes\fR(5) を参照してください。
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i) 
lw(2.75i) |lw(2.75i) 
.
属性タイプ属性値
_
使用条件system/core-os
.TE

.SH 関連項目
.sp
.LP
\fBksh\fR(1), \fBksh88\fR(1), \fBsh\fR(1), \fBtypeset\fR(1), \fBattributes\fR(5)
