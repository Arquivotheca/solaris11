'\" te
.\" Copyright (c) 2003, 2011, Oracle and/or its affiliates. All rights reserved.
.TH cfgadm_sbd 1M "2003 年 10 月 13 日" "SunOS 5.11" "システム管理コマンド"
.SH 名前
cfgadm_sbd \- システムボード管理用の \fBcfgadm\fR コマンド
.SH 形式
.LP
.nf
\fBcfgadm \fR \fB-l\fR [\fB-a\fR] [\fB-o\fR parsable] \fI ap_id\fR...
.fi

.LP
.nf
\fBcfgadm \fR \fB-c \fR \fIfunction\fR [\fB-f\fR] [\fB-y\fR | \fB-n\fR] 
     [\fB-o\fR unassign | nopoweroff] [\fB-v\fR] \fI ap_id\fR...
.fi

.LP
.nf
\fBcfgadm \fR \fB-t\fR [\fB-v\fR] \fI ap_id\fR...
.fi

.LP
.nf
\fBcfgadm \fR \fB-x \fR [\fB-f\fR] [\fB-v\fR] \fIfunction\fR \fI ap_id\fR...
.fi

.SH 機能説明
.sp
.LP
\fBcfgadm_sbd\fR プラグインは、クラス \fBsbd\fR のシステムボードを接続、構成、構成解除、および切断するための動的な再構成機能を提供します。このプラグインを使用すると、システムをリブートすることなく、システムボードと実行中のシステムを接続または切断することもできます。
.sp
.LP
\fBcfgadm\fR コマンドは \fB/usr/sbin\fR に存在します。\fBcfgadm\fR(1M) を参照してください。\fBcfgadm_sbd\fR プラグインは \fB/usr/platform/sun4u/lib/cfgadm\fR に存在します。
.sp
.LP
各ボードスロットは、デバイスツリーでは単一の接続点として表示されます。各コンポーネントは、動的接続点として表示されます。\fB-a\fR オプションを使用すると、各コンポーネントのタイプ、状態、条件、および各ボードスロットの状態と条件を表示できます。
.sp
.LP
\fBcfgadm\fR オプションは、プラットフォームに応じて動作が異なります。また、接続点の形式もプラットフォームに応じて異なります。詳細は、「\fBプラットフォームにおける注意事項\fR」の節を参照してください。
.SS "コンポーネントの条件"
.sp
.LP
コンポーネントの条件の名前と説明を次に示します。
.sp
.ne 2
.mk
.na
\fBfailed\fR
.ad
.sp .6
.RS 4n
コンポーネントでテストが失敗しました。
.RE

.sp
.ne 2
.mk
.na
\fBok\fR
.ad
.sp .6
.RS 4n
コンポーネントは稼働しています。
.RE

.sp
.ne 2
.mk
.na
\fBunknown\fR
.ad
.sp .6
.RS 4n
コンポーネントはテストされませんでした。
.RE

.SS "コンポーネントの状態"
.sp
.LP
コンポーネントの受容体の状態の名前と説明を次に示します。
.sp
.ne 2
.mk
.na
\fBconnected\fR
.ad
.sp .6
.RS 4n
コンポーネントはボードスロットに接続されています。
.RE

.sp
.LP
コンポーネントの占有装置の状態の名前と説明を次に示します。
.sp
.ne 2
.mk
.na
\fBconfigured\fR
.ad
.sp .6
.RS 4n
コンポーネントは、Solaris オペレーティング環境で使用できる状態です。
.RE

.sp
.ne 2
.mk
.na
\fBunconfigured\fR
.ad
.sp .6
.RS 4n
コンポーネントは、Solaris オペレーティング環境で使用できる状態ではありません。
.RE

.SS "ボードの条件"
.sp
.LP
ボードの条件の名前と説明を次に示します。
.sp
.ne 2
.mk
.na
\fBfailed\fR
.ad
.sp .6
.RS 4n
ボードでテストが失敗しました。
.RE

.sp
.ne 2
.mk
.na
\fBok\fR
.ad
.sp .6
.RS 4n
ボードは稼働しています。
.RE

.sp
.ne 2
.mk
.na
\fBunknown\fR
.ad
.sp .6
.RS 4n
ボードはテストされませんでした。
.RE

.sp
.ne 2
.mk
.na
\fBunusable\fR
.ad
.sp .6
.RS 4n
ボードスロットは使用できません。
.RE

.SS "ボードの状態"
.sp
.LP
ボードを挿入すると、受容体の状態は empty から disconnected に変わります。ボードを取り外すと、受容体の状態は disconnected から empty に変わります。
.sp
.LP
\fB注意:\fR connected 状態のボード、または電源が投入されていて disconnected 状態のボードを取り外すと、オペレーティングシステムがクラッシュし、システムに修復不可能な障害を与える場合があります。
.sp
.LP
ボードの受容体の状態の名前と説明を次に示します。
.sp
.ne 2
.mk
.na
\fBconnected\fR
.ad
.sp .6
.RS 4n
ボードは電源が投入されており、システムバスに接続されています。ボードが connected 状態になった場合のみ、ボード上のコンポーネントが表示されます。
.RE

.sp
.ne 2
.mk
.na
\fBdisconnected\fR
.ad
.sp .6
.RS 4n
ボードはシステムバスから切断されています。ボードは、電源を切断しなくても disconnected 状態にできます。ただし、スロットから取り外す前に、ボードの電源を切断し、disconnected 状態にする必要があります。
.RE

.sp
.ne 2
.mk
.na
\fBempty\fR
.ad
.sp .6
.RS 4n
ボードが存在しません。
.RE

.sp
.LP
切断されたボードの占有装置の状態は常に unconfigured です。ボードの占有装置の状態の名前と説明を次の表に示します。
.sp
.ne 2
.mk
.na
\fBconfigured\fR
.ad
.sp .6
.RS 4n
ボード上の少なくとも 1 つのコンポーネントが構成されています。
.RE

.sp
.ne 2
.mk
.na
\fBunconfigured\fR
.ad
.sp .6
.RS 4n
ボード上のすべてのコンポーネントが構成解除されています。
.RE

.SS "ダイナミックシステムドメイン"
.sp
.LP
ダイナミックシステムドメイン (Dynamic System Domain、DSD。このマニュアルではドメインと呼びます) を基盤とするプラットフォームでは、シャーシ内のスロットが、電気的に絶縁されたハードウェアパーティション (つまり、DSD) に分割されます。DSD を基盤としないプラットフォームでは、すべてのスロットがシステムに恒久的に割り当てられます。
.sp
.LP
スロットは空けておくことも使用することもできます。また、任意の数のドメインに割り当てることも、任意の数のドメインで使用できるようにすることもできます。所定のドメインで使用できるスロットの数は、システムコントローラで維持される使用可能なコンポーネントのリスト (Available Component List、\fBACL\fR) で制御されます。\fBACL\fR は、Solaris オペレーティング環境によって提供されるアクセス制御リストではありません。
.sp
.LP
スロットがドメインの \fBACL\fR に含まれ、スロットが別のドメインに割り当てられていない場合にのみ、ドメインからスロットを認識できます。割り当てられていないスロットは、そのスロットが \fBACL\fR に含まれているすべてのドメインから認識できます。スロットが特定のドメインに割り当てられると、そのスロットはほかのドメインから認識できなくなります。
.sp
.LP
あるドメインで認識可能であるが、未割り当てのスロットは、まずそのドメインに割り当てをしてから、ほかの状態変更コマンドを適用する必要があります。割り当ては、\fB\fR\fB-x\fR\fB assign\fR を使用して明示的に行うか、接続の一環として暗黙的に行うことができます。スロットを別のドメインで使用できるようにするには、特定のドメインから割り当て解除する必要があります。割り当て解除は常に明示的であり、\fB\fR\fB-x\fR\fB unassign\fR を使用して直接行うか、または \fB\fR\fB-o\fR\fB unassign\fR を使用して切断オプションとして行います。 
.SS "状態変更機能"
.sp
.LP
ボードスロットまたはボード上のコンポーネントの状態を変更する機能を、任意の接続点に対し同時に発行できます。一度に許可される状態変更操作は 1 つのみです。状態変更情報の Busy フィールドの \fBY\fR は、操作が進行中であることを示します。
.sp
.LP
次の一覧は、状態を変更する機能を示しています。 
.RS +4
.TP
.ie t \(bu
.el o
configure
.RE
.RS +4
.TP
.ie t \(bu
.el o
unconfigure
.RE
.RS +4
.TP
.ie t \(bu
.el o
connect
.RE
.RS +4
.TP
.ie t \(bu
.el o
disconnect
.RE
.SS "可用性変更機能"
.sp
.LP
ボードの可用性を変更するコマンドを、任意の接続点に対し同時に発行できます。一度に許可される可用性変更操作は 1 つのみです。これらの機能により、\fBcfgadm\fR \fB-l\fR の出力の情報文字列も変更されます。Busy フィールドの \fBY\fR は、操作が進行中であることを示します。
.sp
.LP
次の一覧は、可用性を変更する機能を示しています。 
.RS +4
.TP
.ie t \(bu
.el o
\fBassign\fR
.RE
.RS +4
.TP
.ie t \(bu
.el o
\fBunassign\fR
.RE
.SS "条件変更機能"
.sp
.LP
ボードスロットまたはボード上のコンポーネントの条件を変更する機能を、任意の接続点に対し同時に発行できます。一度に許可される条件変更操作は 1 つのみです。これらの機能により、\fBcfgadm\fR \fB-l\fR の出力の情報文字列も変更されます。Busy フィールドの \fBY\fR は、操作が進行中であることを示します。
.sp
.LP
次の一覧は、条件を変更する機能を示しています。 
.RS +4
.TP
.ie t \(bu
.el o
\fBpoweron\fR
.RE
.RS +4
.TP
.ie t \(bu
.el o
\fBpoweroff\fR
.RE
.RS +4
.TP
.ie t \(bu
.el o
\fBtest\fR
.RE
.SS "構成解除プロセス"
.sp
.LP
この節では、構成解除プロセスについて説明し、永続メモリーを移動するプロセス中のさまざまな段階におけるソースボードおよびターゲットボードの状態を示します。
.sp
.LP
次のコード例では、ボード 0 上の永続メモリーをドメイン内の別のボードに移動する必要があります。したがって、ボード 0 がソース、ボード 1 がターゲットです。
.sp
.LP
ボードがビジーとマークされている間は、そのボードでステータス変更操作を開始することはできません。簡潔にするため、\fBCPU\fR 情報はコード例から削除されています。
.sp
.LP
プロセスは次のコマンドで開始されます。
.sp
.in +2
.nf
# \fBcfgadm -c unconfigure -y SB0::memory &\fR
.fi
.in -2
.sp

.sp
.LP
最初に、ボード 0 上の永続メモリーと同じアドレス範囲にあるボード 1 上のメモリーを削除する必要があります。この段階では、ソースボード、ターゲットボード、およびメモリーの接続点がビジーとマークされています。次のコマンドでステータスを表示できます。
.sp
.in +2
.nf
# \fBcfgadm -a -s cols=ap_id:type:r_state:o_state:busy SB0 SB1\fR

Ap_Id         Type      Receptacle     Occupant       Busy
SB0           CPU       connected      configured     y
SB0::memory   memory    connected      configured     y
SB1           CPU       connected      configured     y
SB1::memory   memory    connected      configured     y
 
.fi
.in -2
.sp

.sp
.LP
ボード 1 上のメモリーを削除すると、unconfigured とマークされます。次の例に示すように、ボード 0 上のメモリーは configured のままですが、引き続きビジーとマークされています。
.sp
.in +2
.nf
Ap_Id         Type      Receptacle     Occupant       Busy
SB0           CPU       connected      configured     y 
SB0::memory   memory    connected      configured     y 
SB1           CPU       connected      configured     y 
SB1::memory   memory    connected      unconfigured   n 
  
.fi
.in -2
.sp

.sp
.LP
次に、メモリーがボード 0 からボード 1 にコピーされます。コピーされると、メモリーの占有装置の状態が切り替わります。ボード 0 上のメモリーは unconfigured になり、ボード 1 上のメモリーは configured になります。次の例に示すように、プロセスのこの時点では、ボード 0 だけがビジーのままです。
.sp
.in +2
.nf
Ap_Id         Type      Receptacle     Occupant       Busy
SB0           CPU       connected      configured     y 
SB0::memory   memory    connected      unconfigured   n 
SB1           CPU       connected      configured     n 
SB1::memory   memory    connected      configured     n 
  
.fi
.in -2
.sp

.sp
.LP
次の例に示すように、プロセス全体が完了すると、ボード 0 上のメモリーは unconfigured のままとなり、接続点はビジーではありません。
.sp
.in +2
.nf
Ap_Id         Type      Receptacle     Occupant       Busy
SB0           CPU       connected      configured     n 
SB0::memory   memory    connected      unconfigured   n 
SB1           CPU       connected      configured     n 
SB1::memory   memory    connected      configured     n 
  
.fi
.in -2
.sp

.sp
.LP
永続メモリーが移動され、ボード 0 上のメモリーが構成解除されました。この時点で、いずれのボードでも新しい状態変更操作を開始できます。
.SS "プラットフォーム固有のオプション"
.sp
.LP
システムボードプラグインによって解釈されるオプションの後に配置する、プラットフォーム固有のオプションを指定できます。すべてのプラットフォーム固有のオプションの前に、\fBplatform\fR キーワードを指定する必要があります。次の例は、プラットフォーム固有のオプションを指定したコマンドの一般的な形式を示しています。
.sp
.LP
\fB\fIcommand\fR -o \fIsbd_options\fR,platform=\fIplatform_options\fR\fR
.SH オプション
.sp
.LP
このマニュアルページでは、\fBcfgadm\fR コマンドの \fB-v\fR、\fB-a\fR、\fB-s\fR、または \fB-h\fR オプションについては説明していません。これらのオプションの説明については、\fBcfgadm\fR(1M) を参照してください。\fBcfgadm_sbd\fR プラグインでは、次のオプションがサポートされています。
.sp
.ne 2
.mk
.na
\fB\fB-c\fR \fIfunction\fR\fR
.ad
.sp .6
.RS 4n
状態変更機能を実行します。次の機能を使用できます。
.sp
.ne 2
.mk
.na
\fBunconfigure\fR
.ad
.sp .6
.RS 4n
占有装置の状態を unconfigured に変更します。この機能は、システムボードスロット、およびシステムボード上のすべてのコンポーネントに適用されます。
.sp
\fBunconfigure\fR 機能により、\fBCPU\fR が \fBCPU\fR リストから削除され、物理メモリーがシステムメモリープールから削除されます。いずれかのデバイスがまだ使用中の場合、\fBcfgadm\fR コマンドは失敗し、ユーザーにエラーが報告されます。デバイスのビジー状態が終わりしだい、コマンドを再試行できます。\fBCPU\fR が使用中の場合は、オフラインであることを確認してから操作を進める必要があります。\fBpbind\fR(1M)、\fBpsradm\fR(1M)、および \fBpsrinfo\fR(1M) を参照してください。
.sp
\fBunconfigure\fR 機能は、物理メモリーを別のシステムボードに移動してから、構成解除するボードからメモリーを削除します。移動するメモリーの種類によっては、別のボード上に十分なメモリーが見つからない場合に、または適切な物理メモリー範囲が見つからない場合に、コマンドが失敗します。
.sp
永続メモリーの場合、メモリーが移動され、メモリーコントローラが再プログラムされている間は、オペレーティングシステムを停止 (つまり、休止) する必要があります。オペレーティングシステムを停止する必要がある場合、操作の続行を確認するプロンプトが表示されます。「はい」または「いいえ」と答えるには、それぞれ \fB-y\fR または \fB-n\fR オプションを使用します。
.sp
メモリーの量およびシステム負荷によっては、メモリーの移動に数分かかる場合があります。メモリーの接続点に対して status コマンドを発行すると、操作の進行状況を監視できます。\fBcfgadm\fR コマンドを停止して、メモリー操作を中断することもできます。削除されたメモリーは、システムメモリープールに戻されます。
.RE

.sp
.ne 2
.mk
.na
\fBdisconnect\fR
.ad
.sp .6
.RS 4n
受容体の状態を disconnected に変更します。この機能は、システムボードスロットのみに適用されます。
.sp
占有装置の状態が configured になっている場合は、占有装置の構成解除を試みます。\fB\fR次に、システムボードの電源を切断します。この時点で、ボードをスロットから取り外すことができます。
.sp
ダイナミックシステムドメインをサポートするプラットフォームでは、この機能は、ボードを割り当てられた状態のままにします。
.sp
\fB-o nopoweroff\fR を指定した場合、\fBdisconnect\fR 機能は、ボードを電源が投入された状態のままにします。\fB-o unassign\fR を指定した場合、\fBdisconnect\fR 機能は、ドメインからボードを割り当て解除します。
.sp
ドメインからボードを割り当て解除した場合、そのボードを別のドメインに割り当てることができます。ただし、別のドメインに割り当てた場合、割り当て解除されたドメインはそのボードを使用できなくなります。
.RE

.sp
.ne 2
.mk
.na
\fBconfigure\fR
.ad
.sp .6
.RS 4n
占有装置の状態を configured に変更します。この機能は、システムボードスロット、およびシステムボード上のすべてのコンポーネントに適用されます。
.sp
受容体の状態が disconnected になっている場合は、\fBconfigure\fR 機能は受容体への接続を試みます。その後、\fBconnect\fR 機能によって作成されたデバイスツリーを順に調べていき、必要に応じてデバイスを接続します。この機能を実行すると、すでに構成済みのコンポーネントを除き、ボード上のすべてのコンポーネントが構成されます。
.sp
\fBCPU\fR の場合、\fBconfigure\fR 機能により、\fBCPU\fR が \fBCPU\fR リストに追加されます。メモリーの場合、\fBconfigure\fR 機能は、メモリーが初期化されているのを確認してから、メモリーをシステムメモリープールに追加します。\fBconfigure\fR 機能が正常に完了すると、\fBCPU\fR とメモリーは使用できる状態になっています。
.sp
I/O デバイスの場合、デバイスを使用できるようにするには、\fBmount\fR コマンドと \fBifconfig\fR コマンドを使用する必要があります。\fBifconfig\fR(1M) および \fBmount\fR(1M) を参照してください。
.RE

.sp
.ne 2
.mk
.na
\fBconnect\fR
.ad
.sp .6
.RS 4n
受容体の状態を connected に変更します。この機能は、システムボードスロットのみに適用されます。
.sp
ボードスロットがドメインに割り当てられていない場合、\fBconnect\fR 機能は、ドメインへのスロットの割り当てを試みます。次に、ボードの電源を投入し、テストして、ボードをシステムバスに電気的に接続し、コンポーネントを調べます。
.sp
\fBconnect\fR 機能が正常に完了したら、\fB-a\fR オプションを使用して、ボード上のコンポーネントのステータスを表示できます。\fBconnect\fR 機能は、すべてのコンポーネントを unconfigured 状態のままにします。
.sp
割り当て手順は、ダイナミックシステムドメインをサポートするプラットフォームのみに適用されます。
.RE

.RE

.sp
.ne 2
.mk
.na
\fB\fB-f\fR\fR
.ad
.sp .6
.RS 4n
ソフトウェアの状態の変更に関する制約を無効化します。 
.sp
\fB-f\fR によって、ハードウェアおよびオペレーティングシステムの基本的な安全および可用性に関する制約が無効化されることはありません。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-l\fR\fR
.ad
.sp .6
.RS 4n
\fBcfgadm \fR(1M) で指定されている \fB-s\fR、\fB-v\fR、および \fB-a\fR の各オプションによって制御される形式で指定された接続点の状態や条件を一覧表示します。後述するように、\fBcfgadm_sbd\fR プラグインにより、info フィールドに固有の情報が示されます。この情報の形式は、\fB\fR\fB-o\fR\fB parsable\fR オプションによって変更できます。
.sp
構文解析可能な \fBinfo\fR フィールドは、次で構成されます。 
.sp
.ne 2
.mk
.na
\fBcpu\fR
.ad
.sp .6
.RS 4n
\fBcpu\fR タイプでは、次の情報が表示されます。
.sp
.ne 2
.mk
.na
\fB\fBcpuid=\fR\fI#\fR\fB[,\fR\fI#\fR\fB\&.\|.\|.]\fR\fR
.ad
.sp .6
.RS 4n
ここで、\fI#\fR は数値であり、\fBCPU\fR の \fBID\fR を表します。複数の \fI#\fR が存在する場合、この \fBCPU\fR には、複数のアクティブな仮想プロセッサがあります。
.RE

.sp
.ne 2
.mk
.na
\fB\fBspeed=\fR\fI#\fR\fR
.ad
.sp .6
.RS 4n
ここで、\fI#\fR は数値であり、\fBCPU\fR の速度を \fBMHz\fR で表します。
.RE

.sp
.ne 2
.mk
.na
\fB\fBecache=\fR\fI#\fR\fR
.ad
.sp .6
.RS 4n
ここで、\fI#\fR は数値であり、外部キャッシュのサイズを M バイトで表します。\fBCPU\fR に複数のアクティブな仮想プロセッサがある場合、外部キャッシュは仮想プロセッサ間で共有されるか、仮想プロセッサ間で分割されます。
.RE

.RE

.sp
.ne 2
.mk
.na
\fBmemory\fR
.ad
.sp .6
.RS 4n
\fBmemory\fR タイプでは、必要に応じて次の情報が表示されます。
.sp
.ne 2
.mk
.na
\fBaddress=\fI#\fR\fR
.ad
.sp .6
.RS 4n
ここで、\fI#\fR は数値であり、ベース物理アドレスを表します。
.RE

.sp
.ne 2
.mk
.na
\fBsize=\fI#\fR\fR
.ad
.sp .6
.RS 4n
ここで、\fI#\fR は数値であり、メモリーのサイズを \fBK バイト\fRで表します。
.RE

.sp
.ne 2
.mk
.na
\fBpermanent=\fI#\fR\fR
.ad
.sp .6
.RS 4n
ここで、\fI#\fR は数値であり、永続メモリーのサイズを \fBK バイト\fRで表します。
.RE

.sp
.ne 2
.mk
.na
\fBunconfigurable\fR
.ad
.sp .6
.RS 4n
メモリーを構成解除できないようにするオペレーティングシステム設定です。
.RE

.sp
.ne 2
.mk
.na
\fBinter-board-interleave\fR
.ad
.sp .6
.RS 4n
ボードが、ほかのボードとのインタリーブに参加しています。
.RE

.sp
.ne 2
.mk
.na
\fBsource=\fIap_id\fR\fR
.ad
.sp .6
.RS 4n
ソースの接続点を表します。
.RE

.sp
.ne 2
.mk
.na
\fBtarget=\fIap_id\fR\fR
.ad
.sp .6
.RS 4n
ターゲットの接続点を表します。
.RE

.sp
.ne 2
.mk
.na
\fBdeleted=\fI#\fR\fR
.ad
.sp .6
.RS 4n
ここで、\fI#\fR は数値であり、すでに削除されたメモリーの量を \fBK バイト\fRで表します。
.RE

.sp
.ne 2
.mk
.na
\fBremaining=\fI#\fR\fR
.ad
.sp .6
.RS 4n
ここで、\fI#\fR は数値であり、削除されるメモリーの量を \fBK バイト\fRで表します。
.RE

.RE

.sp
.ne 2
.mk
.na
\fBio\fR
.ad
.sp .6
.RS 4n
\fBio\fR タイプでは、次の情報が表示されます。
.sp
.ne 2
.mk
.na
\fBdevice=\fIpath\fR\fR
.ad
.sp .6
.RS 4n
I/O コンポーネントの物理パスを表します。
.RE

.sp
.ne 2
.mk
.na
\fBreferenced\fR
.ad
.sp .6
.RS 4n
I/O コンポーネントは参照されています。
.RE

.RE

.sp
.ne 2
.mk
.na
\fBboard\fR
.ad
.sp .6
.RS 4n
\fBboard\fR タイプでは、次のブール型の名前が表示されます。これらが存在しない場合は、反対の意味になります。
.sp
.ne 2
.mk
.na
\fBassigned\fR
.ad
.sp .6
.RS 4n
ボードがドメインに割り当てられています。
.RE

.sp
.ne 2
.mk
.na
\fBpowered-on\fR
.ad
.sp .6
.RS 4n
ボードに電源が投入されています。
.RE

\fB-o\fR \fBparsable\fR オプションを指定しない場合、\fBinfo\fR フィールドには、同じ項目がより読みやすい形式で表示されます。
.RE

.RE

.sp
.ne 2
.mk
.na
\fB\fB-o\fR parsable\fR
.ad
.sp .6
.RS 4n
ブール型の名前、または、スペース文字で区切られた一連の名前=値のペアとして \fBinfo\fR フィールドに情報を返します。\fI\fR\fB\fR 
.sp
\fB-o parsable\fR オプションは、\fB-s\fR オプションと組み合わせて使用できます。\fB-s\fR オプションについては、\fBcfgadm\fR(1M) のマニュアルページを参照してください。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-t\fR\fR
.ad
.sp .6
.RS 4n
ボードをテストします。
.sp
ボードは、適切なレベルのテストをパスしなければ、接続できません。 
.sp
このオプションを使用すると、適切なテストレベルをすでにパスしていても、必ずボードのテストが試みられます。\fB\fR\fB-c\fR\fB connect\fR 状態変更機能が発行されたときにもテストは実行されます。この場合で、ボードに適切なテストレベルがすでに示されているときは、テスト手順が省略されます。したがって、\fB-t\fR オプションを使用すると、ボードがテストされるように明示的に要求できます。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-x\fR\fI function\fR\fR
.ad
.sp .6
.RS 4n
sbd クラス機能を実行します。次の機能を使用できます。
.sp
.ne 2
.mk
.na
\fBassign\fR
.ad
.sp .6
.RS 4n
ドメインにボードを割り当てます。
.sp
受容体の状態は disconnected または empty である必要があります。また、ボードは、ドメインの使用可能なコンポーネントのリストに含まれている必要があります。「ダイナミックシステムドメイン」を参照してください。
.RE

.sp
.ne 2
.mk
.na
\fBunassign\fR
.ad
.sp .6
.RS 4n
ドメインからボードを割り当て解除します。
.sp
受容体の状態は disconnected または empty である必要があります。また、ボードは、ドメインの使用可能なコンポーネントのリストに含まれている必要があります。「ダイナミックシステムドメイン」を参照してください。
.RE

.sp
.ne 2
.mk
.na
\fBpoweron\fR
.ad
.sp .6
.RS 4n
システムボードに電源を投入します。
.sp
受容体の状態は disconnected である必要があります。
.RE

.sp
.ne 2
.mk
.na
\fBpoweroff\fR
.ad
.sp .6
.RS 4n
システムボードの電源を切断します。
.sp
受容体の状態は disconnected である必要があります。
.RE

.RE

.SH オペランド
.sp
.LP
次のオペランドがサポートされています。
.sp
.ne 2
.mk
.na
\fBReceptacle \fIap_id\fR\fR
.ad
.sp .6
.RS 4n
Sun Fire 15K などの Sun Fire ハイエンドシステムの場合は、受容体の接続点 \fBID\fR は、\fBSB\fIX\fR\fR または \fBIO\fIX\fR\fR の形式をとります。ここで、\fIX\fR はスロット番号です。
.sp
正確な形式はプラットフォームによって異なり、通常は、マシン上の物理ラベルに対応します。「\fB注意事項\fR」の節のプラットフォーム固有の情報を参照してください。
.RE

.sp
.ne 2
.mk
.na
\fBComponent \fIap_id\fR\fR
.ad
.sp .6
.RS 4n
コンポーネントの接続点 \fBID\fR は、\fIcomponent_typeX\fR の形式をとります。ここで、\fIcomponent_type\fR は、「コンポーネントタイプ」で説明されているいずれかのコンポーネントタイプであり、\fIX\fR はコンポーネント番号です。コンポーネント番号は、ボードを基準としたユニット番号です。
.sp
上記の規則は、メモリーコンポーネントには適用されません。メモリーの接続点に対する DR 操作は、いずれもシステムボード上のすべてのメモリーに影響します。
.RE

.SH 使用例
.sp
.LP
次の例は、Sun Fire 15K システムでのユーザー入力とシステム出力を示しています。ユーザー入力 (具体的には、接続点に対する参照) とシステム出力は、6800 のような Sun Fire ミッドレンジシステムなどのほかの Sun Fire システムでは異なる場合があります。Sun Fire ハイエンドモデル以外での \fBcfgadm_sbd\fR プラグインの使用に関する具体的な情報については、プラットフォームにおける注意事項を参照してください。
.LP
\fB例 1 \fRすべてのシステムボードの一覧表示
.sp
.in +2
.nf
# \fBcfgadm -a -s "select=class(sbd)"\fR

Ap_Id         Type      Receptacle     Occupant       Condition
SB0           CPU       connected      configured     ok
SB0::cpu0     cpu       connected      configured     ok
SB0::memory   memory    connected      configured     ok
IO1           HPCI      connected      configured     ok
IO1::pci0     io        connected      configured     ok
IO1::pci1     io        connected      configured     ok
SB2           CPU       disconnected   unconfigured   failed
SB3           CPU       disconnected   unconfigured   unusable
SB4           unknown   empty          unconfigured   unknown
.fi
.in -2
.sp

.sp
.LP
この例は、次のそれぞれの状況を示しています。

.RS +4
.TP
.ie t \(bu
.el o
スロット 2 のボードでテストが失敗しました。
.RE
.RS +4
.TP
.ie t \(bu
.el o
スロット 3 は使用できないため、そのスロットにボードをホットプラグすることはできません。
.RE
.LP
\fB例 2 \fRシステムボード上のすべての \fBCPU\fR の一覧表示
.sp
.in +2
.nf
# \fBcfgadm -a -s "select=class(sbd):type(cpu)"\fR

Ap_Id         Type      Receptacle     Occupant       Condition
SB0::cpu0     cpu       connected      configured     ok
SB0::cpu1     cpu       connected      configured     ok
SB0::cpu2     cpu       connected      configured     ok
SB0::cpu3     cpu       connected      configured     ok
.fi
.in -2
.sp

.LP
\fB例 3 \fR\fBCPU\fR 情報フィールドの表示
.sp
.in +2
.nf
# \fBcfgadm -l -s noheadings,cols=info SB0::cpu0\fR

cpuid 16, speed 400 MHz, ecache 8 Mbytes
.fi
.in -2
.sp

.LP
\fB例 4 \fR構文解析可能な形式での \fBCPU\fR 情報フィールドの表示
.sp
.in +2
.nf
# \fBcfgadm -l -s noheadings,cols=info -o parsable SB0::cpu0\fR

cpuid=16 speed=400 ecache=8
.fi
.in -2
.sp

.LP
\fB例 5 \fRI/O ボード上のデバイスの表示
.sp
.in +2
.nf
# \fBcfgadm -a -s noheadings,cols=ap_id:info -o parsable IO1\fR

IO1       powered-on assigned
IO1::pci0 device=/devices/saf@0/pci@0,2000 referenced
IO1::pci1 device=/devices/saf@0/pci@1,2000 referenced
.fi
.in -2
.sp

.LP
\fB例 6 \fR構成解除操作の監視
.sp
.LP
次の例では、メモリーサイズが K バイトで表示されています。

.sp
.in +2
.nf
# \fBcfgadm -c unconfigure -y SB0::memory &\fR
# \fBcfgadm -l -s noheadings,cols=info -o parsable SB0::memory SB1::memory\fR

address=0x0 size=2097152 permanent=752592 target=SB1::memory 
     deleted=1273680 remaining=823472
address=0x1000000 size=2097152 source=SB0::memory
.fi
.in -2
.sp

.LP
\fB例 7 \fRドメインへのスロットの割り当て
.sp
.in +2
.nf
# \fBcfgadm -x assign SB2\fR
.fi
.in -2
.sp

.LP
\fB例 8 \fRドメインからのスロットの割り当て解除
.sp
.in +2
.nf
# \fBcfgadm -x unassign SB3\fR
.fi
.in -2
.sp

.SH 属性
.sp
.LP
属性についての詳細は、\fBattributes\fR(5) を参照してください。
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i) 
lw(2.75i) |lw(2.75i) 
.
属性タイプ属性値
_
使用条件\fBsystem/library/platform\fR
_
安定性下記を参照。
.TE

.sp
.LP
インタフェースの安定性は開発中です。出力の安定性は不安定です。
.SH 関連項目
.sp
.LP
\fBcfgadm\fR(1M), \fBdevfsadm\fR(1M), \fBifconfig\fR(1M), \fBmount\fR(1M), \fBpbind\fR(1M), \fBpsradm\fR(1M), \fBpsrinfo\fR(1M), \fBconfig_admin\fR(3CFGADM), \fBattributes\fR(5)
.SH 注意事項
.sp
.LP
この節では、メモリーの削除操作の進行状況を監視する方法について説明しています。また、プラットフォーム固有の情報も示しています。
.SS "メモリーの削除の監視"
.sp
.LP
次のシェルスクリプトを使用すると、メモリーの削除操作の進行状況を監視できます。  
.sp
.in +2
.nf
# \fBcfgadm -c unconfigure -y SB0::memory &\fR
# \fBwatch_memdel SB0\fR

#!/bin/sh
# This is the watch_memdel script.

if [ -z "$1" ]; then
        printf "usage:  %s board_id\en" `basename $0`
        exit 1
fi

board_id=$1

cfgadm_info='cfgadm -s noheadings,cols=info -o parsable'

eval `$cfgadm_info $board_id::memory`

if [ -z "$remaining" ]; then
        echo no memory delete in progress involving $board_id
        exit 0
fi

echo deleting target $target

while true
do
        eval `$cfgadm_info $board_id::memory`

        if [ -n "$remaining" -a "$remaining" -ne 0 ]
        then
                echo $deleted KBytes deleted, $remaining KBytes remaining
                remaining=
        else
                echo memory delete is done
                exit 0
        fi
        sleep 1
done
exit 0
.fi
.in -2
.sp

.SS "Sun Enterprise 10000 プラットフォームにおける注意事項"
.sp
.LP
Sun Enterprise 10000 システム上の接続点を参照するには、次の構文を使用します。
.sp
.in +2
.nf
\fIboard\fR::\fIcomponent\fR
.fi
.in -2
.sp

.sp
.LP
ここで、\fIboard\fR はシステムボードを指し、\fIcomponent\fR は個々のコンポーネントを指します。システムボードの範囲は、\fBSB0\fR (ゼロ) から \fBSB15\fR までです。最大で 16 枚のシステムボードを使用できます。
.sp
.LP
Sun Enterprise 10000 ドメインを実行している DR 3.0 モデルでは、\fBcfgadm_sbd\fR プラグインによって提供される機能の一部がサポートされます。サポートされる唯一の操作は、ドメイン内の接続点のステータスを表示することです。これは、\fB-l\fR オプションと、これに関連付けられているすべてのオプションに相当します。 
.sp
.LP
ドメインからほかの操作を実行しようとすると、操作がサポートされていないことを示すエラーが表示されます。システムボードを追加または削除するすべての操作は、システムサービスプロセッサから開始する必要があります。
.SS "Sun Fire ハイエンドシステムプラットフォームにおける注意事項"
.sp
.LP
Sun Fire ハイエンドシステム上の接続点を参照するには、次の構文を使用します。
.sp
.in +2
.nf
\fIboard\fR::\fIcomponent\fR
.fi
.in -2
.sp

.sp
.LP
ここで、\fIboard\fR はシステムボードまたは I/O ボードを指し、\fIcomponent\fR は個々のコンポーネントを指します。 
.sp
.LP
システムの構成に応じて、システムボードの範囲は \fBSB0\fR (ゼロ) から \fBSB17\fR までとなり、I/O ボードの範囲は \fBIO0\fR (IO ゼロ) から \fBIO17\fR までとなります (最大で 18 枚のシステムボードおよび I/O ボードを使用できます)。 
.sp
.LP
Sun Fire ハイエンドシステムプラットフォームでは、\fB-t\fR オプションおよび \fB-x\fR オプションの動作が異なります。次の一覧で、これらの動作について説明します。
.sp
.ne 2
.mk
.na
\fB\fB-t\fR\fR
.ad
.sp .6
.RS 4n
システムコントローラが、CPU を使用し、\fBLPOST\fR と \fBhpost\fR コマンドを順に実行して、システムボードをテストします。I/O ボードをテストするために、ドライバが \fB-t\fR オプションに応答してテストを開始すると、テストがユーザーの操作なしで自動的に実行されます。ドライバは、CPU および一続きの物理的に連続したメモリーを構成解除します。その後、システムコントローラにコマンドを送信し、ボードをテストします。システムコントローラが、トランザクション/エラーケージの内側から CPU とメモリーを使用して、I/O ボードをテストします。I/O ボードのテストに使用できるのは、(MCPU ボードではなく) システムボードの CPU だけです。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-x\fR \fBassign | unassign\fR\fR
.ad
.sp .6
.RS 4n
Sun Fire ハイエンドシステム管理モデルでは、各ドメインの使用可能なコンポーネントのリストを使用して、プラットフォーム管理者がプラットフォームハードウェアを制御します。この情報は、システムコントローラで保持されます。プラットフォーム管理者だけが、ドメインの使用可能なコンポーネントのリストを変更できます。
.sp
ドメイン管理者は、ボードがそのドメインの使用可能なコンポーネントのリストに含まれている場合にのみ、そのボードの割り当てまたは割り当て解除を行うことができます。プラットフォーム管理者にはこの制限はなく、ドメインの使用可能なコンポーネントのリストに含まれていない場合でも、ボードの割り当てまたは割り当て解除を行うことができます。 
.RE

.SS "Sun Fire 15K のコンポーネントタイプ"
.sp
.LP
コンポーネントタイプの名前と説明を次に示します。
.sp
.ne 2
.mk
.na
\fB\fBcpu\fR\fR
.ad
.sp .6
.RS 4n
\fBCPU\fR
.RE

.sp
.ne 2
.mk
.na
\fB\fBio\fR\fR
.ad
.sp .6
.RS 4n
\fBI/O\fR デバイス
.RE

.sp
.ne 2
.mk
.na
\fB\fBmemory\fR\fR
.ad
.sp .6
.RS 4n
メモリー
.RE

.sp
.LP
\fB注:\fR メモリーコンポーネントに対する操作は、ボード上のすべてのメモリーコンポーネントに影響します。
.SS "Sun Fire ミッドレンジシステムプラットフォームにおける注意事項"
.sp
.LP
6800、4810、4800、3800 システムなどの Sun Fire ミッドレンジサーバーと Sun Fire ハイエンドシステムでは、接続点への参照がわずかに異なります。Sun Fire 15K 以外の Sun Fire システム上の接続点を参照するには、次の構文を使用します。
.sp
.in +2
.nf
N#.\fIboard\fR::\fIcomponent\fR
.fi
.in -2
.sp

.sp
.LP
ここで、\fBN#\fR はノードを指し、\fIboard\fR はシステムボードまたは I/O ボードを指し、\fIcomponent\fR は個々のコンポーネントを指します。 
.sp
.LP
システムの構成に応じて、システムボードの範囲は \fBSB0\fR から \fBSB5\fR までとなり、I/O ボードの範囲は \fBIB6\fR から \fBIB9\fR までとなります (最大で 6 枚のシステムボードと 4 枚の I/O ボードを使用できます)。 
.SS "Sun Fire ミッドレンジシステムのコンポーネントタイプ"
.sp
.LP
コンポーネントタイプの名前と説明を次に示します。
.sp
.ne 2
.mk
.na
\fB\fBcpu\fR\fR
.ad
.sp .6
.RS 4n
\fBCPU\fR
.RE

.sp
.ne 2
.mk
.na
\fB\fBpci\fR\fR
.ad
.sp .6
.RS 4n
\fBI/O\fR デバイス
.RE

.sp
.ne 2
.mk
.na
\fB\fBmemory\fR\fR
.ad
.sp .6
.RS 4n
メモリー
.RE

.sp
.LP
\fB注:\fR メモリーコンポーネントに対する操作は、ボード上のすべてのメモリーコンポーネントに影響します。
