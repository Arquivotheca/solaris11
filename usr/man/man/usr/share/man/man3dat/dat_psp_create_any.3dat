'\" te
.\" This manual page is derived from the DAT/uDAPL 1.2 specification.
.\" Portions Copyright (c) 2007, Sun Microsystems, Inc. All Rights Reserved.
.TH dat_psp_create_any 3DAT "16 Jul 2004" "SunOS 5.11" "Direct Access Transport Library Functions"
.SH NAME
dat_psp_create_any \- create a persistent Public Service Point
.SH SYNOPSIS
.LP
.nf
cc [ \fIflag\fR\&.\|.\|. ] \fIfile\fR\&.\|.\|. \fB-ldat\fR [ \fIlibrary\fR\&.\|.\|. ] 
#include <\fBdat/udat.h\fR>

DAT_RETURN
    dat_psp_create_any(
    IN    DAT_IA_HANDLE    \fIia_handle\fR,
    IN    DAT_CONN_QUAL    \fIconn_qual\fR,
    IN    DAT_EVD_HANDLE   \fIevd_handle\fR,
    IN    DAT_PSP_FLAGS    \fIpsp_flags\fR,
    OUT   DAT_PSP_HANDLE   *\fIpsp_handle\fR
    )
.fi

.SH PARAMETERS
.sp
.ne 2
.mk
.na
\fB\fIia_handle\fR\fR
.ad
.RS 14n
.rt  
Handle for an instance of DAT IA.
.RE

.sp
.ne 2
.mk
.na
\fB\fIconn_qual\fR\fR
.ad
.RS 14n
.rt  
Connection Qualifier of the IA on which the Public Service Point is listening.
.RE

.sp
.ne 2
.mk
.na
\fB\fIevd_handle\fR\fR
.ad
.RS 14n
.rt  
Event Dispatcher that provides the Connection Requested Events to the Consumer. The size of the event queue for the Event Dispatcher controls the size of the backlog for the created Public Service Point.
.RE

.sp
.ne 2
.mk
.na
\fB\fIpsp_flags\fR\fR
.ad
.RS 14n
.rt  
Flag that indicates whether the Provider or Consumer creates an Endpoint per arrived Connection Request. The value of \fBDAT_PSP_PROVIDER\fR indicates that the Consumer wants to get an Endpoint from the Provider; a value of \fBDAT_PSP_CONSUMER\fR means the Consumer does not want the Provider to provide an Endpoint for each arrived Connection Request.
.RE

.sp
.ne 2
.mk
.na
\fB\fIpsp_handle\fR\fR
.ad
.RS 14n
.rt  
Handle to an opaque Public Service Point.
.RE

.SH DESCRIPTION
.sp
.LP
The \fBdat_psp_create_any()\fR function creates a persistent Public Service Point that can receive multiple requests for connection and generate multiple Connection Request instances that are delivered through the specified Event Dispatcher in Notification events.
.sp
.LP
The \fBdat_psp_create_any()\fR function allocates an unused Connection Qualifier, creates a Public Service point for it, and returns both the allocated Connection Qualifier and the created Public Service Point to the Consumer.
.sp
.LP
The allocated Connection Qualifier should be chosen from "nonprivileged" ports that are not currently used or reserved by any user or kernel Consumer or host ULP of the IA. The format of allocated Connection Qualifier returned is specific to IA transport type.
.sp
.LP
The \fBdat_psp_create_any()\fR function is blocking. When the Public Service Point is created, \fBDAT_SUCCESS\fR is returned, \fIpsp_handle\fR contains a handle to an opaque Public Service Point Object, and \fIconn_qual\fR contains the allocated Connection Qualifier. When return is not \fBDAT_SUCCESS\fR, \fIpsp_handle\fR and \fIconn_qual\fR return values are undefined.
.sp
.LP
There is no explicit backlog for a Public Service Point. Instead, Consumers can control the size of backlog through the queue size of the associated Event Dispatcher.
.sp
.LP
The \fIpsp_flags\fR parameter allows Consumers to request that the Provider create an implicit Endpoint for each incoming Connection Request, or request that the Provider should not create one per Connection Request. If the Provider cannot satisfy the request, the operation shall fail and \fBDAT_MODEL_NOT_SUPPORTED\fR is returned.
.sp
.LP
All Endpoints created by the Provider have \fBDAT_HANDLE_NULL\fR  for the Protection Zone and all Event Dispatchers. The Provider sets up Endpoint attributes to match the Active side connection request. The Consumer can change Endpoint parameters. Consumers should change Endpoint parameters, especially PZ and EVD, and are advised to change parameters for local accesses prior to the connection request acceptance with the Endpoint.
.SH RETURN VALUES
.sp
.ne 2
.mk
.na
\fB\fBDAT_SUCCESS\fR\fR
.ad
.RS 30n
.rt  
The operation was successful.
.RE

.sp
.ne 2
.mk
.na
\fB\fBDAT_INSUFFICIENT_RESOURCES\fR\fR
.ad
.RS 30n
.rt  
The operation failed due to resource limitations.
.RE

.sp
.ne 2
.mk
.na
\fB\fBDAT_INVALID_HANDLE\fR\fR
.ad
.RS 30n
.rt  
The \fIia_handle\fR or \fIevd_handle\fR parameter is invalid.
.RE

.sp
.ne 2
.mk
.na
\fB\fBDAT_INVALID_PARAMETER\fR\fR
.ad
.RS 30n
.rt  
The \fIconn_qual\fR or \fIpsp_flags\fR parameter is invalid.
.RE

.sp
.ne 2
.mk
.na
\fB\fBDAT_CONN_QUAL_UNAVAILABLE\fR\fR
.ad
.RS 30n
.rt  
No Connection Qualifiers available.
.RE

.sp
.ne 2
.mk
.na
\fB\fBDAT_MODEL_NOT_SUPPORTED\fR\fR
.ad
.RS 30n
.rt  
The requested Model was not supported by the Provider.
.RE

.SH ATTRIBUTES
.sp
.LP
See \fBattributes\fR(5) for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i) 
lw(2.75i) |lw(2.75i) 
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelSafe
_
StandarduDAPL, 1.1, 1.2
.TE

.SH SEE ALSO
.sp
.LP
\fBlibdat\fR(3LIB), \fBattributes\fR(5)
