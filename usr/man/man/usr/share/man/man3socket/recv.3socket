'\" te
.\" Copyright (c) 2006, 2011, Oracle and/or its affiliates. All rights reserved.
.\" Copyright 1989 AT&T  
.TH recv 3SOCKET "24 Mar 2011" "SunOS 5.11" "Sockets Library Functions"
.SH NAME
recv, recvfrom, recvmsg \- receive a message from a socket
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [ \fIflag\fR... ] \fIfile\fR... \fB-lsocket\fR \fB -lnsl \fR [ \fIlibrary\fR... ]
#include <sys/socket.h>

\fBssize_t\fR \fBrecv\fR(\fBint\fR \fIs\fR, \fBvoid *\fR\fIbuf\fR, \fBsize_t\fR \fIlen\fR, \fBint\fR \fIflags\fR);
.fi

.LP
.nf
\fBssize_t\fR \fBrecvfrom\fR(\fBint\fR \fIs\fR, \fBvoid *\fR\fIbuf\fR, \fBsize_t\fR \fIlen\fR, \fBint\fR \fIflags\fR,
     \fBstruct sockaddr *\fR\fIfrom\fR, \fBsocklen_t *\fR\fIfromlen\fR);
.fi

.LP
.nf
\fBssize_t\fR \fBrecvmsg\fR(\fBint\fR \fIs\fR, \fBstruct msghdr *\fR\fImsg\fR, \fBint\fR \fIflags\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The \fBrecv()\fR, \fBrecvfrom()\fR, and \fBrecvmsg()\fR functions are used to receive messages from another socket. The \fIs\fR socket is created with \fBsocket\fR(3SOCKET).
.sp
.LP
If \fIfrom\fR is a non-\fBNULL\fR pointer, the source address of the message is filled in. The value-result parameter \fIfromlen\fR is initialized to the size of the buffer associated with \fIfrom\fR and modified on return to indicate the actual size of the address stored in the buffer. The length of the message is returned. If a message is too long to fit in the supplied buffer, excess bytes may be discarded depending on the type of socket from which the message is received. See \fBsocket\fR(3SOCKET).
.sp
.LP
If no messages are available at the socket, the receive call waits for a message to arrive. If the socket is non-blocking, \fB-1\fR is returned with the external variable \fBerrno\fR set to \fBEWOULDBLOCK\fR. See \fBfcntl\fR(2).
.sp
.LP
For processes on the same host, \fBrecvmsg()\fR can be used to receive a file descriptor from another process, but it cannot receive ancillary data. See \fBlibxnet\fR(3LIB).
.sp
.LP
If a zero-length buffer is specified for a message, an EOF condition results that is indistinguishable from the successful transfer of a file descriptor. For that reason, one or more bytes of data should be provided when \fBrecvmsg()\fR passes a file descriptor.
.sp
.LP
The \fBselect\fR(3C) call can be used to determine when more data arrives.
.sp
.LP
The \fIflags\fR parameter is formed by an \fBOR\fR operation on one or more of the following:
.sp
.ne 2
.mk
.na
\fB\fBMSG_OOB\fR\fR
.ad
.RS 16n
.rt  
Read any \fBout-of-band\fR data present on the socket rather than the regular \fBin-band\fR data.
.RE

.sp
.ne 2
.mk
.na
\fB\fBMSG_PEEK\fR\fR
.ad
.RS 16n
.rt  
Peek at the data present on the socket. The data is returned, but not consumed to allow a subsequent receive operation to see the same data.
.RE

.sp
.ne 2
.mk
.na
\fB\fBMSG_WAITALL\fR\fR
.ad
.RS 16n
.rt  
Messages are blocked until the full amount of data requested is returned. The \fBrecv()\fR function can return a smaller amount of data if a signal is caught, the connection is terminated, \fBMSG_PEEK\fR is specified, or if an error is pending for the socket.
.RE

.sp
.ne 2
.mk
.na
\fB\fBMSG_DONTWAIT\fR\fR
.ad
.RS 16n
.rt  
Pending messages received on the connection are returned. If data is unavailable, the function does not block. This behavior is the equivalent to specifying \fBO_NONBLOCK\fR on the file descriptor of a socket, except that write requests are unaffected.
.RE

.sp
.LP
The \fBrecvmsg()\fR function call uses a \fBmsghdr\fR structure defined in <\fBsys/socket.h\fR> to minimize the number of directly supplied parameters.
.SH RETURN VALUES
.sp
.LP
Upon successful completion, these functions return the number of bytes received. Otherwise, they return \fB-1\fR and set \fBerrno\fR to indicate the error.
.SH ERRORS
.sp
.LP
The \fBrecv()\fR, \fBrecvfrom()\fR, and \fBrecvmsg()\fR functions return errors under the following conditions:
.sp
.ne 2
.mk
.na
\fB\fBEBADF\fR\fR
.ad
.RS 16n
.rt  
The \fIs\fR file descriptor is invalid.
.RE

.sp
.ne 2
.mk
.na
\fB\fBEINVAL\fR\fR
.ad
.RS 16n
.rt  
The \fBMSG_OOB\fR flag is set and no out-of-band data is available.
.RE

.sp
.ne 2
.mk
.na
\fB\fBEINTR\fR\fR
.ad
.RS 16n
.rt  
The operation is interrupted by the delivery of a signal before any data is available to be received.
.RE

.sp
.ne 2
.mk
.na
\fB\fBEIO\fR\fR
.ad
.RS 16n
.rt  
An I/O error occurs while reading from or writing to the file system.
.RE

.sp
.ne 2
.mk
.na
\fB\fBENOMEM\fR\fR
.ad
.RS 16n
.rt  
Insufficient user memory is available to complete operation.
.RE

.sp
.ne 2
.mk
.na
\fB\fBENOSR\fR\fR
.ad
.RS 16n
.rt  
Insufficient \fBSTREAMS\fR resources are available for the operation to complete.
.RE

.sp
.ne 2
.mk
.na
\fB\fBENOTSOCK\fR\fR
.ad
.RS 16n
.rt  
\fIs\fR is not a socket.
.RE

.sp
.ne 2
.mk
.na
\fB\fBESTALE\fR\fR
.ad
.RS 16n
.rt  
A stale NFS file handle exists.
.RE

.sp
.ne 2
.mk
.na
\fB\fBEWOULDBLOCK\fR\fR
.ad
.RS 16n
.rt  
The socket is marked non-blocking and the requested operation would block.
.RE

.sp
.ne 2
.mk
.na
\fB\fBECONNREFUSED\fR\fR
.ad
.RS 16n
.rt  
The requested connection was refused by the peer. For connected IPv4 and IPv6 datagram sockets, this indicates that the system received an \fBICMP Destination Port Unreachable\fR message from the peer.
.RE

.sp
.LP
The \fBrecv()\fR and \fBrecvfrom()\fR functions fail under the following conditions:
.sp
.ne 2
.mk
.na
\fB\fBEINVAL\fR\fR
.ad
.RS 10n
.rt  
The \fIlen\fR argument overflows a \fBssize_t\fR.
.RE

.sp
.LP
The \fBrecvmsg()\fR function returns errors under the following conditions:
.sp
.ne 2
.mk
.na
\fB\fBEINVAL\fR\fR
.ad
.RS 10n
.rt  
The \fBmsg_iovlen\fR member of the \fBmsghdr\fR structure pointed to by \fImsg\fR is less than or equal to \fB0\fR, or greater than \fB[IOV_MAX}\fR. See \fBIntro\fR(2) for a definition of \fB[IOV_MAX}\fR.
.RE

.sp
.ne 2
.mk
.na
\fB\fBEINVAL\fR\fR
.ad
.RS 10n
.rt  
One of the \fIiov_len\fR values in the \fBmsg_iov\fR array member of the \fBmsghdr\fR structure pointed to by \fImsg\fR is negative, or the sum of the \fIiov_len\fR values in the \fBmsg_iov\fR array overflows a \fBssize_t\fR.
.RE

.SH ATTRIBUTES
.sp
.LP
See \fBattributes\fR(5) for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i) 
lw(2.75i) |lw(2.75i) 
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelSafe
.TE

.SH SEE ALSO
.sp
.LP
\fBfcntl\fR(2), \fBioctl\fR(2), \fBread\fR(2), \fBconnect\fR(3SOCKET), \fBgetsockopt\fR(3SOCKET), \fBlibxnet\fR(3LIB), \fBselect\fR(3C), \fBsend\fR(3SOCKET), \fBsocket\fR(3SOCKET), \fBsocket.h\fR(3HEAD), \fBattributes\fR(5)
