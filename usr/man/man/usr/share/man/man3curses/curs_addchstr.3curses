'\" te
.\" Copyright 1989 AT&T
.\" Portions Copyright (c) 1996, Sun Microsystems, Inc. All Rights Reserved.
.TH curs_addchstr 3CURSES "31 Dec 1996" "SunOS 5.11" "Curses Library Functions"
.SH NAME
curs_addchstr, addchstr, addchnstr, waddchstr, waddchnstr, mvaddchstr, mvaddchnstr, mvwaddchstr, mvwaddchnstr \- add string of characters and attributes to a curses window
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [ \fIflag\fR ... ] \fIfile\fR ... \fB-lcurses\fR [ \fIlibrary\fR ... ]
#include <curses.h>

\fBint\fR \fBaddchstr\fR(\fBchtype *\fR\fIchstr\fR);
.fi

.LP
.nf
\fBint\fR \fBaddchnstr\fR(\fBchtype *\fR\fIchstr\fR, \fBint\fR \fIn\fR);
.fi

.LP
.nf
\fBint\fR \fBwaddchstr\fR(\fBWINDOW *\fR\fIwin\fR, \fBchtype *\fR\fIchstr\fR);
.fi

.LP
.nf
\fBint\fR \fBwaddchnstr\fR(\fBWINDOW *\fR\fIwin\fR, \fBchtype *\fR\fIchstr\fR, \fBint\fR \fIn\fR);
.fi

.LP
.nf
\fBint\fR \fBmvaddchstr\fR(\fBint\fR \fIy\fR, \fBint\fR \fIx\fR, \fBchtype *\fR\fIchstr\fR);
.fi

.LP
.nf
\fBint\fR \fBmvaddchnstr\fR(\fBint\fR \fIy\fR, \fBint\fR \fIx\fR, \fBchtype *\fR\fIchstr\fR, \fBint\fR \fIn\fR);
.fi

.LP
.nf
\fBint\fR \fBmvwaddchstr\fR(\fBWINDOW *\fR\fIwin\fR, \fBint\fR \fIy\fR, \fBint\fR \fIx\fR, \fBchtype *\fR\fIchstr\fR);
.fi

.LP
.nf
\fBint\fR \fBmvwaddchnstr\fR(\fBWINDOW *\fR\fIwin\fR, \fBint\fR \fIy\fR, \fBint\fR \fIx\fR, \fBchtype *\fR\fIchstr\fR, \fBint\fR \fIn\fR);
.fi

.SH DESCRIPTION
.sp
.LP
All of these routines copy \fIchstr\fR directly into the window image structure starting at the current cursor position. The four routines with \fIn\fR as the last argument copy at most \fIn\fR elements, but no more than will fit on the line. If \fIn\fR=\fB-1\fR then the whole string is copied, to the maximum number that fit on the line.
.sp
.LP
The position of the window cursor is \fBnot\fR advanced. These routines works faster than \fBwaddnstr()\fR (see  \fBcurs_addstr\fR(3CURSES)) because they merely copy \fIchstr\fR into the window image structure. On the other hand, care must be taken when using these functions because they do not perform any kind of checking (such as for the newline character), they do not advance the current cursor position, and they truncate the string, rather then wrapping it around to the next line.
.SH RETURN VALUES
.sp
.LP
All routines return the integer \fBERR\fR upon failure and an integer value other than \fBERR\fR upon successful completion.
.SH ATTRIBUTES
.sp
.LP
See \fBattributes\fR(5) for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i) 
lw(2.75i) |lw(2.75i) 
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
MT-LevelUnsafe
.TE

.SH SEE ALSO
.sp
.LP
\fBcurs_addstr\fR(3CURSES), \fBcurses\fR(3CURSES), \fBattributes\fR(5)
.SH NOTES
.sp
.LP
The header <\fBcurses.h\fR> automatically includes the headers  <\fBstdio.h\fR> and <\fBunctrl.h\fR>.
.sp
.LP
Note that all routines except \fBwaddchnstr()\fR and \fBwaddchstr()\fR may be macros.
