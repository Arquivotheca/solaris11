'\" te
.\" Copyright 1989 AT&T
.\" Portions Copyright (c) 1996, Sun Microsystems, Inc. All Rights Reserved.
.TH curs_insstr 3CURSES "31 Dec 1996" "SunOS 5.11" "Curses Library Functions"
.SH NAME
curs_insstr, insstr, insnstr, winsstr, winsnstr, mvinsstr, mvinsnstr, mvwinsstr, mvwinsnstr \- insert string before character under the cursor in a curses window
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [ \fIflag\fR ... ] \fIfile\fR ... \fB-lcurses\fR [ \fIlibrary\fR ... ]
#include <curses.h>

\fBint\fR \fBinsstr\fR(\fBchar *\fR\fIstr\fR);
.fi

.LP
.nf
\fBint\fR \fBinsnstr\fR(\fBchar *\fR\fIstr\fR, \fBint\fR \fIn\fR);
.fi

.LP
.nf
\fBint\fR \fBwinsstr\fR(\fBWINDOW *\fR\fIwin\fR, \fBchar *\fR\fIstr\fR);
.fi

.LP
.nf
\fBint\fR \fBwinsnstr\fR(\fBWINDOW *\fR\fIwin\fR, \fBchar *\fR\fIstr\fR, \fBint\fR \fIn\fR);
.fi

.LP
.nf
\fBint\fR \fBmvinsstr\fR(\fBint\fR \fIy\fR, \fBint\fR \fIx\fR, \fBchar *\fR\fIstr\fR);
.fi

.LP
.nf
\fBint\fR \fBmvinsnstr\fR(\fBint\fR \fIy\fR, \fBint\fR \fIx\fR, \fBchar *\fR\fIstr\fR, \fBint\fR \fIn\fR);
.fi

.LP
.nf
\fBint\fR \fBmvwinsstr\fR(\fBWINDOW *\fR\fIwin\fR, \fBint\fR \fIy\fR, \fBint\fR \fIx\fR, \fBchar *\fR\fIstr\fR);
.fi

.LP
.nf
\fBint\fR \fBmvwinsnstr\fR(\fBWINDOW *\fR\fIwin\fR, \fBint\fR \fIy\fR, \fBint\fR \fIx\fR, \fBchar *\fR\fIstr\fR, \fBint\fR \fIn\fR);
.fi

.SH DESCRIPTION
.sp
.LP
With these routines, a character string (as many characters as will fit on the line) is inserted before the character under the cursor. All characters to the right of the cursor are moved to the right, with the possibility of the rightmost characters on the line being lost. The cursor position does not change (after moving to \fIy\fR, \fIx\fR, if specified). (This does not imply use of the hardware insert character feature.) The four routines with \fIn\fR as the last argument insert at most  \fIn\fR characters. If \fIn\fR<=0, then the entire string is inserted.
.sp
.LP
If a character in \fIstr\fR is a tab, newline, carriage return or backspace, the cursor is moved appropriately within the window. A newline also does a \fBclrtoeol()\fR before moving. Tabs are considered to be at every eighth column. If a character in \fIstr\fR is another control character, it is drawn in the \fB^\fR\fIX\fR notation. Calling \fBwinch()\fR after adding a control character (and moving to it, if necessary) does not return the control character, but instead returns the representation of the control character.
.SH RETURN VALUES
.sp
.LP
All routines return the integer \fBERR\fR upon failure and an integer value other than \fBERR\fR upon successful completion.
.SH ATTRIBUTES
.sp
.LP
See \fBattributes\fR(5) for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i) 
lw(2.75i) |lw(2.75i) 
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
MT-LevelUnsafe
.TE

.SH SEE ALSO
.sp
.LP
\fBcurs_clear\fR(3CURSES), \fBcurs_inch\fR(3CURSES), \fBcurses\fR(3CURSES), \fBattributes\fR(5)
.SH NOTES
.sp
.LP
The header <\fBcurses.h\fR> automatically includes the headers  <\fBstdio.h\fR> and <\fBunctrl.h\fR>.
.sp
.LP
Note that all but \fBwinsnstr()\fR may be macros.
