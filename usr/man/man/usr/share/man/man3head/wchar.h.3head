'\" te
.\" Copyright (c) 2001, The IEEE and The Open Group. All Rights Reserved. Portions Copyright (c) 2004, Sun Microsystems, Inc. All Rights Reserved.
.\"  Sun Microsystems, Inc. gratefully acknowledges The Open Group for permission to reproduce portions of its copyrighted documentation. Original documentation from The Open Group can be obtained online at  http://www.opengroup.org/bookstore/.
.\" The Institute of Electrical and Electronics Engineers and The Open Group, have given us permission to reprint portions of their documentation. In the following statement, the phrase "this text" refers to portions of the system documentation. Portions of this text are reprinted and reproduced in electronic form in the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard for Information Technology -- Portable Operating System Interface (POSIX), The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the Institute of Electrical and Electronics Engineers, Inc and The Open Group. In the event of any discrepancy between these versions and the original IEEE and The Open Group Standard, the original IEEE and The Open Group Standard is the referee document. The original Standard can be obtained online at http://www.opengroup.org/unix/online.html.  This notice shall appear on any product containing this material. 
.TH wchar.h 3HEAD "10 Sep 2004" "SunOS 5.11" "Headers"
.SH NAME
wchar.h, wchar \- wide-character handling
.SH SYNOPSIS
.LP
.nf
#include <\fBwchar.h\fR>
.fi

.SH DESCRIPTION
.sp
.LP
The <\fBwchar.h\fR> header defines the following types: 
.sp
.ne 2
.mk
.na
\fB\fBwchar_t\fR\fR
.ad
.RS 13n
.rt  
As described in <\fBstddef.h\fR>.
.RE

.sp
.ne 2
.mk
.na
\fB\fBwint_t\fR\fR
.ad
.RS 13n
.rt  
An integer type capable of storing any valid value of \fBwchar_t\fR or \fBWEOF\fR.
.RE

.sp
.ne 2
.mk
.na
\fB\fBwctype_t\fR\fR
.ad
.RS 13n
.rt  
A scalar type of a data object that can hold values which represent locale-specific character classification.
.RE

.sp
.ne 2
.mk
.na
\fB\fBmbstate_t\fR\fR
.ad
.RS 13n
.rt  
An object type other than an array type that can hold the conversion state information necessary to convert between sequences of (possibly multi-byte) characters and wide characters.  If a codeset is being used such that  an \fBmbstate_t\fR needs to preserve more than two levels of reserved state, the results are unspecified.
.RE

.sp
.ne 2
.mk
.na
\fB\fBFILE\fR\fR
.ad
.RS 13n
.rt  
As described in <\fBstdio.h\fR>.
.RE

.sp
.ne 2
.mk
.na
\fB\fBsize_t\fR\fR
.ad
.RS 13n
.rt  
As described in <\fBstddef.h\fR>.
.RE

.sp
.ne 2
.mk
.na
\fB\fBva_list\fR\fR
.ad
.RS 13n
.rt  
As described in <\fBstdarg.h\fR>.
.RE

.sp
.LP
The implementation supports one or more programming environments in which the width of \fBwint_t\fR is no greater than the width of type \fBlong\fR. The names of these programming environments can be obtained using the \fBconfstr\fR(3C) function or the \fBgetconf\fR(1) utility.
.sp
.LP
The <\fBwchar.h\fR> header defines the following macros:
.sp
.ne 2
.mk
.na
\fB\fBWCHAR_MAX\fR\fR
.ad
.RS 13n
.rt  
The maximum value representable by an object of type \fBwchar_t\fR.
.RE

.sp
.ne 2
.mk
.na
\fB\fBWCHAR_MIN\fR\fR
.ad
.RS 13n
.rt  
The minimum value representable by an object of type \fBwchar_t\fR.
.RE

.sp
.ne 2
.mk
.na
\fB\fBWEOF\fR\fR
.ad
.RS 13n
.rt  
Constant expression of type \fBwint_t\fR that is returned by several WP functions to indicate end-of-file.
.RE

.sp
.ne 2
.mk
.na
\fB\fBNULL\fR\fR
.ad
.RS 13n
.rt  
As described in <\fBstddef.h\fR>.
.RE

.sp
.LP
The tag \fBtm\fR is declared as naming an incomplete structure type, the contents of which are described in the header <\fBtime.h\fR>.
.sp
.LP
Inclusion of the <\fBwchar.h\fR> header can make visible all symbols from the headers <\fBctype.h\fR>,  <\fBstring.h\fR>, <\fBstdarg.h\fR>, <\fBstddef.h\fR>, <\fBstdio.h\fR>, <\fBstdlib.h\fR>, and <\fBtime.h\fR>.
.SH ATTRIBUTES
.sp
.LP
See \fBattributes\fR(5) for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i) 
lw(2.75i) |lw(2.75i) 
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
StandardSee \fBstandards\fR(5).
.TE

.SH SEE ALSO
.sp
.LP
\fBgetconf\fR(1), \fBbtowc\fR(3C), \fBconfstr\fR(3C), \fBfgetwc\fR(3C), \fBgetws\fR(3C), \fBfputwc\fR(3C), \fBfputws\fR(3C), \fBfwide\fR(3C), \fBfwprintf\fR(3C), \fBfwscanf\fR(3C), \fBgetwc\fR(3C), \fBgetwchar\fR(3C), \fBiswalpha\fR(3C), \fBiswctype\fR(3C), \fBmbsinit\fR(3C), \fBmbrlen\fR(3C), \fBmbrtowc\fR(3C), \fBmbsrtowcs\fR(3C), \fBtowlower\fR(3C), \fBtowupper\fR(3C), \fBungetwc\fR(3C), \fBvfwprintf\fR(3C), \fBwcrtomb\fR(3C), \fBwcsrtombs\fR(3C), \fBwcstring\fR(3C), \fBwcsstr\fR(3C), \fBwcstod\fR(3C), \fBwcscoll\fR(3C), \fBwcsftime\fR(3C), \fBwcstol\fR(3C), \fBwcstoul\fR(3C), \fBwcswidth\fR(3C), \fBwcsxfrm\fR(3C), \fBwctob\fR(3C), \fBwctype\fR(3C), \fBwcwidth\fR(3C), \fBwmemchr\fR(3C), \fBwmemcmp\fR(3C), \fBwmemcpy\fR(3C), \fBwmemmove\fR(3C), \fBwmemset\fR(3C), \fBstdarg\fR(3EXT), \fBstddef.h\fR(3HEAD), \fBstdio.h\fR(3HEAD), \fBstdlib.h\fR(3HEAD), \fBstring.h\fR(3HEAD), \fBtime.h\fR(3HEAD), \fBwctype.h\fR(3HEAD), \fBattributes\fR(5), \fBstandards\fR(5)
