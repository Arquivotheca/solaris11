'\" te
.\"  Copyright 1994, The X/Open Company Ltd.  All Rights Reserved  Portions Copyright 1989 AT&T  Portions Copyright (c) 1998, Sun Microsystems, Inc.  All Rights Reserved
.\"  Sun Microsystems, Inc. gratefully acknowledges The Open Group for permission to reproduce portions of its copyrighted documentation. Original documentation from The Open Group can be obtained online at  http://www.opengroup.org/bookstore/.
.\" The Institute of Electrical and Electronics Engineers and The Open Group, have given us permission to reprint portions of their documentation. In the following statement, the phrase "this text" refers to portions of the system documentation. Portions of this text are reprinted and reproduced in electronic form in the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard for Information Technology -- Portable Operating System Interface (POSIX), The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the Institute of Electrical and Electronics Engineers, Inc and The Open Group. In the event of any discrepancy between these versions and the original IEEE and The Open Group Standard, the original IEEE and The Open Group Standard is the referee document. The original Standard can be obtained online at http://www.opengroup.org/unix/online.html.  This notice shall appear on any product containing this material. 
.TH t_snddis 3NSL "7 May 1998" "SunOS 5.11" "Networking Services Library Functions"
.SH NAME
t_snddis \- send user-initiated disconnection request
.SH SYNOPSIS
.LP
.nf
#include <xti.h> 



\fBint\fR \fBt_snddis\fR(\fBint\fR \fIfd\fR, \fBconst struct t_call *\fR\fIcall\fR);
.fi

.SH DESCRIPTION
.sp
.LP
This routine is part of the \fBXTI\fR interfaces which evolved from the \fBTLI\fR interfaces. \fBXTI\fR represents the future evolution of these interfaces. However, \fBTLI\fR interfaces are supported for compatibility. When using a \fBTLI\fR routine that has the same name as an \fBXTI\fR routine, the  \fBtiuser.h\fR header file must be used.  Refer to the  TLI COMPATIBILITY  section for a description of differences between the two interfaces.
.sp
.LP
This function is used to initiate an abortive release on an already established connection, or to reject a connection request. The argument \fIfd\fR identifies the local transport endpoint of the connection, and \fIcall\fR specifies information associated with the abortive release. The argument \fIcall\fR points to a \fBt_call\fR structure which contains the following members:
.sp
.in +2
.nf
struct netbuf addr;
struct netbuf opt;
struct netbuf udata;
int sequence;
.fi
.in -2

.sp
.LP
The values in \fIcall\fR have different semantics, depending on the context of the call to \fBt_snddis()\fR. When rejecting a connection request, \fIcall\fR must be non-null and contain a valid value of \fIsequence\fR to uniquely identify the rejected connection indication to the transport provider. The \fIsequence\fR field is only meaningful if the transport connection is in the \fBT_INCON\fR state. The \fIaddr\fR and \fIopt\fR fields of \fIcall\fR are ignored. In all other cases, \fIcall\fR need only be used when data is being sent with the disconnection request. The \fIaddr\fR, \fIopt\fR and \fIsequence\fR fields of the \fBt_call\fR structure are ignored. If the user does not wish to send data to the remote user, the value of \fIcall\fR may be a null pointer.
.sp
.LP
The \fIudata\fR structure specifies the user data to be sent to the remote user. The amount of user data must not exceed the limits supported by the transport provider, as returned in the \fIdiscon\fR field, of the \fIinfo\fR argument of \fBt_open\fR(3NSL) or \fBt_getinfo\fR(3NSL). If the \fIlen\fR field of \fIudata\fR is zero, no data will be sent to the remote user.
.SH RETURN VALUES
.sp
.LP
Upon successful completion, a value of  \fB0\fR is returned.  Otherwise, a value of  -1 is returned and \fBt_errno\fR is set to indicate an error.
.SH VALID STATES
.sp
.LP
\fBT_DATAXFER\fR, \fBT_OUTCON\fR, \fBT_OUTREL\fR, \fBT_INREL\fR, \fBT_INCON(ocnt > 0)\fR.
.SH ERRORS
.sp
.LP
On failure, \fBt_errno\fR is set to one of the following:
.sp
.ne 2
.mk
.na
\fB\fBTBADF\fR\fR
.ad
.RS 15n
.rt  
The specified file descriptor does not refer to a transport endpoint.
.RE

.sp
.ne 2
.mk
.na
\fB\fBTBADDATA\fR\fR
.ad
.RS 15n
.rt  
The amount of user data specified was not within the bounds allowed by the transport provider.
.RE

.sp
.ne 2
.mk
.na
\fB\fBTBADSEQ\fR\fR
.ad
.RS 15n
.rt  
An invalid sequence number was specified, or a null \fIcall\fR pointer was specified, when rejecting a connection request.
.RE

.sp
.ne 2
.mk
.na
\fB\fBTLOOK\fR\fR
.ad
.RS 15n
.rt  
An asynchronous event, which requires attention, has occurred.
.RE

.sp
.ne 2
.mk
.na
\fB\fBTNOTSUPPORT\fR\fR
.ad
.RS 15n
.rt  
This function is not supported by the underlying transport provider.
.RE

.sp
.ne 2
.mk
.na
\fB\fBTOUTSTATE\fR\fR
.ad
.RS 15n
.rt  
The communications endpoint referenced by  \fIfd\fR is not in one of the states in which a call to this function is valid.
.RE

.sp
.ne 2
.mk
.na
\fB\fBTPROTO\fR\fR
.ad
.RS 15n
.rt  
This error indicates that a communication problem has been detected between XTI and the transport provider for which there is no other suitable \fBX\fRTI error \fB(t_errno)\fR. 
.RE

.sp
.ne 2
.mk
.na
\fB\fBTSYSERR\fR\fR
.ad
.RS 15n
.rt  
A system error has occurred during execution of this function.
.RE

.SH TLI COMPATIBILITY
.sp
.LP
The \fBXTI\fR and \fBTLI\fR interface definitions have common names but use different header files. This, and other semantic differences between the two interfaces are described in the subsections below.
.SS "Interface Header"
.sp
.LP
The \fBXTI\fR interfaces use the header file, \fBxti.h\fR. \fBTLI\fR interfaces should \fInot\fR use this header.  They should use the header:
.br
.in +2
\fB#include <tiuser.h>\fR
.in -2
.SS "Error Description Values"
.sp
.LP
The \fBt_errno\fR value \fBTPROTO\fR can be set by the \fBXTI\fR interface but not by the \fBTLI\fR interface.
.SS "Option Buffers"
.sp
.LP
The format of the options in an \fBopt\fR buffer is dictated by the transport provider. Unlike the \fBXTI\fR interface, the \fBTLI\fR interface does not fix the buffer format.
.SH ATTRIBUTES
.sp
.LP
See \fBattributes\fR(5)  for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i) 
lw(2.75i) |lw(2.75i) 
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
MT LevelSafe
.TE

.SH SEE ALSO
.sp
.LP
\fBt_connect\fR(3NSL), \fBt_getinfo\fR(3NSL), \fBt_listen\fR(3NSL), \fBt_open\fR(3NSL), \fBt_snd\fR(3NSL), \fBattributes\fR(5) 
.SH WARNINGS
.sp
.LP
\fBt_snddis()\fR is an abortive disconnection. Therefore a \fBt_snddis()\fR issued on a connection endpoint  may cause data previously sent by means of \fBt_snd\fR(3NSL), or data not yet received, to be lost, even if an error is returned.
