'\" te
.\"  Copyright 1994, The X/Open Company Ltd.  All Rights Reserved  Portions Copyright 1989 AT&T  Portions Copyright (c) 1998, Sun Microsystems, Inc.  All Rights Reserved
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for permission to reproduce portions of its copyrighted documentation. Original documentation from The Open Group can be obtained online at  http://www.opengroup.org/bookstore/.
.\" The Institute of Electrical and Electronics Engineers and The Open Group, have given us permission to reprint portions of their documentation. In the following statement, the phrase "this text" refers to portions of the system documentation. Portions of this text are reprinted and reproduced in electronic form in the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard for Information Technology -- Portable Operating System Interface (POSIX), The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the Institute of Electrical and Electronics Engineers, Inc and The Open Group. In the event of any discrepancy between these versions and the original IEEE and The Open Group Standard, the original IEEE and The Open Group Standard is the referee document. The original Standard can be obtained online at http://www.opengroup.org/unix/online.html.  This notice shall appear on any product containing this material.
.TH t_rcvconnect 3NSL "7 May 1998" "SunOS 5.11" "Networking Services Library Functions"
.SH NAME
t_rcvconnect \- receive the confirmation from a connection request
.SH SYNOPSIS
.LP
.nf
#include <xti.h>

\fBint\fR \fBt_rcvconnect\fR(\fBint\fR \fIfd\fR, \fBstruct t_call *\fR\fIcall\fR);
.fi

.SH DESCRIPTION
.sp
.LP
This routine is part of the \fBXTI\fR interfaces which evolved from the \fBTLI\fR interfaces. \fBXTI\fR represents the future evolution of these interfaces. However, \fBTLI\fR interfaces are supported for compatibility. When using a \fBTLI\fR routine that has the same name as an \fBXTI\fR routine, the  \fBtiuser.h\fR header file must be used.  Refer to the  \fBTLI\fR \fBCOMPATIBILITY\fR section for a description of differences between the two interfaces.
.sp
.LP
This function enables a calling transport user to determine the status of a previously sent connection request and is used in conjunction with \fBt_connect\fR(3NSL) to establish a connection in asynchronous mode, and to complete a synchronous  \fBt_connect\fR(3NSL) call that was interrupted by a signal. The connection will be established on successful completion of this function.
.sp
.LP
The argument \fIfd\fR identifies the local transport endpoint where communication will be established, and \fIcall\fR contains information associated with the newly established connection. The argument \fIcall\fR points to a \fBt_call\fR structure which contains the following members:
.sp
.in +2
.nf
struct netbuf addr;
struct netbuf opt;
struct netbuf udata;
int sequence;
.fi
.in -2

.sp
.LP
In \fIcall\fR, \fIaddr\fR returns the protocol address associated with the responding transport endpoint, \fIopt\fR presents any options associated with the connection, \fIudata\fR points to optional user data that may be returned by the destination transport user during connection establishment, and \fIsequence\fR has no meaning for this function.
.sp
.LP
The \fImaxlen\fR field of each argument must be set before issuing this function to indicate the maximum size of the buffer for each. However,  \fImaxlen\fR can be set to zero, in which case no information to this specific argument is given to the user on the return from  \fBt_rcvconnect()\fR. If  \fIcall\fR is set to  \fINULL,\fR no information at all is returned. By default, \fBt_rcvconnect()\fR executes in synchronous mode and waits for the connection to be established before returning. On return, the \fIaddr\fR, \fIopt\fR and \fIudata\fR fields reflect values associated with the connection.
.sp
.LP
If  \fBO_NONBLOCK\fR is set by means of \fBt_open\fR(3NSL) or \fBfcntl\fR(2), \fBt_rcvconnect()\fR executes in asynchronous mode, and reduces to a poll for existing connection confirmations. If none are available, \fBt_rcvconnect()\fR fails and returns immediately without waiting for the connection to be established. See \fBTNODATA\fR below. In this case, \fBt_rcvconnect()\fR must be called again to complete the connection establishment phase and retrieve the information returned in \fIcall\fR. 
.SH RETURN VALUES
.sp
.LP
Upon successful completion, a value of  \fB0\fR is returned.  Otherwise, a value of  -1 is returned and \fBt_errno\fR is set to indicate an error.
.SH VALID STATES
.sp
.LP
\fBT_OUTCON\fR.
.SH ERRORS
.sp
.LP
On failure, \fBt_errno\fR is set to one of the following:
.sp
.ne 2
.mk
.na
\fB\fBTBADF\fR\fR
.ad
.RS 15n
.rt  
The specified file descriptor does not refer to a transport endpoint.
.RE

.sp
.ne 2
.mk
.na
\fB\fBTBUFOVFLW\fR\fR
.ad
.RS 15n
.rt  
The number of bytes allocated for an incoming argument \fI(maxlen)\fR is greater than  \fB0\fR but not sufficient to store the value of that argument, and the connection information to be returned in \fIcall\fR will be discarded. The provider's state, as seen by the user, will be changed to  \fBT_DATAXFER.\fR 
.RE

.sp
.ne 2
.mk
.na
\fB\fBTLOOK\fR\fR
.ad
.RS 15n
.rt  
An asynchronous event has occurred on this transport connection and requires immediate attention.
.RE

.sp
.ne 2
.mk
.na
\fB\fBTNODATA\fR\fR
.ad
.RS 15n
.rt  
\fBO_NONBLOCK\fR was set, but a connection confirmation has not yet arrived.
.RE

.sp
.ne 2
.mk
.na
\fB\fBTNOTSUPPORT\fR\fR
.ad
.RS 15n
.rt  
This function is not supported by the underlying transport provider.
.RE

.sp
.ne 2
.mk
.na
\fB\fBTOUTSTATE\fR\fR
.ad
.RS 15n
.rt  
The communications endpoint referenced by  \fIfd\fR is not in one of the states in which a call to this function is valid.
.RE

.sp
.ne 2
.mk
.na
\fB\fBTPROTO\fR\fR
.ad
.RS 15n
.rt  
This error indicates that a communication problem has been detected between XTI and the transport provider for which there is no other suitable XTI error \fB(t_errno)\fR. 
.RE

.sp
.ne 2
.mk
.na
\fB\fBTSYSERR\fR\fR
.ad
.RS 15n
.rt  
A system error has occurred during execution of this function.
.RE

.SH TLI COMPATIBILITY
.sp
.LP
The \fBXTI\fR and \fBTLI\fR interface definitions have common names but use different header files. This, and other semantic differences between the two interfaces are described in the subsections below.
.SS "Interface Header"
.sp
.LP
The \fBXTI\fR interfaces use the header file, \fBxti.h\fR. \fBTLI\fR interfaces should \fInot\fR use this header.  They should use the header:
.br
.in +2
#include<tiuser.h>
.in -2
.SS "Error Description Values"
.sp
.LP
The \fBt_errno\fR value \fBTPROTO\fR can be set by the \fBXTI\fR interface but not by the \fBTLI\fR interface.
.sp
.LP
A \fBt_errno\fR value that this routine can return under different circumstances than its \fBXTI\fR counterpart is \fBTBUFOVFLW\fR. It can be returned even when the \fBmaxlen\fR field of the corresponding buffer has been set to zero.
.SH ATTRIBUTES
.sp
.LP
See \fBattributes\fR(5)  for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i) 
lw(2.75i) |lw(2.75i) 
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
MT LevelSafe
.TE

.SH SEE ALSO
.sp
.LP
\fBfcntl\fR(2), \fBt_accept\fR(3NSL), \fBt_alloc\fR(3NSL), \fBt_bind\fR(3NSL), \fBt_connect\fR(3NSL), \fBt_listen\fR(3NSL), \fBt_open\fR(3NSL), \fBt_optmgmt\fR(3NSL), \fBattributes\fR(5) 
