'\" te
.\" 版权所有 (c) 2010，Oracle 和/或其附属公司。保留所有权利。
.TH pgstat 1M "2010 年 8 月 17 日" "SunOS 5.11" "系统管理命令"
.SH 名称
pgstat \- 报告处理器组的利用率统计信息
.SH 用法概要
.LP
.nf
\fBpgstat\fR [\fB-A\fR] [\fB-C\fR] [\fB-p\fR] [\fB-s\fR \fIkey\fR | \fB-S\fR \fIkey\fR] [\fB-t\fR \fInumber\fR] [\fB-T\fR u | d] [\fB-v\fR]
[\fB-r\fR \fIstring\fR] [\fB-R\fR \fIstring\fR] [\fB-P\fR \fIpg\fR ...] [\fB-c\fR \fIprocessor_id\fR... ]
[\fIinterval\fR [\fIcount\fR]]
.fi

.LP
.nf
\fBpgstat\fR \fB-h\fR
.fi

.SH 描述
.sp
.LP
\fBpgstat\fR 显示处理器组 (Processor Group, PG) 的利用率统计信息。PG 是一组按共同特征分组到一起的 CPU。
.sp
.LP
操作系统使用 PG 来表示某些 CPU，这些 CPU 共享与性能相关的硬件，如执行流水线、高速缓存等。这些 PG 组织到一个分层结构中，后者构成了计算机的处理器拓扑模型。在此分层结构中，每个 CPU（导线束）具有一个叶 PG，该 PG 表示与其共享大多数硬件的 CPU。叶 PG 的每个连续父项与该 CPU 共享的硬件逐渐减少，直至到达根 PG。根 PG 包含系统中的所有 CPU，并表示彼此之间共享最少硬件的 CPU 组。（有关 PG 分层结构的示例，请参见下面的"示例"部分。）
.sp
.LP
如果计算机没有任何性能相关硬件的共享关系，\fBpgstat\fR 将只显示包含系统中所有 CPU 的根 PG。
.sp
.LP
缺省情况下，\fBpgstat\fR 执行以下操作：
.RS +4
.TP
.ie t \(bu
.el o
每隔一秒钟测量一次 PG 分层结构中所有 PG 的硬件和软件利用率。
.RE
.RS +4
.TP
.ie t \(bu
.el o
按深度优先顺序显示 PG 的利用率，并使用缩排帮助显示 PG 如何彼此关联。
.RE
.RS +4
.TP
.ie t \(bu
.el o
在每个间隔结束时显示每个 PG 的 ID、共享关系、硬件负载、软件负载和联机 CPU。
.RE
.sp
.LP
间隔和计数可作为参数提供，以指定抽样间隔中的秒数以及测量和显示指定 PG 利用率的次数。
.sp
.LP
您可以指定选项以进一步调整输出，以特定方式组织输出，以及指定感兴趣的 PG（有关详细信息，请参见下面的"选项"部分）。
.sp
.LP
不支持给定 PG 的利用率时，将显示连字符 ("\fB-\fR")，利用率不可用时将显示问号 (\fB?\fR)。对于需要使用 CPU 硬件性能计数器测量硬件利用率的系统，可能无法获得硬件利用率，因为 \fBcpc\fR(3CPC) 使用者（如 \fBcpustat\fR(1M)、\fBcputrack\fR(1)、\fBdtrace\fR(1M)）或者使用 \fBlibcpc\fR(3LIB) 的另一个应用程序会使用这些计数器。
.SH 选项
.sp
.LP
所支持的选项如下：
.sp
.ne 2
.mk
.na
\fB\fB-A\fR\fR
.ad
.sp .6
.RS 4n
当 \fBpgstat\fR 跨越多个间隔运行时显示利用率数据的汇总。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-c\fR \fIprocessor_id\fR... \fR
.ad
.sp .6
.RS 4n
显示包含指定 CPU 的 PG 的利用率。可以通过逗号分隔的 CPU ID 列表的形式指定 CPU。使用连字符 ("-") 可以指定连续的 CPU ID 范围（例如，\fB0-3\fR）。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-C\fR\fR
.ad
.sp .6
.RS 4n
显示每个 PG 中每个 CPU 的利用率。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-h\fR\fR
.ad
.sp .6
.RS 4n
显示简短帮助消息，并以退出状态 0 退出。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-p\fR\fR
.ad
.sp .6
.RS 4n
显示与 PG 对应的物理关系。如果某个 PG 具有与整个系统、某个处理器内核或某个芯片相同的 CPU，则会在 PG 共享关系之后的方括号 ("\fB[]\fR") 中显示 \fBsystem\fR、\fBcore\fR 或 \fBchip\fR。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-P\fR \fIpg\fR,...\fR
.ad
.sp .6
.RS 4n
显示指定 PG 的利用率。可以通过逗号分隔的 PG ID 列表的形式指定多个 PG。使用连字符 ("-") 可以指定连续的 PG ID 范围（例如，\fB0-3\fR）。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-r\fR \fIstring1\fR,\fI string2\fR,...\fR
.ad
.sp .6
.RS 4n
仅显示其共享关系名称与任何指定字符串匹配的 PG 的利用率。字符串可以是完整的关系名称，也可以是一个或多个关系名称的一部分。字符串的匹配不区分大小写。
.sp
您可以输入多个 \fB-r\fR 选项，这样可以匹配关系名称与任何指定字符串匹配的所有 PG。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-R\fR \fIstring1\fR,\fI string2\fR,...\fR
.ad
.sp .6
.RS 4n
仅显示其共享关系名称与指定名称\fB不同\fR的 PG 的相关信息。
.sp
字符串匹配与上述 \fB-r\fR 选项相同。可以输入多个 \fB-R\fR 选项。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-s\fR \fIkey\fR\fR
.ad
.sp .6
.RS 4n
按指定关键字降序排序输出行。指定关键字可以是以下各项之一：
.sp
.ne 2
.mk
.na
\fB\fBpg\fR\fR
.ad
.sp .6
.RS 4n
按 PG ID 排序。
.RE

.sp
.ne 2
.mk
.na
\fB\fBhwload\fR\fR
.ad
.sp .6
.RS 4n
按硬件利用率排序。
.RE

.sp
.ne 2
.mk
.na
\fB\fBswload\fR\fR
.ad
.sp .6
.RS 4n
按软件利用率排序。
.RE

.sp
.ne 2
.mk
.na
\fB\fBuser\fR\fR
.ad
.sp .6
.RS 4n
按用户时间排序。
.RE

.sp
.ne 2
.mk
.na
\fB\fBsys\fR\fR
.ad
.sp .6
.RS 4n
按系统时间排序。
.RE

.sp
.ne 2
.mk
.na
\fB\fBidle\fR\fR
.ad
.sp .6
.RS 4n
按空闲时间排序。
.RE

.sp
.ne 2
.mk
.na
\fB\fBdepth\fR\fR
.ad
.sp .6
.RS 4n
按 PG 树从根到叶降序排序，深度优先（缺省）。
.RE

.sp
.ne 2
.mk
.na
\fB\fBbreadth\fR\fR
.ad
.sp .6
.RS 4n
按 PG 树从根到叶降序排序，广度优先。
.RE

.RE

.sp
.ne 2
.mk
.na
\fB\fB-S\fR \fIkey\fR\fR
.ad
.sp .6
.RS 4n
按指定关键字升序排序输出行。可能的关键字值与 \fB-s\fR 选项相同。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-t\fR \fInumber\fR\fR
.ad
.sp .6
.RS 4n
显示指定整数的最大 PG 数。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-T\fR \fBu\fR | \fBd\fR\fR
.ad
.sp .6
.RS 4n
采用 Unix 时间（请参见 \fBtime \fR(2)）或 \fBdate\fR(1) 使用的标准日期格式显示每个抽样间隔的时间戳。
.RE

.sp
.ne 2
.mk
.na
\fB\fB-v\fR\fR
.ad
.sp .6
.RS 4n
显示每个 PG 的附加信息，包括硬件利用率和容量以及软件用户、系统和空闲时间。
.RE

.SH 输出标题
.sp
.LP
pgstat 会显示列标题，下面列出了这些标题及其含义。
.sp
.ne 2
.mk
.na
\fB\fBPG\fR\fR
.ad
.sp .6
.RS 4n
处理器组 ID。
.RE

.sp
.ne 2
.mk
.na
\fB\fBRELATIONSHIP\fR\fR
.ad
.sp .6
.RS 4n
PG 的共享关系。
.RE

.sp
.ne 2
.mk
.na
\fB\fBHW\fR\fR
.ad
.sp .6
.RS 4n
硬件负载百分比（针对间隔按 \fBUTIL\fR/\fBCAP\fR 计算）。
.RE

.sp
.ne 2
.mk
.na
\fB\fBUTIL\fR\fR
.ad
.sp .6
.RS 4n
在间隔内 PG 共享硬件组件的硬件利用率。该数字会很大，因此使用 \fBK\fR、\fBM\fR、\fBB\fR 和 \fBT\fR 分别表示千、百万、十亿和万亿。
.RE

.sp
.ne 2
.mk
.na
\fB\fBCAP\fR\fR
.ad
.sp .6
.RS 4n
在间隔内 PG 共享硬件组件的大约最大可能利用率。该数字会很大，因此使用 \fBK\fR、\fBM\fR、\fBB\fR 和 \fBT\fR 分别表示千、百万、十亿和万亿。
.RE

.sp
.ne 2
.mk
.na
\fB\fBSW\fR\fR
.ad
.sp .6
.RS 4n
软件负载百分比（按 (\fBUSR\fR + \fB SYS\fR) / (\fBUSR\fR + \fBSYS\fR + \fBIDLE\fR) 计算）。
.RE

.sp
.ne 2
.mk
.na
\fB\fBUSR\fR\fR
.ad
.sp .6
.RS 4n
间隔时间内软件线程在 PG 的 CPU 中以用户模式运行的时间百分比。
.RE

.sp
.ne 2
.mk
.na
\fB\fBSYS\fR\fR
.ad
.sp .6
.RS 4n
间隔时间内软件线程在 PG 的 CPU 中以系统模式运行的时间百分比。
.RE

.sp
.ne 2
.mk
.na
\fB\fBIDLE\fR\fR
.ad
.sp .6
.RS 4n
间隔时间内无任何软件线程在 PG 的 CPU 中运行的时间百分比。
.RE

.sp
.ne 2
.mk
.na
\fB\fBCPUS\fR\fR
.ad
.sp .6
.RS 4n
PG 中 CPU 的 CPU ID。
.RE

.SH 示例
.sp
.LP
在下面的示例中，系统包含一个具有 8 个内核和 32 个导线束的 UltraSPARC T1 处理器芯片。
.LP
\fB示例 1 \fR显示指定时间段内的利用率
.sp
.LP
以下命令显示最后两秒内所有 PG 的利用率。

.sp
.in +2
.nf
$ \fBpgstat 1 2\fR
PG  RELATIONSHIP            HW    SW  CPUS
 0  System                   -  0.4%  0-31
 3   Data_Pipe_to_memory     -  0.4%  0-31
 2    Floating_Point_Unit   0%  0.4%  0-31
 1     Integer_Pipeline     0%    0%  0-3
 4     Integer_Pipeline     0%    0%  4-7
 5     Integer_Pipeline     0%    0%  8-11
 6     Integer_Pipeline     0%  0.2%  12-15
 7     Integer_Pipeline     0%    0%  16-19
 8     Integer_Pipeline   2.8%  2.7%  20-23
 9     Integer_Pipeline   0.1%  0.2%  24-27
10     Integer_Pipeline     0%    0%  28-31
PG  RELATIONSHIP            HW    SW  CPUS
 0  System                   -  0.4%  0-31
 3   Data_Pipe_to_memory     -  0.4%  0-31
 2    Floating_Point_Unit   0%  0.4%  0-31
 1     Integer_Pipeline     0%  0.2%  0-3
 4     Integer_Pipeline     0%    0%  4-7
 5     Integer_Pipeline     0%    0%  8-11
 6     Integer_Pipeline     0%    0%  12-15
 7     Integer_Pipeline     0%    0%  16-19
 8     Integer_Pipeline   3.1%  2.5%  20-23
 9     Integer_Pipeline     0%    0%  24-27
10     Integer_Pipeline     0%  0.2%  28-31
.fi
.in -2
.sp

.LP
\fB示例 2 \fR显示有关整数流水线的信息
.sp
.LP
以下命令显示最后两秒内利用率最高的两条整数流水线的详细信息。

.sp
.in +2
.nf
$ \fBpgstat -v -t 2 -r 'Integer_Pipeline' 1 2\fR
PG  RELATIONSHIP         HW UTIL  CAP     SW    USR    SYS   IDLE CPUS
 1  Integer_Pipeline   0.2% 2.2M 1.4B   0.2%   0.0%   0.2%  99.8% 0-3
 4  Integer_Pipeline  13.1% 181M 1.4B  14.9%   0.0%  14.9%  85.1% 4-7
PG  RELATIONSHIP         HW UTIL  CAP     SW    USR    SYS   IDLE CPUS
 1  Integer_Pipeline   0.2% 1.9M 1.2B   0.2%   0.0%   0.2%  99.8% 0-3
 4  Integer_Pipeline  13.1% 163M 1.2B  14.9%   0.0%  14.9%  85.1% 4-7
.fi
.in -2
.sp

.LP
\fB示例 3 \fR显示指定时间段内的内核利用率
.sp
.LP
以下命令显示最后两分钟内内核利用率的信息。

.sp
.in +2
.nf
$ \fBpgstat -A 60 2\fR
PG  RELATIONSHIP              HW      SW  CPUS
 0  System                     -   56.9%  0-31
 3   Data_Pipe_to_memory       -   56.9%  0-31
 2    Floating_Point_Unit   0.0%   56.9%  0-31
 1     Integer_Pipeline    36.7%   58.7%  0-3
 4     Integer_Pipeline    41.9%   58.3%  4-7
 5     Integer_Pipeline    31.0%   58.0%  8-11
 6     Integer_Pipeline    30.7%   57.9%  12-15
 7     Integer_Pipeline    30.1%   55.8%  16-19
 8     Integer_Pipeline    40.2%   54.8%  20-23
 9     Integer_Pipeline    35.0%   56.0%  24-27
10     Integer_Pipeline    40.3%   55.8%  28-31
PG  RELATIONSHIP              HW      SW  CPUS
 0  System                     -   10.7%  0-31
 3   Data_Pipe_to_memory       -   10.7%  0-31
 2    Floating_Point_Unit   0.0%   10.7%  0-31
 1     Integer_Pipeline     9.0%   10.7%  0-3
 4     Integer_Pipeline     9.6%   10.8%  4-7
 5     Integer_Pipeline     8.6%    9.9%  8-11
 6     Integer_Pipeline    10.5%   11.9%  12-15
 7     Integer_Pipeline     9.1%   10.4%  16-19
 8     Integer_Pipeline     9.6%   10.9%  20-23
 9     Integer_Pipeline     8.9%   10.0%  24-27
10     Integer_Pipeline     9.5%   10.7%  28-31

       SUMMARY: UTILIZATION OVER 120 SECONDS

                             ------HARDWARE------ ------SOFTWARE------
PG  RELATIONSHIP             MIN    AVG    MAX    MIN    AVG    MAX CPUS
 0  System                     -      -      -  10.7%  10.7%  56.9% 0-31
 3   Data_Pipe_to_memory       -      -      -  10.7%  10.7%  56.9% 0-31
 2    Floating_Point_Unit   0.0%   0.0%   0.0%  10.7%  10.7%  56.9% 0-31
 1     Integer_Pipeline     9.0%   8.5%  36.7%  10.7%  10.7%  58.7% 0-3
 4     Integer_Pipeline     9.6%   9.1%  41.9%  10.8%  10.8%  58.3% 4-7
 5     Integer_Pipeline     8.6%   8.1%  31.0%   9.9%   9.9%  58.0% 8-11
 6     Integer_Pipeline    10.5%  10.0%  30.7%  11.9%  11.9%  57.9% 12-15
 7     Integer_Pipeline     9.1%   8.6%  30.1%  10.4%  10.4%  55.8% 16-19
 8     Integer_Pipeline     9.6%   9.1%  40.2%  10.9%  10.9%  54.8% 20-23
 9     Integer_Pipeline     8.9%   8.4%  35.0%  10.0%  10.0%  56.0% 24-27
10     Integer_Pipeline     9.5%   8.9%  40.3%  10.7%  10.7%  55.8% 28-31
.fi
.in -2
.sp

.SH 退出状态
.sp
.LP
将返回下列退出值：
.sp
.ne 2
.mk
.na
\fB\fB0\fR\fR
.ad
.sp .6
.RS 4n
成功完成。
.RE

.sp
.ne 2
.mk
.na
\fB\fB1\fR\fR
.ad
.sp .6
.RS 4n
无法从系统获取 PG 信息。
.RE

.sp
.ne 2
.mk
.na
\fB\fB2\fR\fR
.ad
.sp .6
.RS 4n
指定的间隔、计数或所有 CPU、 PG 和共享关系无效。
.RE

.sp
.ne 2
.mk
.na
\fB\fB3\fR\fR
.ad
.sp .6
.RS 4n
语法无效。
.RE

.SH 属性
.sp
.LP
有关以下属性的说明，请参见 \fBattributes\fR(5)：
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i) 
lw(2.75i) |lw(2.75i) 
.
属性类型属性值
_
可用性system/core-os
_
接口稳定性Uncommitted（未确定）
.TE

.sp
.LP
命令行选项和输出为 Uncommitted（未确定）。
.SH 另请参见
.sp
.LP
\fBcputrack\fR(1)、\fBcpustat\fR(1M)、\fBdtrace\fR(1M)、\fBpginfo\fR(1M)、\fBcpc\fR(3CPC)、\fBlibcpc\fR(3LIB)、\fBattributes\fR(5)
