.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.14
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "PERL 1"
.TH PERL 1 "2004-06-08" "perl v5.8.4" "Perl Programmers Reference Guide"
.SH "NAME"
perl \- Practical Extraction and Report Language
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBperl\fR	[\ \fB\-sTuU\fR\ ] [\ \fB\-hv\fR\ ]\ [\ \fB\-V\fR[:\fIconfigvar\fR]\ ]
    [\ \fB\-cw\fR\ ]\ [\ \fB\-d\fR[:\fIdebugger\fR]\ ]\ [\ \fB\-D\fR[\fInumber/list\fR]\ ]
    [\ \fB\-pna\fR\ ]\ [\ \fB\-F\fR\fIpattern\fR\ ]\ [\ \fB\-l\fR[\fIoctal\fR]\ ]\ [\ \fB\-0\fR[\fIoctal\fR]\ ]
    [\ \fB\-I\fR\fIdir\fR\ ]\ [\ \fB\-m\fR[\fB\-\fR]\fImodule\fR\ ]\ [\ \fB\-M\fR[\fB\-\fR]\fI'module...'\fR\ ]
    [\ \fB\-P\fR\ ] [\ \fB\-S\fR\ ] [\ \fB\-x\fR[\fIdir\fR]\ ]
    [\ \fB\-i\fR[\fIextension\fR]\ ] [\ \fB\-e\fR\ \fI'command'\fR\ ]\ [\ \fB\-\-\fR\ ]\ [\ \fIprogramfile\fR\ ]\ [\ \fIargument\fR\ ]...
.PP
If you're new to Perl, you should start with perlintro, which is a 
general intro for beginners and provides some background to help you
navigate the rest of Perl's extensive documentation.
.PP
For ease of access, the Perl manual has been split up into several sections.
.Sh "Overview"
.IX Subsection "Overview"
.Vb 3
\&    perl                Perl overview (this section)
\&    perlintro           Perl introduction for beginners
\&    perltoc             Perl documentation table of contents
.Ve
.Sh "Tutorials"
.IX Subsection "Tutorials"
.Vb 3
\&    perlreftut          Perl references short introduction
\&    perldsc             Perl data structures intro
\&    perllol             Perl data structures: arrays of arrays
.Ve
.PP
.Vb 2
\&    perlrequick         Perl regular expressions quick start
\&    perlretut           Perl regular expressions tutorial
.Ve
.PP
.Vb 4
\&    perlboot            Perl OO tutorial for beginners
\&    perltoot            Perl OO tutorial, part 1
\&    perltooc            Perl OO tutorial, part 2
\&    perlbot             Perl OO tricks and examples
.Ve
.PP
.Vb 1
\&    perlstyle           Perl style guide
.Ve
.PP
.Vb 3
\&    perlcheat           Perl cheat sheet
\&    perltrap            Perl traps for the unwary
\&    perldebtut          Perl debugging tutorial
.Ve
.PP
.Vb 10
\&    perlfaq             Perl frequently asked questions
\&      perlfaq1          General Questions About Perl
\&      perlfaq2          Obtaining and Learning about Perl
\&      perlfaq3          Programming Tools
\&      perlfaq4          Data Manipulation
\&      perlfaq5          Files and Formats
\&      perlfaq6          Regexes
\&      perlfaq7          Perl Language Issues
\&      perlfaq8          System Interaction
\&      perlfaq9          Networking
.Ve
.Sh "Reference Manual"
.IX Subsection "Reference Manual"
.Vb 21
\&    perlsyn             Perl syntax
\&    perldata            Perl data structures
\&    perlop              Perl operators and precedence
\&    perlsub             Perl subroutines
\&    perlfunc            Perl built-in functions
\&      perlopentut       Perl open() tutorial
\&      perlpacktut       Perl pack() and unpack() tutorial
\&    perlpod             Perl plain old documentation
\&    perlpodspec         Perl plain old documentation format specification
\&    perlrun             Perl execution and options
\&    perldiag            Perl diagnostic messages
\&    perllexwarn         Perl warnings and their control
\&    perldebug           Perl debugging
\&    perlvar             Perl predefined variables
\&    perlre              Perl regular expressions, the rest of the story
\&    perlreref           Perl regular expressions quick reference
\&    perlref             Perl references, the rest of the story
\&    perlform            Perl formats
\&    perlobj             Perl objects
\&    perltie             Perl objects hidden behind simple variables
\&      perldbmfilter     Perl DBM filters
.Ve
.PP
.Vb 3
\&    perlipc             Perl interprocess communication
\&    perlfork            Perl fork() information
\&    perlnumber          Perl number semantics
.Ve
.PP
.Vb 2
\&    perlthrtut          Perl threads tutorial
\&      perlothrtut       Old Perl threads tutorial
.Ve
.PP
.Vb 5
\&    perlport            Perl portability guide
\&    perllocale          Perl locale support
\&    perluniintro        Perl Unicode introduction
\&    perlunicode         Perl Unicode support
\&    perlebcdic          Considerations for running Perl on EBCDIC platforms
.Ve
.PP
.Vb 1
\&    perlsec             Perl security
.Ve
.PP
.Vb 5
\&    perlmod             Perl modules: how they work
\&    perlmodlib          Perl modules: how to write and use
\&    perlmodstyle        Perl modules: how to write modules with style
\&    perlmodinstall      Perl modules: how to install from CPAN
\&    perlnewmod          Perl modules: preparing a new module for distribution
.Ve
.PP
.Vb 1
\&    perlutil            utilities packaged with the Perl distribution
.Ve
.PP
.Vb 1
\&    perlcompile         Perl compiler suite intro
.Ve
.PP
.Vb 1
\&    perlfilter          Perl source filters
.Ve
.Sh "Internals and C Language Interface"
.IX Subsection "Internals and C Language Interface"
.Vb 7
\&    perlembed           Perl ways to embed perl in your C or C++ application
\&    perldebguts         Perl debugging guts and tips
\&    perlxstut           Perl XS tutorial
\&    perlxs              Perl XS application programming interface
\&    perlclib            Internal replacements for standard C library functions
\&    perlguts            Perl internal functions for those doing extensions
\&    perlcall            Perl calling conventions from C
.Ve
.PP
.Vb 4
\&    perlapi             Perl API listing (autogenerated)
\&    perlintern          Perl internal functions (autogenerated)
\&    perliol             C API for Perl's implementation of IO in Layers
\&    perlapio            Perl internal IO abstraction interface
.Ve
.PP
.Vb 1
\&    perlhack            Perl hackers guide
.Ve
.Sh "Miscellaneous"
.IX Subsection "Miscellaneous"
.Vb 2
\&    perlbook            Perl book information
\&    perltodo            Perl things to do
.Ve
.PP
.Vb 1
\&    perldoc             Look up Perl documentation in Pod format
.Ve
.PP
.Vb 14
\&    perlhist            Perl history records
\&    perldelta           Perl changes since previous version
\&    perl583delta        Perl changes in version 5.8.3
\&    perl582delta        Perl changes in version 5.8.2
\&    perl581delta        Perl changes in version 5.8.1
\&    perl58delta         Perl changes in version 5.8.0
\&    perl573delta        Perl changes in version 5.7.3
\&    perl572delta        Perl changes in version 5.7.2
\&    perl571delta        Perl changes in version 5.7.1
\&    perl570delta        Perl changes in version 5.7.0
\&    perl561delta        Perl changes in version 5.6.1
\&    perl56delta         Perl changes in version 5.6
\&    perl5005delta       Perl changes in version 5.005
\&    perl5004delta       Perl changes in version 5.004
.Ve
.PP
.Vb 2
\&    perlartistic        Perl Artistic License
\&    perlgpl             GNU General Public License
.Ve
.Sh "Language-Specific"
.IX Subsection "Language-Specific"
.Vb 4
\&    perlcn              Perl for Simplified Chinese (in EUC-CN)
\&    perljp              Perl for Japanese (in EUC-JP)
\&    perlko              Perl for Korean (in EUC-KR)
\&    perltw              Perl for Traditional Chinese (in Big5)
.Ve
.Sh "Platform-Specific"
.IX Subsection "Platform-Specific"
.Vb 1
\&    perlsolaris         Perl notes for Solaris
.Ve
.PP
The manpages listed above are installed in the \fI/usr/perl5/man/\fR directory.  
.PP
Extensive additional documentation for Perl modules is available.  This
additional documentation is in the \fI/usr/perl5/man\fR directory.
Some of this additional documentation is distributed standard with Perl,
but you'll also find documentation for any customer-installed third-party
modules there.
.PP
You can view Perl's documentation with \fIman\fR\|(1) by including /usr/perl5/man
in the \s-1MANPATH\s0 environment variable.  Notice that running catman(1M) on the
Perl manual pages is not supported.  For other Solaris-specific details,
see the \s-1NOTES\s0 section below.
.PP
You can also use the supplied \fI/usr/perl5/bin/perldoc\fR script to view
Perl information.
.PP
If something strange has gone wrong with your program and you're not
sure where you should look for help, try the \fB\-w\fR switch first.  It
will often point out exactly where the trouble is.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Perl is a language optimized for scanning arbitrary
text files, extracting information from those text files, and printing
reports based on that information.  It's also a good language for many
system management tasks.  The language is intended to be practical
(easy to use, efficient, complete) rather than beautiful (tiny,
elegant, minimal).
.PP
Perl combines (in the author's opinion, anyway) some of the best
features of C, \fBsed\fR, \fBawk\fR, and \fBsh\fR, so people familiar with
those languages should have little difficulty with it.  (Language
historians will also note some vestiges of \fBcsh\fR, Pascal, and even
\&\s-1BASIC\-PLUS\s0.)  Expression syntax corresponds closely to C
expression syntax.  Unlike most Unix utilities, Perl does not
arbitrarily limit the size of your data\*(--if you've got the memory,
Perl can slurp in your whole file as a single string.  Recursion is of
unlimited depth.  And the tables used by hashes (sometimes called
\&\*(L"associative arrays\*(R") grow as necessary to prevent degraded
performance.  Perl can use sophisticated pattern matching techniques to
scan large amounts of data quickly.  Although optimized for
scanning text, Perl can also deal with binary data, and can make dbm
files look like hashes.  Setuid Perl scripts are safer than C programs
through a dataflow tracing mechanism that prevents many stupid
security holes.
.PP
If you have a problem that would ordinarily use \fBsed\fR or \fBawk\fR or
\&\fBsh\fR, but it exceeds their capabilities or must run a little faster,
and you don't want to write the silly thing in C, then Perl may be for
you.  There are also translators to turn your \fBsed\fR and \fBawk\fR
scripts into Perl scripts.
.PP
But wait, there's more...
.PP
Begun in 1993 (see perlhist), Perl version 5 is nearly a complete
rewrite that provides the following additional benefits:
.IP "\(bu" 4
modularity and reusability using innumerable modules 
.Sp
Described in perlmod, perlmodlib, and perlmodinstall.
.IP "\(bu" 4
embeddable and extensible 
.Sp
Described in perlembed, perlxstut, perlxs, perlcall,
perlguts, and xsubpp.
.IP "\(bu" 4
roll-your-own magic variables (including multiple simultaneous \s-1DBM\s0
implementations)
.Sp
Described in perltie and AnyDBM_File.
.IP "\(bu" 4
subroutines can now be overridden, autoloaded, and prototyped
.Sp
Described in perlsub.
.IP "\(bu" 4
arbitrarily nested data structures and anonymous functions
.Sp
Described in perlreftut, perlref, perldsc, and perllol.
.IP "\(bu" 4
object-oriented programming
.Sp
Described in perlobj, perlboot, perltoot, perltooc,
and perlbot.
.IP "\(bu" 4
support for light-weight processes (threads)
.Sp
Described in perlthrtut and threads.
.IP "\(bu" 4
support for Unicode, internationalization, and localization
.Sp
Described in perluniintro, perllocale and Locale::Maketext.
.IP "\(bu" 4
lexical scoping
.Sp
Described in perlsub.
.IP "\(bu" 4
regular expression enhancements
.Sp
Described in perlre, with additional examples in perlop.
.IP "\(bu" 4
enhanced debugger and interactive Perl environment,
with integrated editor support
.Sp
Described in perldebtut, perldebug and perldebguts.
.IP "\(bu" 4
\&\s-1POSIX\s0 1003.1 compliant library
.Sp
Described in \s-1POSIX\s0.
.PP
Okay, that's \fIdefinitely\fR enough hype.
.SH "AVAILABILITY"
.IX Header "AVAILABILITY"
Perl is available for most operating systems, including virtually
all Unix-like platforms.  See \*(L"Supported Platforms\*(R" in perlport
for a listing.
.SH "ENVIRONMENT"
.IX Header "ENVIRONMENT"
The Perl shipped with Solaris is installed under \fI/usr/perl5\fR rather
than the default \fI/usr/local\fR location. This is so that it can coexist
with a customer-installed Perl in the default \fI/usr/local\fR location.
.PP
Any additional modules that you choose to install will be placed in the
\&\fI/usr/perl5/site_perl/5.8.4\fR directory. The \fI/usr/perl5/vendor_perl\fR
directory is reserved for SMI-provided modules.
.PP
Notice that the Perl utility scripts such as perldoc and perlbug are in
the \fI/usr/perl5/bin\fR directory, so if you wish to use them you need to
include \fI/usr/perl5/bin\fR in your \s-1PATH\s0 environment variable.
.PP
See also the perlrun mapage.
.SH "AUTHOR"
.IX Header "AUTHOR"
Larry Wall <larry@wall.org>, with the help of oodles of other folks.
.PP
If your Perl success stories and testimonials may be of help to others 
who wish to advocate the use of Perl in their applications, 
or if you wish to simply express your gratitude to Larry and the 
Perl developers, please write to perl\-thanks@perl.org .
.SH "FILES"
.IX Header "FILES"
.Vb 1
\& "@INC"                 locations of perl libraries
.Ve
.SH "ATTRIBUTES"
.IX Header "ATTRIBUTES"
See \fIattributes\fR\|(5) for descriptions of the  following  attributes:
.PP
.Vb 19
\&     ____________________________________________________________
\&    |       ATTRIBUTE TYPE        |       ATTRIBUTE VALUE       |
\&    |_____________________________|_____________________________|
\&    | Availability                | SUNWperl583core             |
\&    |                             | SUNWperl583usr              |
\&    |                             | SUNWperl583man              |
\&    |                             | SUNWpl5u SUNWpl5v SUNWpl5p  |
\&    |                             | SUNWpl5m                    |
\&    |_____________________________|_____________________________|
\&    | Interface Stability         |                             |
\&    |_____________________________|_____________________________|
\&    |   o Script interface        | Evolving                    |
\&    |_____________________________|_____________________________|
\&    |   o XSUB interface          | Evolving                    |
\&    |_____________________________|_____________________________|
\&    |   o Binary interface        | Unstable                    |
\&    |_____________________________|_____________________________|
\&    |   o Directory layout        | Evolving                    |
\&    |_____________________________|_____________________________|
.Ve
.SH "SEE ALSO"
.IX Header "SEE ALSO"
.Vb 2
\& perlsolaris(1)         Perl version 5 on Solaris systems
\& perlgcc(1)             Compile perl modules using gcc
.Ve
.PP
.Vb 2
\& a2p                    awk to perl translator
\& s2p                    sed to perl translator
.Ve
.PP
.Vb 3
\& http://www.perl.com/   the Perl Home Page
\& http://www.cpan.org/   the Comprehensive Perl Archive
\& http://www.perl.org/   Perl Mongers (Perl user groups)
.Ve
.SH "DIAGNOSTICS"
.IX Header "DIAGNOSTICS"
The \f(CW\*(C`use warnings\*(C'\fR pragma (and the \fB\-w\fR switch) produces some 
lovely diagnostics.
.PP
See perldiag for explanations of all Perl's diagnostics.  The \f(CW\*(C`use
diagnostics\*(C'\fR pragma automatically turns Perl's normally terse warnings
and errors into these longer forms.
.PP
Compilation errors will tell you the line number of the error, with an
indication of the next token or token type that was to be examined.
(In a script passed to Perl via \fB\-e\fR switches, each
\&\fB\-e\fR is counted as one line.)
.PP
Setuid scripts have additional constraints that can produce error
messages such as \*(L"Insecure dependency\*(R".  See perlsec.
.PP
Did we mention that you should definitely consider using the \fB\-w\fR
switch?
.SH "NOTES"
.IX Header "NOTES"
Perl 5.8.4 has been built to be largefile-aware and  to  use 64\-bit integers,
although the interpreter itself is a 32\-bit application (\s-1LP32\s0).  To view
detailed configuration information, use perl \-V and perlbug \-dv.
.PP
If you wish to build and install add-on modules from \s-1CPAN\s0 using gcc, you can do
so using the /usr/perl5/5.8.4/bin/perlgcc script \- see \f(CWperlgcc(1)\fR for
details.
.PP
If you wish to build and install your own version of Perl, you should \s-1NOT\s0
remove the 5.8.4 version of perl under /usr/perl5, as it is required by
several system utilities.  The Perl package names are as follows:
.PP
.Vb 3
\&     SUNWperl583core    Perl 5.8.4 (Core files)
\&     SUNWperl583usr     Perl 5.8.4 (Non-core files)
\&     SUNWperl583man     Perl 5.8.4 (Manual pages)
.Ve
.PP
Solaris 10 also ships with the 5.6.1 version of Perl that was included in
Solaris 9.  If you are upgrading your system and wish to continue
to use Perl 5.6.1 as the default Perl version you should refer to the
perlsolaris manpage for details of how to do this.  Note that you should
upgrade your installation to use Perl 5.8.4 as soon as is practicable, as
Perl 5.6.1 may be removed in a future release.
.PP
The Perl motto is \*(L"There's more than one way to do it.\*(R"  Divining
how many more is left as an exercise to the reader.
.PP
The three principal virtues of a programmer are Laziness,
Impatience, and Hubris.  See the Camel Book for why.
.SH "BUGS"
.IX Header "BUGS"
The \fB\-w\fR switch is not mandatory.
.PP
Perl is at the mercy of your machine's definitions of various
operations such as type casting, \fIatof()\fR, and floating-point
output with \fIsprintf()\fR.
.PP
If your stdio requires a seek or eof between reads and writes on a
particular stream, so does Perl.  (This doesn't apply to \fIsysread()\fR
and \fIsyswrite()\fR.)
.PP
While none of the built-in data types have any arbitrary size limits
(apart from memory size), there are still a few arbitrary limits:  a
given variable name may not be longer than 251 characters.  Line numbers
displayed by diagnostics are internally stored as short integers,
so they are limited to a maximum of 65535 (higher numbers usually being
affected by wraparound).
.PP
You may mail your bug reports (be sure to include full configuration
information as output by the myconfig program in the perl source
tree, or by \f(CW\*(C`perl \-V\*(C'\fR) to perlbug@perl.org .  If you've succeeded
in compiling perl, the \fBperlbug\fR script in the \fIutils/\fR subdirectory
can be used to help mail in a bug report.
.PP
Perl actually stands for Pathologically Eclectic Rubbish Lister, but
don't tell anyone I said that.
