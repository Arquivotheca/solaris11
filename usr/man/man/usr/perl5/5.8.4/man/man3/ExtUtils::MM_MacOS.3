.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.14
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "ExtUtils::MM_MacOS 3"
.TH ExtUtils::MM_MacOS 3 "2001-09-21" "perl v5.8.4" "Perl Programmers Reference Guide"
.SH "NAME"
ExtUtils::MM_MacOS \- methods to override UN*X behaviour in ExtUtils::MakeMaker
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\& use ExtUtils::MM_MacOS; # Done internally by ExtUtils::MakeMaker if needed
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
MM_MacOS currently only produces an approximation to the correct Makefile.
.IP "maybe_command" 4
.IX Item "maybe_command"
Returns true, if the argument is likely to be a command.
.IP "guess_name" 4
.IX Item "guess_name"
Guess the name of this package by examining the working directory's
name. MakeMaker calls this only if the developer has not supplied a
\&\s-1NAME\s0 attribute.
.IP "macify" 4
.IX Item "macify"
Translate relative Unix filepaths into Mac names.
.IP "patternify" 4
.IX Item "patternify"
Translate Unix filepaths and shell globs to Mac style.
.IP "init_main" 4
.IX Item "init_main"
Initializes some of \s-1NAME\s0, \s-1FULLEXT\s0, \s-1BASEEXT\s0, \s-1DLBASE\s0, \s-1PERL_SRC\s0,
\&\s-1PERL_LIB\s0, \s-1PERL_ARCHLIB\s0, \s-1PERL_INC\s0, \s-1INSTALLDIRS\s0, INST_*, INSTALL*,
\&\s-1PREFIX\s0, \s-1CONFIG\s0, \s-1AR\s0, \s-1AR_STATIC_ARGS\s0, \s-1LD\s0, \s-1OBJ_EXT\s0, \s-1LIB_EXT\s0, \s-1MAP_TARGET\s0,
\&\s-1LIBPERL_A\s0, \s-1VERSION_FROM\s0, \s-1VERSION\s0, \s-1DISTNAME\s0, \s-1VERSION_SYM\s0.
.IP "init_others" 4
.IX Item "init_others"
Initializes \s-1LDLOADLIBS\s0, \s-1LIBS\s0
.IP "init_platform" 4
.IX Item "init_platform"
Add \s-1MACPERL_SRC\s0 \s-1MACPERL_LIB\s0
.IP "platform_constants" 4
.IX Item "platform_constants"
Add \s-1MACPERL_SRC\s0 \s-1MACPERL_LIB\s0 \s-1MACLIBS_68K\s0 \s-1MACLIBS_PPC\s0 \s-1MACLIBS_SC\s0 \s-1MACLIBS_MRC\s0
\&\s-1MACLIBS_ALL_68K\s0 \s-1MACLIBS_ALL_PPC\s0 \s-1MACLIBS_SHARED\s0
.Sp
\&\s-1XXX\s0 Few are initialized.  How many of these are ever used?
.IP "init_dirscan" 4
.IX Item "init_dirscan"
Initializes \s-1DIR\s0, \s-1XS\s0, \s-1PM\s0, C, O_FILES, H, \s-1PL_FILES\s0, MAN*PODS, \s-1EXE_FILES\s0.
.IP "init_VERSION (o)" 4
.IX Item "init_VERSION (o)"
Change \s-1DEFINE_VERSION\s0 and \s-1XS_DEFINE_VERSION\s0
.IP "special_targets (o)" 4
.IX Item "special_targets (o)"
Add .INCLUDE
.IP "static (o)" 4
.IX Item "static (o)"
Defines the static target.
.IP "dlsyms (o)" 4
.IX Item "dlsyms (o)"
Used by MacOS to define \s-1DL_FUNCS\s0 and \s-1DL_VARS\s0 and write the *.exp
files.
.IP "dynamic (o)" 4
.IX Item "dynamic (o)"
Defines the dynamic target.
.IP "clean (o)" 4
.IX Item "clean (o)"
Defines the clean target.
.IP "clean_subdirs_target" 4
.IX Item "clean_subdirs_target"
MacOS semantics for changing directories and checking for existence
very different than everyone else.
.IP "realclean (o)" 4
.IX Item "realclean (o)"
Defines the realclean target.
.IP "realclean_subdirs_target" 4
.IX Item "realclean_subdirs_target"
MacOS semantics for changing directories and checking for existence
very different than everyone else.
.IP "rulez (o)" 4
.IX Item "rulez (o)"
.PD 0
.IP "processPL (o)" 4
.IX Item "processPL (o)"
.PD
Defines targets to run *.PL files.
.IP "os_flavor" 4
.IX Item "os_flavor"
MacOS Classic is MacOS and MacOS Classic.
